// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  name        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  studyPlans  StudyPlan[]
  schedules   Schedule[]
}

model StudyPlan {
  id               Int       @id @default(autoincrement())
  userId           String
  exam             String
  studyDuration    String
  dailyHours       Int
  subjects         String[]
  optionals        String[]
  studyStyle       String[]
  numberOfAttempts Int       @default(1)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  schedules        Schedule[]
  studySessions    StudySession[]
  user             User      @relation(fields: [userId], references: [id])
}

model Schedule {
  id          Int          @id @default(autoincrement())
  type        ScheduleType @default(DAILY)
  studyPlanId Int
  userId      String
  dayNumber   Int
  focus       String
  sessions    Json
  breaks      Json
  dailyTargets Json
  metadata    Json
  studyPlan   StudyPlan   @relation(fields: [studyPlanId], references: [id], onDelete: Cascade)
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([studyPlanId])
  @@index([userId])
}

model StudySession {
  id          Int       @id @default(autoincrement())
  studyPlanId Int
  day         String
  topics      String[]
  completed   Boolean   @default(false)
  resources   Resource[] @relation("SessionResources")
  studyPlan   StudyPlan @relation(fields: [studyPlanId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([studyPlanId])
}

model Resource {
  id              Int          @id @default(autoincrement())
  studySessionId  Int
  name            String
  type            String
  studySession    StudySession @relation("SessionResources", fields: [studySessionId], references: [id], onDelete: Cascade)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@index([studySessionId])
}

enum ScheduleType {
  DAILY
  WEEKLY
  MONTHLY
}