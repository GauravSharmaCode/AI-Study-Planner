// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id             String     @id @default(uuid())
  email          String     @unique
  name           String?
  password       String?    // Only if using email/password auth
  googleId       String?    @unique
  studyPlans     StudyPlan[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model StudyPlan {
  id             String       @id @default(uuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  exam           String
  studyDuration  String
  dailyHours     Int
  subjects       String[]     // Array of subjects
  optionals      String[]     // Optional subjects
  studyStyle     String[]     // ["Videos", "Books", "Practice Questions"]
  numberOfAttempts Int
  studySessions  StudySession[]
  createdAt      DateTime     @default(now())
}

model StudySession {
  id             String      @id @default(uuid())
  studyPlanId    String
  studyPlan      StudyPlan   @relation(fields: [studyPlanId], references: [id], onDelete: Cascade)
  day           Int
  topics        String[]    // List of topics
  completed     Boolean     @default(false)
  resources     Resource[]
}

model Resource {
  id            String      @id @default(uuid())
  studySessionId String
  studySession  StudySession @relation(fields: [studySessionId], references: [id], onDelete: Cascade)
  type          String      // "video", "book", "practice-site"
  url           String
}
