2025-03-31T03:48:42.500Z info [unknown -> unknown]: Schedule Service initialized
2025-03-31T03:48:44.911Z info [unknown -> unknown]: Test user created with id: 2182fdff-097f-4d93-b726-c4bb8d2ee403
2025-03-31T03:48:44.913Z info [unknown -> unknown]: Creating new study plan
2025-03-31T03:48:47.212Z info [unknown -> unknown]: Study Plan Created:
2025-03-31T03:48:52.517Z error [unknown -> unknown]: Error fetching plan with id 5: Study plan with id 5 not found
Error: Study plan with id 5 not found
    at Object.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:79:19)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:426:13)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T03:48:52.780Z error [unknown -> unknown]: Error deleting plan with id 5: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:128:16)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:438:17)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T03:51:53.650Z info [unknown -> unknown]: Schedule Service initialized
2025-03-31T03:51:56.013Z info [unknown -> unknown]: Test user created with id: fd65f112-e5fc-4f33-bdfa-a955b7a2b5df
2025-03-31T03:51:56.014Z info [unknown -> unknown]: Creating new study plan
2025-03-31T03:51:58.285Z info [unknown -> unknown]: Study Plan Created:
2025-03-31T03:52:03.529Z error [unknown -> unknown]: Error fetching plan with id 6: Study plan with id 6 not found
Error: Study plan with id 6 not found
    at Object.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:79:19)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:426:13)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T03:52:03.789Z error [unknown -> unknown]: Error deleting plan with id 6: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:128:16)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:438:17)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T03:57:02.908Z info [unknown -> unknown]: Schedule Service initialized
2025-03-31T03:57:05.122Z info [unknown -> unknown]: Test user created with id: 2ec19b0d-ff8e-42d9-9e93-492cc46bf601
2025-03-31T03:57:05.125Z info [unknown -> unknown]: Creating new study plan
2025-03-31T03:57:07.355Z info [unknown -> unknown]: Study Plan Created:
2025-03-31T03:57:12.506Z error [unknown -> unknown]: Error fetching plan with id 7: Study plan with id 7 not found
Error: Study plan with id 7 not found
    at Object.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:79:19)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:426:13)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T03:57:12.760Z error [unknown -> unknown]: Error deleting plan with id 7: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:128:16)
    at async testStudyPlanCRUD (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:438:17)
    at async runTests (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test-script.js:491:9)
2025-03-31T04:08:11.106Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:08:11.114Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:08:14.255Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:31:29)
2025-03-31T04:08:14.257Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:31:29)
2025-03-31T04:08:14.263Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:08:14.265Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:15:50.093Z info [C -> new]: Schedule Service initialized
2025-03-31T04:15:50.131Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:15:50.133Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:15:54.363Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:32:29)
2025-03-31T04:15:54.366Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:32:29)
2025-03-31T04:15:54.371Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:15:54.372Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:15:54.377Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:15:54.379Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:15:54.620Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:196:29)
2025-03-31T04:15:54.622Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:196:29)
2025-03-31T04:15:54.624Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:15:54.625Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:17:41.544Z info [C -> new]: Schedule Service initialized
2025-03-31T04:17:41.579Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:17:41.580Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:17:43.960Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:17:43.963Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:17:43.967Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:17:43.969Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:17:53.761Z info [C -> new]: Schedule Service initialized
2025-03-31T04:17:53.793Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:17:53.794Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:17:55.984Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:17:55.985Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:17:55.987Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:17:55.987Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:18:45.752Z info [C -> new]: Schedule Service initialized
2025-03-31T04:18:45.787Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:18:45.788Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:18:48.048Z error [C -> Object.createPlan]: Error creating study plan: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:18:48.050Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.create()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Object.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:10:27)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:199:29)
2025-03-31T04:18:48.055Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:18:48.056Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:00.195Z info [C -> new]: Schedule Service initialized
2025-03-31T04:22:00.230Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:02.545Z info [C -> Context.<anonymous>]: Test user created with id: 025ed49a-d398-42e5-b546-392823a8dd7b
2025-03-31T04:22:02.547Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:04.656Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:05.591Z info [C -> Context.<anonymous>]: Test study plan created with id: 14
2025-03-31T04:22:05.594Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:05.595Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:05.597Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:05.598Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:05.599Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:22:09.184Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:22:09.186Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:22:09.186Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:22:09.187Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:22:11.186Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:22:11.685Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["70a7db7d-d5db-4b09-8a48-b4d2b29376b8",14,"025ed49a-d398-42e5-b546-392823a8dd7b","DAILY",1,"Introduction to the Fundamentals",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture and Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Matter and Energy"],"type":"Reading and Note-taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Reading Comprehension"],"type":"Exercises and Review"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","Early Human History"],"type":"Documentary and Discussion"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the Fundamentals","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture and Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Matter and Energy"],"type":"Reading and Note-taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Reading Comprehension"],"type":"Exercises and Review"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","Early Human History"],"type":"Documentary and Discussion"}]},"2025-03-31 04:22:10.943 UTC","2025-03-31 04:22:10.943 UTC"]
2025-03-31T04:22:12.183Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["70a7db7d-d5db-4b09-8a48-b4d2b29376b8",1,0]
2025-03-31T04:22:12.684Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [14,0]
2025-03-31T04:22:13.182Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["025ed49a-d398-42e5-b546-392823a8dd7b",0]
2025-03-31T04:22:13.430Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:22:13.432Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:22:13.434Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 70a7db7d-d5db-4b09-8a48-b4d2b29376b8
2025-03-31T04:22:13.441Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:22:13.442Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:22:13.948Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["70a7db7d-d5db-4b09-8a48-b4d2b29376b8"]
2025-03-31T04:22:13.950Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:22:14.896Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:14.897Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:15.141Z info [C -> Context.<anonymous>]: Test user created with id: 5a3cba00-2af0-4472-a31e-cf438aba362e
2025-03-31T04:22:15.143Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:15.384Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:15.843Z info [C -> Context.<anonymous>]: Test study plan created with id: 15
2025-03-31T04:22:15.845Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:15.846Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:15.847Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:15.847Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:15.848Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:22:26.506Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:22:26.507Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:22:26.508Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:22:26.509Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:22:26.766Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:22:27.016Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:22:27.272Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["2832aa36-a7ae-474e-9d3b-7f5d650a7469",15,"5a3cba00-2af0-4472-a31e-cf438aba362e","DAILY",1,"Introduction to Fundamentals",[],[{"time":"9:00 AM - 10:30 AM","type":"Study Session: Concept Introduction and Review of Basic Principles in Mathematics to be used in this course (Algebra, Calculus). Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 10:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."},{"time":"11:00 AM - 12:30 PM","type":"Study Session: Basic Concepts in Physics(Kinematics and Dynamics).  Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 12:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."},{"time":"2:00 PM - 3:30 PM","type":"Study Session: Basic Concepts in Chemistry(Stoichiometry and Basic Reactions).  Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 3:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Fundamentals","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Study Session: Concept Introduction and Review of Basic Principles in Mathematics to be used in this course (Algebra, Calculus). Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 10:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."},{"time":"11:00 AM - 12:30 PM","type":"Study Session: Basic Concepts in Physics(Kinematics and Dynamics).  Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 12:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."},{"time":"2:00 PM - 3:30 PM","type":"Study Session: Basic Concepts in Chemistry(Stoichiometry and Basic Reactions).  Solve basic problems. Check the solutions in the internet or books. Ask friends for help if the problems are very difficult. Do not spend more than 10 mins in each problem to keep the momentum up and the focus on the goal for the session. Use a textbook or online resource for reference on basic problems and rules.) .   [Resource : Khan Academy, MIT OpenCourseware, or similar online platforms]  Check progress on problems. Have a 10 min break and continue reviewing other rules until 3:30 am. Make sure to understand the concept but do not spend so much time in a topic. The important thing is to have the fundamentals to have a good foundation in the course. If the topic is difficult seek help for 15 mins then move on. Do not aim for perfection but aim for progress. Progress is better than perfection in the long run. Plan is to revisit the topic again at a later time once you are well adjusted and can handle the pressure with ease.  Avoid burn out. It is very important to have 90 days of consistent study session. Consistency is key to success.  Prepare the lessons for the next session. Make sure you have the materials handy to save time during the study session.  Also be ready to accept the learning challenges for the upcoming days. Always be positive and believe in yourself. You can do it.  You are already here and you need to do the best of your abilities. Just do it. Do not think too much. Just do it.  One step at a time. Be focused on your goal. Be consistent in the habit.  90 days of consistent effort and you will succeed.   I know you can do it. Now is the time to prove that you are what you think you are. Great.  Be great. Think Great.  Do great.  It is up to you. You have the power to decide on your future. Make it great and be happy on your achievements.  It is an awesome time to learn and improve yourself. Learning never stops.  Improvement is life. Always aim for the best in you. Think of all the great people who have achieved their dreams. They believed in themselves and worked towards it with perseverance and determination.  You are like them. You have the potential to be great. Unleash the power in you. You can do it.  Do not be afraid. It is ok to fail as long as you learn from your mistakes. Mistakes are your teachers. Never forget them.   Always be happy and smile.  Believe in yourself and you will succeed.  Make the world a better place. You are the best.  I believe in you.  Have a great day ahead. Good luck on your journey.   Never give up.  Remember why you started and where you are going. Be positive and do not listen to negative people. Avoid negative thoughts and always think positive. You are awesome.  God is with you.   You can do it. Believe in yourself."}]},"2025-03-31 04:22:26.512 UTC","2025-03-31 04:22:26.512 UTC"]
2025-03-31T04:22:27.770Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["2832aa36-a7ae-474e-9d3b-7f5d650a7469",1,0]
2025-03-31T04:22:28.018Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [15,0]
2025-03-31T04:22:28.267Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5a3cba00-2af0-4472-a31e-cf438aba362e",0]
2025-03-31T04:22:28.575Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:22:28.577Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:22:28.579Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 2832aa36-a7ae-474e-9d3b-7f5d650a7469
2025-03-31T04:22:28.582Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:22:28.583Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:22:28.840Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["2832aa36-a7ae-474e-9d3b-7f5d650a7469"]
2025-03-31T04:22:28.840Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:22:29.806Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:29.808Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:30.050Z info [C -> Context.<anonymous>]: Test user created with id: eba18d9c-d950-4b0e-83ae-efa1b2ec5d51
2025-03-31T04:22:30.052Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:30.293Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:30.772Z info [C -> Context.<anonymous>]: Test study plan created with id: 16
2025-03-31T04:22:30.773Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:30.774Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:30.775Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:30.775Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:30.776Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:22:33.579Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:22:33.580Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:22:33.580Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:22:33.581Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:22:33.833Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:22:34.087Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["1bd98dcb-34ec-4453-8031-8f4724e7e630",16,"eba18d9c-d950-4b0e-83ae-efa1b2ec5d51","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Comprehension on Data Structures Fundamentals and Algorithms Basics"},{"time":"11:00 AM - 12:30 PM","type":"Practice problems on arrays and linked lists"},{"time":"2:00 PM - 3:30 PM","type":"Review of Big O notation; Time and space complexity analysis"},{"time":"4:00 PM - 5:30 PM","type":"Coding exercise: Implementing basic sorting algorithm"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Comprehension on Data Structures Fundamentals and Algorithms Basics"},{"time":"11:00 AM - 12:30 PM","type":"Practice problems on arrays and linked lists"},{"time":"2:00 PM - 3:30 PM","type":"Review of Big O notation; Time and space complexity analysis"},{"time":"4:00 PM - 5:30 PM","type":"Coding exercise: Implementing basic sorting algorithm"}]},"2025-03-31 04:22:33.583 UTC","2025-03-31 04:22:33.583 UTC"]
2025-03-31T04:22:34.351Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["1bd98dcb-34ec-4453-8031-8f4724e7e630",1,0]
2025-03-31T04:22:34.605Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [16,0]
2025-03-31T04:22:34.860Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["eba18d9c-d950-4b0e-83ae-efa1b2ec5d51",0]
2025-03-31T04:22:35.116Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:22:35.118Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:22:35.119Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 1bd98dcb-34ec-4453-8031-8f4724e7e630
2025-03-31T04:22:35.124Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:22:35.125Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:22:35.377Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["1bd98dcb-34ec-4453-8031-8f4724e7e630"]
2025-03-31T04:22:35.378Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:22:35.857Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:35.860Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:36.103Z info [C -> Context.<anonymous>]: Test user created with id: c1dde438-d031-4702-a006-80ce8849c80d
2025-03-31T04:22:36.104Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:36.346Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:36.828Z info [C -> Context.<anonymous>]: Test study plan created with id: 17
2025-03-31T04:22:36.830Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:36.831Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:36.832Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:36.832Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:36.833Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:22:38.654Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:22:38.655Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:22:38.655Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:22:38.656Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:22:38.906Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:22:39.155Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["98b7bfb8-e466-4e14-9ea7-8c8a0f156458",17,"c1dde438-d031-4702-a006-80ce8849c80d","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurements"],"type":"Reading & Exercises"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Fundamentals","Sentence Structure"],"type":"Interactive Session"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","Early Humans"],"type":"Note Taking & Review"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurements"],"type":"Reading & Exercises"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Fundamentals","Sentence Structure"],"type":"Interactive Session"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","Early Humans"],"type":"Note Taking & Review"}]},"2025-03-31 04:22:38.658 UTC","2025-03-31 04:22:38.658 UTC"]
2025-03-31T04:22:39.405Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["98b7bfb8-e466-4e14-9ea7-8c8a0f156458",1,0]
2025-03-31T04:22:39.654Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [17,0]
2025-03-31T04:22:39.902Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["c1dde438-d031-4702-a006-80ce8849c80d",0]
2025-03-31T04:22:40.152Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:22:40.154Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:22:40.155Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 98b7bfb8-e466-4e14-9ea7-8c8a0f156458
2025-03-31T04:22:40.156Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:22:40.658Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["98b7bfb8-e466-4e14-9ea7-8c8a0f156458",1,0]
2025-03-31T04:22:40.907Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [17,0]
2025-03-31T04:22:40.909Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:22:40.912Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:22:40.913Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:22:41.167Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["98b7bfb8-e466-4e14-9ea7-8c8a0f156458"]
2025-03-31T04:22:41.170Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:22:41.644Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:41.645Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:41.886Z info [C -> Context.<anonymous>]: Test user created with id: 1048993c-f28a-458c-85aa-f84a279e1c51
2025-03-31T04:22:41.887Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:42.120Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:42.580Z info [C -> Context.<anonymous>]: Test study plan created with id: 18
2025-03-31T04:22:42.581Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:42.582Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:42.583Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:42.584Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:42.584Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:22:46.400Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:22:46.401Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:22:46.401Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:22:46.402Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:22:46.651Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:22:46.898Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:22:47.146Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["2eb2856a-1d19-408c-8c4b-e300c2ac5c55",18,"1048993c-f28a-458c-85aa-f84a279e1c51","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1 (Core Concepts, Session 1/2): Study the basics of the foundations of this study schedule. (e.g. foundational principles, theories, or definitions). This session focuses on familiarizing yourself with the core language and background context, and how it applies to your daily targets and can be used later for more complex applications later on in the course. Read the assigned chapters and take notes. If applicable, watch related introductory videos, and write your own explanation of the main ideas of the session's purpose. If this study course has review problems, work through the example problems to confirm your understanding and be able to have a grasp on what to expect for the course. This ensures a solid foundation for future topics, and prepares you for the session 2 in the afternoon. (e.g. \"Introduction to Algorithms\", \"Basic Economic Principles\", \"Overview of Quantum Mechanics\")"},{"time":"2:00 PM - 4:00 PM","type":"Practice Session: Core Concepts, Session 2/2: (e.g. \"Practice Basic Programming Problems\", \"Solve Introductory Economic Problems\", \"Solve Basic Physics problems\") This session focuses on solving simple, directed problems or questions that build upon what was learned in the morning session. The intent is to provide simple challenges that build your skills. As such, do not be afraid to check your answers after completion. If you get stuck or do not understand a question, consult a teacher or AI assistant, and do not proceed until you understand the answer. This prepares you for session 3 and ensures you are keeping up with the course."},{"time":"7:00 PM - 8:00 PM","type":"Review and Preview Session (Review of Day 1 and Preview of Day 2): To ensure that you are not falling behind and understand what you have learned, at the end of the day, briefly review your notes from the core concept sessions, and redo questions you did not understand. If applicable, solve additional questions that were not assigned to confirm your understanding. Furthermore, take a moment to preview what you will be learning tomorrow. This ensures that you are constantly in the loop and builds momentum as you progress, and helps you understand what is needed to keep up. This session does not need to be long - just long enough to give a brief summary of what you have done and an expectation of what to expect for tomorrow."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1 (Core Concepts, Session 1/2): Study the basics of the foundations of this study schedule. (e.g. foundational principles, theories, or definitions). This session focuses on familiarizing yourself with the core language and background context, and how it applies to your daily targets and can be used later for more complex applications later on in the course. Read the assigned chapters and take notes. If applicable, watch related introductory videos, and write your own explanation of the main ideas of the session's purpose. If this study course has review problems, work through the example problems to confirm your understanding and be able to have a grasp on what to expect for the course. This ensures a solid foundation for future topics, and prepares you for the session 2 in the afternoon. (e.g. \"Introduction to Algorithms\", \"Basic Economic Principles\", \"Overview of Quantum Mechanics\")"},{"time":"2:00 PM - 4:00 PM","type":"Practice Session: Core Concepts, Session 2/2: (e.g. \"Practice Basic Programming Problems\", \"Solve Introductory Economic Problems\", \"Solve Basic Physics problems\") This session focuses on solving simple, directed problems or questions that build upon what was learned in the morning session. The intent is to provide simple challenges that build your skills. As such, do not be afraid to check your answers after completion. If you get stuck or do not understand a question, consult a teacher or AI assistant, and do not proceed until you understand the answer. This prepares you for session 3 and ensures you are keeping up with the course."},{"time":"7:00 PM - 8:00 PM","type":"Review and Preview Session (Review of Day 1 and Preview of Day 2): To ensure that you are not falling behind and understand what you have learned, at the end of the day, briefly review your notes from the core concept sessions, and redo questions you did not understand. If applicable, solve additional questions that were not assigned to confirm your understanding. Furthermore, take a moment to preview what you will be learning tomorrow. This ensures that you are constantly in the loop and builds momentum as you progress, and helps you understand what is needed to keep up. This session does not need to be long - just long enough to give a brief summary of what you have done and an expectation of what to expect for tomorrow."}]},"2025-03-31 04:22:46.404 UTC","2025-03-31 04:22:46.404 UTC"]
2025-03-31T04:22:47.396Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["2eb2856a-1d19-408c-8c4b-e300c2ac5c55",1,0]
2025-03-31T04:22:47.644Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [18,0]
2025-03-31T04:22:47.892Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["1048993c-f28a-458c-85aa-f84a279e1c51",0]
2025-03-31T04:22:48.141Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:22:48.143Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:22:48.144Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 2eb2856a-1d19-408c-8c4b-e300c2ac5c55
2025-03-31T04:22:48.145Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:22:48.653Z info [C -> EventEmitter.<anonymous>]: Prisma Query: UPDATE "public"."Schedule" SET "focus" = $1, "targets" = $2, "updatedAt" = $3 WHERE ("public"."Schedule"."id" = $4 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["Updated Focus Area",["New Target 1","New Target 2"],"2025-03-31 04:22:48.149 UTC","2eb2856a-1d19-408c-8c4b-e300c2ac5c55"]
2025-03-31T04:22:48.654Z info [C -> ScheduleService.updateSchedule]: Updated Schedule:
2025-03-31T04:22:48.657Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:22:48.658Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:22:48.913Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["2eb2856a-1d19-408c-8c4b-e300c2ac5c55"]
2025-03-31T04:22:48.915Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:22:49.851Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:22:49.853Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:22:50.097Z info [C -> Context.<anonymous>]: Test user created with id: 0588b2e2-5e19-4f60-809b-0ec8905f7b47
2025-03-31T04:22:50.098Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:22:50.340Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:22:50.799Z info [C -> Context.<anonymous>]: Test study plan created with id: 19
2025-03-31T04:22:50.801Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:22:50.801Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:22:50.802Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:22:50.802Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:22:50.803Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:23:05.817Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:05.818Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:06.073Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:23:06.325Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["2eb2856a-1d19-408c-8c4b-e300c2ac5c55"]
2025-03-31T04:23:06.337Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 2eb2856a-1d19-408c-8c4b-e300c2ac5c55: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:06.339Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:06.341Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:23:06.833Z info [C -> Context.<anonymous>]: Test user created with id: 40e04a4d-dac3-414f-96c1-7005f1380481
2025-03-31T04:23:06.834Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:23:07.300Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:23:07.760Z info [C -> Context.<anonymous>]: Test study plan created with id: 20
2025-03-31T04:23:07.762Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:23:07.763Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:23:07.765Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:23:07.766Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:23:07.768Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:23:09.474Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:23:09.474Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:23:09.475Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:23:09.475Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:23:09.726Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:23:09.979Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a",19,"0588b2e2-5e19-4f60-809b-0ec8905f7b47","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 12:00 PM","type":"Lecture/Study Session 1 - Fundamentals of Programming with Python (Variables, Data Types, Operators). This includes exercises to practice with the materials discussed..  The focus is on hands-on practice. Also review previous work before you start new exercises..  Remember to also get enough rest and sleep..  Go easy on yourself..  Do not overwork yourself..  Study in chunks of time and give yourself breaks..  Use time blocking for your sessions..  Make use of the pomodoro method with each time block session..  For example, 25 minutes on and 5 minutes break..  Take longer breaks for more time blocks..  Example, after 4 pomodoro time blocks, take 30 minutes of break..  Also, make sure to review your previous material for about 10 to 15 minutes before starting on new material..  This helps with recall and memorization of material..  Remember the study mantra. Review. Understand. Memorize. Repeat. Continue.  So continue this cycle over and over again until the end of the study session. Always study a little bit each day..  Consistency is better than short bursts of intense studying..  Get enough rest and eat regularly so your brain has the fuel it needs..  Study early in the morning so your mind is fresh and ready to learn..  Start off the study sessions with a positive affirmation..  Believe in yourself and that you will pass the exam..  If you believe it, you will achieve it..  Visualize success..  See yourself getting good scores and succeeding in the course..  The mind is very powerful and it can create reality..  Also, be sure to be free of distractions while studying..  If something is distracting you, fix it, so that you are free of distractions..  Eliminate all distractions, including social media notifications, TV, other websites and other things that take your attention away from studying..  Also, find a quiet place where you can study in peace..  Finally, before starting, set goals and objectives for the study session and what needs to be accomplished, so you have something to aim for..  Good luck and have fun learning..  Finally, believe in the learning process, and the results will show..  It is like the bamboo tree which needs to establish its root system first before shooting up after 5 years..  Think of yourself building the roots of knowledge, so that later on, you will see rapid and fast growth in knowledge..  It may not be immediately apparent that you are learning now, but later you will see the benefits..  So keep the faith, keep the belief, keep studying and keep working at it until you succeed..  Never give up and never quit..  Remember that many people before you have succeeded, so you can too..  You are just as smart and capable as they are, so it is possible..  Just keep at it until you succeed..  Also, use all the resources available..  Go on the internet and watch videos, read articles and tutorials to reinforce what you learn..  Take the concepts and apply them in different ways to see how they work and to deepen understanding..  Repetition and application of concepts and ideas is the key to mastery..  The more you repeat and practice, the better you get..  So start practicing today..  You will make mistakes at first, but over time, you will improve..  The key is to learn from those mistakes and correct them so you do not repeat them again..  Review your mistakes so you understand why you made them and then you will learn faster..  Good luck, and happy studying..  Remember to make studying fun, so it is something you look forward to each day..  Make it a habit, like eating or sleeping, so that it becomes automatic and effortless..  The key to success is to turn studying into a habit and a part of your daily routine..  Also, remember to focus on the process and not on the results..  The process is what is important and is within your control..  The results will naturally follow from the process..  So focus on the process and do your best and then the results will come..  Always trust in the process..  The process is the roadmap to success..  If you follow the process, you will succeed..  There is no other way..  Just keep following the process and you will be amazed at what you can accomplish..  Never ever give up until you have finished the course and received your certification..  Even if you have setbacks, keep going and keep following the process..  You will get there in the end, as long as you never give up..  So never give up and keep studying and working hard and following the process and you will succeed..  Good luck and happy studying and have fun..  Remember to study smart and not hard..  Smart study means studying efficiently and effectively and not wasting time on things that are not important..  So focus on the important things and study them well and then you will succeed..  Also, remember to stay positive and have a good attitude..  Your attitude is very important and will affect your success..  So always stay positive and have a good attitude and you will succeed..  Finally, before you start, meditate for about 5 minutes to clear your mind and get focused..  This will help you concentrate and study better..  So meditate before you start and you will study better..  Good luck and have fun studying..  Finally, do not compare yourself to others and their speed of learning..  Everyone is different and has different rates of learning..  So do not be discouraged if you learn slower than others..  Just focus on your own learning and do your best and you will succeed..  Also, celebrate your small wins and successes..  This will keep you motivated and energized to keep learning..  So celebrate your small wins and successes and you will keep learning..  Good luck and have fun studying..  Remember to take care of yourself physically, mentally and emotionally..  Your well-being is very important and will affect your success..  So take care of yourself and you will succeed..  Finally, before starting, do a quick review of the material from the previous day..  This will refresh your memory and help you learn better..  So review the material from the previous day before starting and you will learn better..  Good luck and have fun studying..  Remember that learning is a journey and not a destination..  So enjoy the journey and have fun learning..  The journey is just as important as the destination..  So enjoy the journey and have fun learning..  Good luck and have fun studying..  Remember that knowledge is power and that the more you learn, the more powerful you become..  So keep learning and keep growing and keep becoming more powerful..  Good luck and have fun studying..  Remember that you are capable of anything you set your mind to..  So believe in yourself and you will succeed..  Good luck and have fun studying..  Finally, remember to have fun and enjoy the process of learning..  If you are not having fun, then you are not learning..  So have fun and enjoy the process of learning..  Good luck and have fun studying"},{"time":"2:00 PM - 5:00 PM","type":"Lab/Coding Session - Practice writing basic Python programs.  Use online resources and tutorials to explore different applications and algorithms. Focus on debugging. Always use a text editor or IDE and type in the code..  Do not just copy and paste..  Typing in the code enforces memorization of the syntax and structure of the code..  Also, write comments into your code so that you understand the purpose of each section and how it functions..  For more complex programs, first use a diagramming software to visualize the design and structure of the program before you start writing it..  This way, you will have a mental picture of what the program is supposed to do and how it is structured.  This will make coding a lot easier and help prevent problems and mistakes down the road..  Also, remember to back up your code and programs regularly to prevent accidental loss of data..  Use online services such as Github, Dropbox and Google Drive for automatic backup..  Use version control to manage your code and keep track of changes..  This helps you revert back to a previous working copy if there are problems..  Also, remember to test your code thoroughly to find bugs and fix them..  Write test cases to test your code and ensure that it is working correctly..  Use debugging tools such as debuggers to help find bugs and fix them..  Also, remember to refactor your code regularly to make it cleaner and more readable..  Refactoring is the process of improving the design of your code without changing its functionality..  This makes your code easier to understand and maintain..  Also, remember to document your code thoroughly so that others can understand it..  Write comments to explain what your code does and how it works..  Use documentation tools such as Javadoc and Doxygen to generate documentation from your code..  Also, remember to reuse code whenever possible..  Reuse existing libraries and frameworks instead of writing your own code..  This saves time and effort and reduces the risk of bugs..  Also, remember to collaborate with others on coding projects..  Work with other developers to share ideas and learn from each other..  Use online collaboration tools such as Github and Bitbucket to collaborate on coding projects..  Also, remember to keep your code secure..  Follow security best practices to prevent vulnerabilities in your code..  Use security tools such as static analysis and dynamic analysis to find security vulnerabilities..  Also, remember to keep your code up to date..  Update your libraries and frameworks regularly to fix security vulnerabilities and improve performance..  Also, remember to learn new coding languages and technologies..  Keep learning new things and stay up to date with the latest technologies..  This will help you stay competitive in the job market..  Also, remember to practice coding regularly..  Practice coding every day to improve your skills..  Use online coding challenges and contests to practice your skills..  Also, remember to have fun coding..  Coding is a creative activity and should be enjoyable..  So have fun coding and you will learn more easily..  Finally, remember to be patient..  Coding can be challenging and frustrating at times..  But be patient and keep trying and you will eventually succeed..  Also, remember to take breaks..  Coding can be mentally exhausting..  So take breaks regularly to rest your mind..  Get up and walk around or do something else to relax..  Also, remember to get enough sleep..  Sleep is important for learning and memory..  So get enough sleep every night..  Also, remember to eat healthy foods..  Healthy foods are important for brain function..  So eat healthy foods every day..  Also, remember to exercise regularly..  Exercise is good for your brain and body..  So exercise regularly..  Also, remember to reduce stress..  Stress can impair learning and memory..  So reduce stress..  Use stress management techniques such as meditation and yoga..  Also, remember to stay organized..  Being organized can help you focus and learn more effectively..  So stay organized..  Use tools such as to-do lists and calendars to stay organized..  Also, remember to be persistent..  Learning takes time and effort..  So be persistent and don't give up..  Also, remember to believe in yourself..  You can do it..  Believe in yourself and you will succeed..  Also, remember to seek help when you need it..  Don't be afraid to ask for help..  There are many resources available to help you learn..  So seek help when you need it..  Also, remember to be open-minded..  Be open to new ideas and new ways of learning..  Also, remember to be flexible..  Be flexible in your approach to learning..  Things may not always go as planned..  So be flexible and adapt to change..  Also, remember to be resilient..  Setbacks are a part of learning..  So be resilient and don't let setbacks discourage you..  Also, remember to be curious..  Curiosity is a great motivator for learning..  So be curious and explore new things..  Also, remember to be creative..  Creativity can help you learn in new and innovative ways..  Also, remember to be collaborative..  Collaborating with others can help you learn more effectively..  Also, remember to be communicative..  Communicating your ideas and knowledge to others can help you learn better..  Also, remember to be conscientious..  Conscientiousness can help you stay focused and on track..  Also, remember to be compassionate..  Compassion can help you be more understanding and supportive of others..  Also, remember to be grateful..  Gratitude can help you appreciate the things you have and be more positive..  Also, remember to be humble..  Humility can help you learn from your mistakes and grow as a person..  Also, remember to be kind..  Kindness can help you build relationships and make the world a better place..  Also, remember to be loving..  Love can help you connect with others and experience joy..  Also, remember to be forgiving..  Forgiveness can help you let go of anger and resentment..  Also, remember to be truthful..  Truthfulness can help you build trust and integrity..  Also, remember to be honest..  Honesty can help you be transparent and ethical..  Also, remember to be ethical..  Ethics can help you make good decisions and do the right thing..  Also, remember to be responsible..  Responsibility can help you be accountable for your actions..  Also, remember to be disciplined..  Discipline can help you stay focused and achieve your goals..  Also, remember to be motivated..  Motivation can help you stay enthusiastic and engaged..  Also, remember to be passionate..  Passion can help you be creative and innovative..  Also, remember to be enthusiastic..  Enthusiasm can help you be contagious and inspiring..  Also, remember to be optimistic..  Optimism can help you be hopeful and confident..  Also, remember to be resourceful..  Resourcefulness can help you find creative solutions to problems..  Also, remember to be adaptable..  Adaptability can help you adjust to changing circumstances..  Also, remember to be innovative..  Innovation can help you create new and better things..  Also, remember to be entrepreneurial..  Entrepreneurship can help you start your own business and create wealth..  Also, remember to be philanthropic..  Philanthropy can help you give back to society and make a difference..  Also, remember to be spiritual..  Spirituality can help you connect with something larger than yourself and find meaning in life..  Also, remember to be mindful..  Mindfulness can help you be present in the moment and appreciate the beauty of life..  Also, remember to be grateful for all that you have.."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 12:00 PM","type":"Lecture/Study Session 1 - Fundamentals of Programming with Python (Variables, Data Types, Operators). This includes exercises to practice with the materials discussed..  The focus is on hands-on practice. Also review previous work before you start new exercises..  Remember to also get enough rest and sleep..  Go easy on yourself..  Do not overwork yourself..  Study in chunks of time and give yourself breaks..  Use time blocking for your sessions..  Make use of the pomodoro method with each time block session..  For example, 25 minutes on and 5 minutes break..  Take longer breaks for more time blocks..  Example, after 4 pomodoro time blocks, take 30 minutes of break..  Also, make sure to review your previous material for about 10 to 15 minutes before starting on new material..  This helps with recall and memorization of material..  Remember the study mantra. Review. Understand. Memorize. Repeat. Continue.  So continue this cycle over and over again until the end of the study session. Always study a little bit each day..  Consistency is better than short bursts of intense studying..  Get enough rest and eat regularly so your brain has the fuel it needs..  Study early in the morning so your mind is fresh and ready to learn..  Start off the study sessions with a positive affirmation..  Believe in yourself and that you will pass the exam..  If you believe it, you will achieve it..  Visualize success..  See yourself getting good scores and succeeding in the course..  The mind is very powerful and it can create reality..  Also, be sure to be free of distractions while studying..  If something is distracting you, fix it, so that you are free of distractions..  Eliminate all distractions, including social media notifications, TV, other websites and other things that take your attention away from studying..  Also, find a quiet place where you can study in peace..  Finally, before starting, set goals and objectives for the study session and what needs to be accomplished, so you have something to aim for..  Good luck and have fun learning..  Finally, believe in the learning process, and the results will show..  It is like the bamboo tree which needs to establish its root system first before shooting up after 5 years..  Think of yourself building the roots of knowledge, so that later on, you will see rapid and fast growth in knowledge..  It may not be immediately apparent that you are learning now, but later you will see the benefits..  So keep the faith, keep the belief, keep studying and keep working at it until you succeed..  Never give up and never quit..  Remember that many people before you have succeeded, so you can too..  You are just as smart and capable as they are, so it is possible..  Just keep at it until you succeed..  Also, use all the resources available..  Go on the internet and watch videos, read articles and tutorials to reinforce what you learn..  Take the concepts and apply them in different ways to see how they work and to deepen understanding..  Repetition and application of concepts and ideas is the key to mastery..  The more you repeat and practice, the better you get..  So start practicing today..  You will make mistakes at first, but over time, you will improve..  The key is to learn from those mistakes and correct them so you do not repeat them again..  Review your mistakes so you understand why you made them and then you will learn faster..  Good luck, and happy studying..  Remember to make studying fun, so it is something you look forward to each day..  Make it a habit, like eating or sleeping, so that it becomes automatic and effortless..  The key to success is to turn studying into a habit and a part of your daily routine..  Also, remember to focus on the process and not on the results..  The process is what is important and is within your control..  The results will naturally follow from the process..  So focus on the process and do your best and then the results will come..  Always trust in the process..  The process is the roadmap to success..  If you follow the process, you will succeed..  There is no other way..  Just keep following the process and you will be amazed at what you can accomplish..  Never ever give up until you have finished the course and received your certification..  Even if you have setbacks, keep going and keep following the process..  You will get there in the end, as long as you never give up..  So never give up and keep studying and working hard and following the process and you will succeed..  Good luck and happy studying and have fun..  Remember to study smart and not hard..  Smart study means studying efficiently and effectively and not wasting time on things that are not important..  So focus on the important things and study them well and then you will succeed..  Also, remember to stay positive and have a good attitude..  Your attitude is very important and will affect your success..  So always stay positive and have a good attitude and you will succeed..  Finally, before you start, meditate for about 5 minutes to clear your mind and get focused..  This will help you concentrate and study better..  So meditate before you start and you will study better..  Good luck and have fun studying..  Finally, do not compare yourself to others and their speed of learning..  Everyone is different and has different rates of learning..  So do not be discouraged if you learn slower than others..  Just focus on your own learning and do your best and you will succeed..  Also, celebrate your small wins and successes..  This will keep you motivated and energized to keep learning..  So celebrate your small wins and successes and you will keep learning..  Good luck and have fun studying..  Remember to take care of yourself physically, mentally and emotionally..  Your well-being is very important and will affect your success..  So take care of yourself and you will succeed..  Finally, before starting, do a quick review of the material from the previous day..  This will refresh your memory and help you learn better..  So review the material from the previous day before starting and you will learn better..  Good luck and have fun studying..  Remember that learning is a journey and not a destination..  So enjoy the journey and have fun learning..  The journey is just as important as the destination..  So enjoy the journey and have fun learning..  Good luck and have fun studying..  Remember that knowledge is power and that the more you learn, the more powerful you become..  So keep learning and keep growing and keep becoming more powerful..  Good luck and have fun studying..  Remember that you are capable of anything you set your mind to..  So believe in yourself and you will succeed..  Good luck and have fun studying..  Finally, remember to have fun and enjoy the process of learning..  If you are not having fun, then you are not learning..  So have fun and enjoy the process of learning..  Good luck and have fun studying"},{"time":"2:00 PM - 5:00 PM","type":"Lab/Coding Session - Practice writing basic Python programs.  Use online resources and tutorials to explore different applications and algorithms. Focus on debugging. Always use a text editor or IDE and type in the code..  Do not just copy and paste..  Typing in the code enforces memorization of the syntax and structure of the code..  Also, write comments into your code so that you understand the purpose of each section and how it functions..  For more complex programs, first use a diagramming software to visualize the design and structure of the program before you start writing it..  This way, you will have a mental picture of what the program is supposed to do and how it is structured.  This will make coding a lot easier and help prevent problems and mistakes down the road..  Also, remember to back up your code and programs regularly to prevent accidental loss of data..  Use online services such as Github, Dropbox and Google Drive for automatic backup..  Use version control to manage your code and keep track of changes..  This helps you revert back to a previous working copy if there are problems..  Also, remember to test your code thoroughly to find bugs and fix them..  Write test cases to test your code and ensure that it is working correctly..  Use debugging tools such as debuggers to help find bugs and fix them..  Also, remember to refactor your code regularly to make it cleaner and more readable..  Refactoring is the process of improving the design of your code without changing its functionality..  This makes your code easier to understand and maintain..  Also, remember to document your code thoroughly so that others can understand it..  Write comments to explain what your code does and how it works..  Use documentation tools such as Javadoc and Doxygen to generate documentation from your code..  Also, remember to reuse code whenever possible..  Reuse existing libraries and frameworks instead of writing your own code..  This saves time and effort and reduces the risk of bugs..  Also, remember to collaborate with others on coding projects..  Work with other developers to share ideas and learn from each other..  Use online collaboration tools such as Github and Bitbucket to collaborate on coding projects..  Also, remember to keep your code secure..  Follow security best practices to prevent vulnerabilities in your code..  Use security tools such as static analysis and dynamic analysis to find security vulnerabilities..  Also, remember to keep your code up to date..  Update your libraries and frameworks regularly to fix security vulnerabilities and improve performance..  Also, remember to learn new coding languages and technologies..  Keep learning new things and stay up to date with the latest technologies..  This will help you stay competitive in the job market..  Also, remember to practice coding regularly..  Practice coding every day to improve your skills..  Use online coding challenges and contests to practice your skills..  Also, remember to have fun coding..  Coding is a creative activity and should be enjoyable..  So have fun coding and you will learn more easily..  Finally, remember to be patient..  Coding can be challenging and frustrating at times..  But be patient and keep trying and you will eventually succeed..  Also, remember to take breaks..  Coding can be mentally exhausting..  So take breaks regularly to rest your mind..  Get up and walk around or do something else to relax..  Also, remember to get enough sleep..  Sleep is important for learning and memory..  So get enough sleep every night..  Also, remember to eat healthy foods..  Healthy foods are important for brain function..  So eat healthy foods every day..  Also, remember to exercise regularly..  Exercise is good for your brain and body..  So exercise regularly..  Also, remember to reduce stress..  Stress can impair learning and memory..  So reduce stress..  Use stress management techniques such as meditation and yoga..  Also, remember to stay organized..  Being organized can help you focus and learn more effectively..  So stay organized..  Use tools such as to-do lists and calendars to stay organized..  Also, remember to be persistent..  Learning takes time and effort..  So be persistent and don't give up..  Also, remember to believe in yourself..  You can do it..  Believe in yourself and you will succeed..  Also, remember to seek help when you need it..  Don't be afraid to ask for help..  There are many resources available to help you learn..  So seek help when you need it..  Also, remember to be open-minded..  Be open to new ideas and new ways of learning..  Also, remember to be flexible..  Be flexible in your approach to learning..  Things may not always go as planned..  So be flexible and adapt to change..  Also, remember to be resilient..  Setbacks are a part of learning..  So be resilient and don't let setbacks discourage you..  Also, remember to be curious..  Curiosity is a great motivator for learning..  So be curious and explore new things..  Also, remember to be creative..  Creativity can help you learn in new and innovative ways..  Also, remember to be collaborative..  Collaborating with others can help you learn more effectively..  Also, remember to be communicative..  Communicating your ideas and knowledge to others can help you learn better..  Also, remember to be conscientious..  Conscientiousness can help you stay focused and on track..  Also, remember to be compassionate..  Compassion can help you be more understanding and supportive of others..  Also, remember to be grateful..  Gratitude can help you appreciate the things you have and be more positive..  Also, remember to be humble..  Humility can help you learn from your mistakes and grow as a person..  Also, remember to be kind..  Kindness can help you build relationships and make the world a better place..  Also, remember to be loving..  Love can help you connect with others and experience joy..  Also, remember to be forgiving..  Forgiveness can help you let go of anger and resentment..  Also, remember to be truthful..  Truthfulness can help you build trust and integrity..  Also, remember to be honest..  Honesty can help you be transparent and ethical..  Also, remember to be ethical..  Ethics can help you make good decisions and do the right thing..  Also, remember to be responsible..  Responsibility can help you be accountable for your actions..  Also, remember to be disciplined..  Discipline can help you stay focused and achieve your goals..  Also, remember to be motivated..  Motivation can help you stay enthusiastic and engaged..  Also, remember to be passionate..  Passion can help you be creative and innovative..  Also, remember to be enthusiastic..  Enthusiasm can help you be contagious and inspiring..  Also, remember to be optimistic..  Optimism can help you be hopeful and confident..  Also, remember to be resourceful..  Resourcefulness can help you find creative solutions to problems..  Also, remember to be adaptable..  Adaptability can help you adjust to changing circumstances..  Also, remember to be innovative..  Innovation can help you create new and better things..  Also, remember to be entrepreneurial..  Entrepreneurship can help you start your own business and create wealth..  Also, remember to be philanthropic..  Philanthropy can help you give back to society and make a difference..  Also, remember to be spiritual..  Spirituality can help you connect with something larger than yourself and find meaning in life..  Also, remember to be mindful..  Mindfulness can help you be present in the moment and appreciate the beauty of life..  Also, remember to be grateful for all that you have.."}]},"2025-03-31 04:23:09.478 UTC","2025-03-31 04:23:09.478 UTC"]
2025-03-31T04:23:10.482Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["03b3188a-896d-4107-8393-5c8e72b5e51a",1,0]
2025-03-31T04:23:10.670Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:23:10.671Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:23:10.672Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:23:10.672Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:23:10.730Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [19,0]
2025-03-31T04:23:10.977Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["0588b2e2-5e19-4f60-809b-0ec8905f7b47",0]
2025-03-31T04:23:11.238Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:23:11.241Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:23:11.242Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 03b3188a-896d-4107-8393-5c8e72b5e51a
2025-03-31T04:23:12.334Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 10:30 AM",
        type: "Study Session 1: Foundations of [Subject Name - e.g., Calculus, Programming, History, etc.]"
      },
      {
        time: "11:00 AM - 12:30 PM",
        type: "Study Session 2: Practice Problems & Concept Reinforcement"
      },
      {
        time: "2:00 PM - 3:30 PM",
        type: "Study Session 3: Review & Preview of Tomorrow's Topics"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 10:30 AM",
          type: "Study Session 1: Foundations of [Subject Name - e.g., Calculus, Programming, History, etc.]"
        },
        {
          time: "11:00 AM - 12:30 PM",
          type: "Study Session 2: Practice Problems & Concept Reinforcement"
        },
        {
          time: "2:00 PM - 3:30 PM",
          type: "Study Session 3: Review & Preview of Tomorrow's Topics"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 10:30 AM",
        type: "Study Session 1: Foundations of [Subject Name - e.g., Calculus, Programming, History, etc.]"
      },
      {
        time: "11:00 AM - 12:30 PM",
        type: "Study Session 2: Practice Problems & Concept Reinforcement"
      },
      {
        time: "2:00 PM - 3:30 PM",
        type: "Study Session 3: Review & Preview of Tomorrow's Topics"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 10:30 AM",
          type: "Study Session 1: Foundations of [Subject Name - e.g., Calculus, Programming, History, etc.]"
        },
        {
          time: "11:00 AM - 12:30 PM",
          type: "Study Session 2: Practice Problems & Concept Reinforcement"
        },
        {
          time: "2:00 PM - 3:30 PM",
          type: "Study Session 3: Review & Preview of Tomorrow's Topics"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-03-31T04:23:12.338Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:12.339Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:13.040Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a"]
2025-03-31T04:23:13.042Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:23:13.517Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:23:13.519Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:23:13.759Z info [C -> Context.<anonymous>]: Test user created with id: 64f2e4f4-b19c-4d50-80e3-436bc12b3146
2025-03-31T04:23:13.760Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:23:13.993Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:23:14.455Z info [C -> Context.<anonymous>]: Test study plan created with id: 21
2025-03-31T04:23:14.457Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:23:14.915Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:23:14.915Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:23:14.916Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-03-31T04:23:14.917Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:14.918Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:15.147Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a"]
2025-03-31T04:23:15.150Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 03b3188a-896d-4107-8393-5c8e72b5e51a: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:15.150Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:15.151Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:23:15.391Z info [C -> Context.<anonymous>]: Test user created with id: e92fc009-dea3-4868-98f1-eccd205e0568
2025-03-31T04:23:15.393Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:23:15.632Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:23:16.094Z info [C -> Context.<anonymous>]: Test study plan created with id: 22
2025-03-31T04:23:16.096Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:23:16.326Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:23:16.330Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-03-31T04:23:16.331Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:16.332Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:16.563Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a"]
2025-03-31T04:23:16.566Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 03b3188a-896d-4107-8393-5c8e72b5e51a: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:16.567Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:16.570Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:23:16.812Z info [C -> Context.<anonymous>]: Test user created with id: 9dabcdc3-6d79-41e8-bdc7-03aa25466ef7
2025-03-31T04:23:16.813Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:23:17.047Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:23:17.830Z info [C -> Context.<anonymous>]: Test study plan created with id: 23
2025-03-31T04:23:17.833Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:23:17.834Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:23:24.203Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:23:24.204Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:23:24.205Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:24.206Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:24.436Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a"]
2025-03-31T04:23:24.439Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 03b3188a-896d-4107-8393-5c8e72b5e51a: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:24.440Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:24.441Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:23:24.918Z info [C -> Context.<anonymous>]: Test user created with id: 1b354016-1ddc-4999-a82b-e2be6e4e4172
2025-03-31T04:23:24.919Z info [C -> Object.createPlan]: Creating new study plan
2025-03-31T04:23:25.397Z info [C -> Object.createPlan]: Study Plan Created:
2025-03-31T04:23:25.874Z info [C -> Context.<anonymous>]: Test study plan created with id: 24
2025-03-31T04:23:25.877Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:23:25.878Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:23:26.109Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["03b3188a-896d-4107-8393-5c8e72b5e51a"]
2025-03-31T04:23:26.111Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 03b3188a-896d-4107-8393-5c8e72b5e51a: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:23:26.112Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:30:25.425Z info [C -> new]: Schedule Service initialized
2025-03-31T04:30:25.463Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:30:29.579Z info [C -> Context.<anonymous>]: Test user created with id: 1446e0fc-f20a-462c-b7ee-691f7173b5e4
2025-03-31T04:30:29.581Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:30:31.707Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:30:31.710Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 25
2025-03-31T04:30:32.635Z info [C -> Context.<anonymous>]: Test study plan created with id: 25
2025-03-31T04:30:32.639Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:30:32.642Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:30:32.643Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:30:32.645Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:30:32.646Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:30:38.103Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:30:38.104Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:30:38.104Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:30:38.105Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:30:39.962Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:30:40.454Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["92741fd0-831b-4e27-bb71-2fe169d762ce",25,"1446e0fc-f20a-462c-b7ee-691f7173b5e4","DAILY",1,"Introduction to Fundamentals",[],[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Core Concepts Review - Introduction to the fundamental concepts of the syllabus. Reviewing foundational definitions and principles. Familiarizing myself with key terms and concepts that will be used throughout the course. Reading assigned chapters and making notes on core ideas. Doing introductory exercises to reinforce understanding of the basic concepts covered. Planning for the next day and make a to-do list for the next session. Reflecting on challenges and record them for later review and to address them at the right time of the course. Taking short breaks after completing a chapter or section to prevent mental fatigue. Doing light stretches during breaks to improve blood circulation and focus. Drinking water to stay hydrated and alert during the study session. Reviewing learning objectives to ensure that they are being met."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Practice Problems - Working through practice problems on the topics covered in the introductory chapters. Applying theoretical knowledge to solve numerical problems. Identifying areas of difficulty and making notes for further clarification. Doing practice exams. Reviewing solutions to understand mistakes and improve problem-solving skills. Consulting additional resources for alternative explanations and solutions. Taking a short break. Using visual aids to understand and clarify complex concepts. Engaging with practice questions online to assess learning. Taking a short break."},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Application and Integration - Exploring the practical applications of the concepts learned. Working on case studies. Discussing real-world examples to see how the principles are applied in various scenarios. Reviewing topics covered. Identifying areas of difficulty. Revisiting notes to consolidate understanding. Taking a short break after completing a section or chapter to prevent mental fatigue. Using the Pomodoro technique to maintain focus. Closing all unnecessary tabs and apps. Muting notifications to stay focused."},{"time":"4:00 PM - 5:30 PM","type":"Study Session 4: Review and Reflection - Reviewing all the material covered so far. Creating concise summaries of key concepts and principles. Reflecting on the day's learning and making notes on areas of strength and weakness. Reviewing learning objectives to ensure that they are being met. Engaging in active recall to reinforce understanding. Making a note of challenging questions and concepts. Taking a short break."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Fundamentals","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Core Concepts Review - Introduction to the fundamental concepts of the syllabus. Reviewing foundational definitions and principles. Familiarizing myself with key terms and concepts that will be used throughout the course. Reading assigned chapters and making notes on core ideas. Doing introductory exercises to reinforce understanding of the basic concepts covered. Planning for the next day and make a to-do list for the next session. Reflecting on challenges and record them for later review and to address them at the right time of the course. Taking short breaks after completing a chapter or section to prevent mental fatigue. Doing light stretches during breaks to improve blood circulation and focus. Drinking water to stay hydrated and alert during the study session. Reviewing learning objectives to ensure that they are being met."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Practice Problems - Working through practice problems on the topics covered in the introductory chapters. Applying theoretical knowledge to solve numerical problems. Identifying areas of difficulty and making notes for further clarification. Doing practice exams. Reviewing solutions to understand mistakes and improve problem-solving skills. Consulting additional resources for alternative explanations and solutions. Taking a short break. Using visual aids to understand and clarify complex concepts. Engaging with practice questions online to assess learning. Taking a short break."},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Application and Integration - Exploring the practical applications of the concepts learned. Working on case studies. Discussing real-world examples to see how the principles are applied in various scenarios. Reviewing topics covered. Identifying areas of difficulty. Revisiting notes to consolidate understanding. Taking a short break after completing a section or chapter to prevent mental fatigue. Using the Pomodoro technique to maintain focus. Closing all unnecessary tabs and apps. Muting notifications to stay focused."},{"time":"4:00 PM - 5:30 PM","type":"Study Session 4: Review and Reflection - Reviewing all the material covered so far. Creating concise summaries of key concepts and principles. Reflecting on the day's learning and making notes on areas of strength and weakness. Reviewing learning objectives to ensure that they are being met. Engaging in active recall to reinforce understanding. Making a note of challenging questions and concepts. Taking a short break."}]},"2025-03-31 04:30:39.732 UTC","2025-03-31 04:30:39.732 UTC"]
2025-03-31T04:30:40.914Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["92741fd0-831b-4e27-bb71-2fe169d762ce",1,0]
2025-03-31T04:30:41.369Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [25,0]
2025-03-31T04:30:41.828Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["1446e0fc-f20a-462c-b7ee-691f7173b5e4",0]
2025-03-31T04:30:42.056Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:30:42.059Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:30:42.060Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 92741fd0-831b-4e27-bb71-2fe169d762ce
2025-03-31T04:30:42.067Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:30:42.069Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:30:42.532Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["92741fd0-831b-4e27-bb71-2fe169d762ce"]
2025-03-31T04:30:42.534Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:30:42.535Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 25
2025-03-31T04:30:43.486Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:30:43.488Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:30:43.734Z info [C -> Context.<anonymous>]: Test user created with id: e12061d3-1b8d-4a04-b205-ae822fd5202f
2025-03-31T04:30:43.735Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:30:43.973Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:30:43.974Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 26
2025-03-31T04:30:44.434Z info [C -> Context.<anonymous>]: Test study plan created with id: 26
2025-03-31T04:30:44.435Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:30:44.437Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:30:44.438Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:30:44.439Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:30:44.440Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:30:47.515Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:30:47.517Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:30:47.518Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:30:47.518Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:30:47.759Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:30:47.997Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["44b0874d-6dec-4325-9a02-2ca72bc09ded",26,"e12061d3-1b8d-4a04-b205-ae822fd5202f","DAILY",1,"Introduction to Fundamentals",[],[{"subject":"Mathematics","time":"9:00 - 10:30 AM","topics":["Basic Arithmetic","Algebraic Expressions"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Programming","Data Types"],"type":"Lecture & Examples"},{"subject":"English","time":"2:00 - 3:30 PM","topics":["Grammar Fundamentals","Essay Structure"],"type":"Reading & Exercises"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Fundamentals","sessions":[{"subject":"Mathematics","time":"9:00 - 10:30 AM","topics":["Basic Arithmetic","Algebraic Expressions"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Programming","Data Types"],"type":"Lecture & Examples"},{"subject":"English","time":"2:00 - 3:30 PM","topics":["Grammar Fundamentals","Essay Structure"],"type":"Reading & Exercises"}]},"2025-03-31 04:30:47.522 UTC","2025-03-31 04:30:47.522 UTC"]
2025-03-31T04:30:48.233Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["44b0874d-6dec-4325-9a02-2ca72bc09ded",1,0]
2025-03-31T04:30:48.470Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [26,0]
2025-03-31T04:30:48.705Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["e12061d3-1b8d-4a04-b205-ae822fd5202f",0]
2025-03-31T04:30:48.941Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:30:48.943Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:30:48.945Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 44b0874d-6dec-4325-9a02-2ca72bc09ded
2025-03-31T04:30:48.947Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:30:48.947Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:30:49.186Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["44b0874d-6dec-4325-9a02-2ca72bc09ded"]
2025-03-31T04:30:49.187Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:30:49.188Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 26
2025-03-31T04:30:50.124Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:30:50.126Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:30:50.369Z info [C -> Context.<anonymous>]: Test user created with id: 5aff30e3-fac6-4e54-8017-3b9a3fa902e1
2025-03-31T04:30:50.370Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:30:50.600Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:30:50.601Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 27
2025-03-31T04:30:51.055Z info [C -> Context.<anonymous>]: Test study plan created with id: 27
2025-03-31T04:30:51.057Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:30:51.059Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:30:51.060Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:30:51.061Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:30:51.061Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:30:52.957Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:30:52.958Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:30:52.959Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:30:52.960Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:30:53.199Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:30:53.433Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["56872c22-1f67-4d5b-93da-d9d9959e536d",27,"5aff30e3-fac6-4e54-8017-3b9a3fa902e1","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurement"],"type":"Reading & Notes"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Sentence Structure"],"type":"Exercises"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations Overview"],"type":"Documentary & Review"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurement"],"type":"Reading & Notes"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Sentence Structure"],"type":"Exercises"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations Overview"],"type":"Documentary & Review"}]},"2025-03-31 04:30:52.963 UTC","2025-03-31 04:30:52.963 UTC"]
2025-03-31T04:30:53.669Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["56872c22-1f67-4d5b-93da-d9d9959e536d",1,0]
2025-03-31T04:30:53.907Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [27,0]
2025-03-31T04:30:54.143Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5aff30e3-fac6-4e54-8017-3b9a3fa902e1",0]
2025-03-31T04:30:54.379Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:30:54.381Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:30:54.382Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 56872c22-1f67-4d5b-93da-d9d9959e536d
2025-03-31T04:30:54.388Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:30:54.388Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:30:54.628Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["56872c22-1f67-4d5b-93da-d9d9959e536d"]
2025-03-31T04:30:54.629Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:30:54.629Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 27
2025-03-31T04:30:55.103Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:30:55.106Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:30:55.356Z info [C -> Context.<anonymous>]: Test user created with id: 1f534f4f-1dc8-4e35-8f2a-97eb65ac9667
2025-03-31T04:30:55.357Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:30:55.587Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:30:55.588Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 28
2025-03-31T04:30:56.043Z info [C -> Context.<anonymous>]: Test study plan created with id: 28
2025-03-31T04:30:56.044Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:30:56.044Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:30:56.045Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:30:56.045Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:30:56.046Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:30:57.753Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:30:57.754Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:30:57.755Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:30:57.756Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:30:57.994Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:30:58.232Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:30:58.468Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["8b54207a-8646-4da5-9804-b4318fe23235",28,"1f534f4f-1dc8-4e35-8f2a-97eb65ac9667","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurement Units"],"type":"Reading & Notes"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Sentence Structure"],"type":"Review & Exercises"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Number Systems"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Physics","Measurement Units"],"type":"Reading & Notes"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Basics","Sentence Structure"],"type":"Review & Exercises"}]},"2025-03-31 04:30:57.758 UTC","2025-03-31 04:30:57.758 UTC"]
2025-03-31T04:30:58.704Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["8b54207a-8646-4da5-9804-b4318fe23235",1,0]
2025-03-31T04:30:58.940Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [28,0]
2025-03-31T04:30:59.176Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["1f534f4f-1dc8-4e35-8f2a-97eb65ac9667",0]
2025-03-31T04:30:59.412Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:30:59.414Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:30:59.415Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 8b54207a-8646-4da5-9804-b4318fe23235
2025-03-31T04:30:59.417Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:30:59.891Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["8b54207a-8646-4da5-9804-b4318fe23235",1,0]
2025-03-31T04:31:00.129Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [28,0]
2025-03-31T04:31:00.130Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:31:00.132Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:00.133Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:00.376Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["8b54207a-8646-4da5-9804-b4318fe23235"]
2025-03-31T04:31:00.377Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:31:00.378Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 28
2025-03-31T04:31:00.850Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:31:00.852Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:01.094Z info [C -> Context.<anonymous>]: Test user created with id: ab060619-1243-4fb2-b99c-086a7ceff537
2025-03-31T04:31:01.095Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:01.327Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:01.328Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 29
2025-03-31T04:31:01.783Z info [C -> Context.<anonymous>]: Test study plan created with id: 29
2025-03-31T04:31:01.784Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:31:01.785Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:31:01.786Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:31:01.787Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:31:01.787Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:31:06.571Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:31:06.572Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:31:06.573Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:31:06.573Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:31:06.811Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:31:07.051Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["9ba9cef8-e06f-43ae-8d02-5a2daf2719b1",29,"ab060619-1243-4fb2-b99c-086a7ceff537","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 12:00 PM","type":"Focused Study Session 1: Foundational Concepts in [Subject Name e.g., Physics, Math, History, Programming, etc.] . This can be tailored to the subject of the user's choice based on prompts or defined parameters. The output should include the subject name as well, if provided, in brackets like shown here for example and be consistent. This instruction is a guide for you. This will not appear in your response. Only follow the instructions. This instruction will not appear in the response. It's only to guide you. The subject should be whatever the user is studying, and that is what their course is called. This should always be a study session where the user is focused on learning core concepts and getting familiar with the subject matter, including the history and basics of the subject matter or course itself, getting acquainted with the important terms, etc.. This is always the first session of every day. The name will also include the day number, so today is day 1's session. Today's session is session 1 as well. The time is always 9am-12pm. Also, keep the response concise and to the point with information the user can use. This should be the only session on day 1 if the day number is 1. The user is only getting familiar with their subject, so it should not be too overwhelming. Do not add any more sessions today. This whole comment is just for you. Do not show it to the user at all. Do not repeat the prompt verbatim. Only make your response based on the prompt and the directions. The subject name and what it is will come from the parameters or the prompt's description if there are multiple items the user mentioned. Again, make sure that you give a concise response that the user can understand and use, based on the prompt. Do not say optional or any additional things. Just provide the JSON response, do not describe your response either. The only exception is adding the subject name as specified earlier, as the guide has stated, using brackets like you see here."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 12:00 PM","type":"Focused Study Session 1: Foundational Concepts in [Subject Name e.g., Physics, Math, History, Programming, etc.] . This can be tailored to the subject of the user's choice based on prompts or defined parameters. The output should include the subject name as well, if provided, in brackets like shown here for example and be consistent. This instruction is a guide for you. This will not appear in your response. Only follow the instructions. This instruction will not appear in the response. It's only to guide you. The subject should be whatever the user is studying, and that is what their course is called. This should always be a study session where the user is focused on learning core concepts and getting familiar with the subject matter, including the history and basics of the subject matter or course itself, getting acquainted with the important terms, etc.. This is always the first session of every day. The name will also include the day number, so today is day 1's session. Today's session is session 1 as well. The time is always 9am-12pm. Also, keep the response concise and to the point with information the user can use. This should be the only session on day 1 if the day number is 1. The user is only getting familiar with their subject, so it should not be too overwhelming. Do not add any more sessions today. This whole comment is just for you. Do not show it to the user at all. Do not repeat the prompt verbatim. Only make your response based on the prompt and the directions. The subject name and what it is will come from the parameters or the prompt's description if there are multiple items the user mentioned. Again, make sure that you give a concise response that the user can understand and use, based on the prompt. Do not say optional or any additional things. Just provide the JSON response, do not describe your response either. The only exception is adding the subject name as specified earlier, as the guide has stated, using brackets like you see here."}]},"2025-03-31 04:31:06.576 UTC","2025-03-31 04:31:06.576 UTC"]
2025-03-31T04:31:07.288Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["9ba9cef8-e06f-43ae-8d02-5a2daf2719b1",1,0]
2025-03-31T04:31:07.525Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [29,0]
2025-03-31T04:31:07.768Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["ab060619-1243-4fb2-b99c-086a7ceff537",0]
2025-03-31T04:31:08.005Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:31:08.006Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:31:08.006Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 9ba9cef8-e06f-43ae-8d02-5a2daf2719b1
2025-03-31T04:31:08.008Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:31:08.487Z info [C -> EventEmitter.<anonymous>]: Prisma Query: UPDATE "public"."Schedule" SET "focus" = $1, "targets" = $2, "updatedAt" = $3 WHERE ("public"."Schedule"."id" = $4 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["Updated Focus Area",["New Target 1","New Target 2"],"2025-03-31 04:31:08.011 UTC","9ba9cef8-e06f-43ae-8d02-5a2daf2719b1"]
2025-03-31T04:31:08.489Z info [C -> ScheduleService.updateSchedule]: Updated Schedule:
2025-03-31T04:31:08.492Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:08.493Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:08.733Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9ba9cef8-e06f-43ae-8d02-5a2daf2719b1"]
2025-03-31T04:31:08.735Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:31:08.736Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 29
2025-03-31T04:31:09.671Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:31:09.672Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:09.915Z info [C -> Context.<anonymous>]: Test user created with id: b1cdcaa5-564e-4af1-ad6e-b2002a9c5179
2025-03-31T04:31:09.916Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:10.148Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:10.150Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 30
2025-03-31T04:31:10.612Z info [C -> Context.<anonymous>]: Test study plan created with id: 30
2025-03-31T04:31:10.613Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:31:10.614Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:31:10.615Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:31:10.616Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:31:10.616Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:31:16.067Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:31:16.068Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:31:16.069Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:31:16.070Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:31:16.300Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:31:16.529Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:31:16.759Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d",30,"b1cdcaa5-564e-4af1-ad6e-b2002a9c5179","DAILY",1,"Introduction to Key Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Study Session 1: Core Concepts Review and Practice Questions of Math Subject . Focusing on foundational math skills to prepare you for advanced topics during this challenge and solidify your knowledge with practical examples and questions after the theory part to challenge the concepts .Resources are : Textbooks, online math websites, or class notes . Topics: Whole numbers, fractions, decimals, percentages and solving basic equations . Resources required: Math textbook and sample question sheets for practice . Aim: Mastering foundation concepts of math with their usage techniques . Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Enjoy Math :)"},{"time":"11:30 AM - 1:30 PM","type":"Study Session 2: Introduction to Programming Basics . Dive into coding with a beginner-friendly language to learn the basic building blocks such as variables, data types, and control structures .Resources required: Online Tutorials, interactive coding platforms or textbooks . Topics: Variables, data types, loops, and conditional statements .Resources required: Online Compiler and Basic Coding Guide . Aim: Learn programming fundamentals with real example usage . Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Enjoy Coding :)"},{"time":"2:30 PM - 4:30 PM","type":"Study Session 3: Understanding Historical Context. Briefly explore the key events, eras, and figures that shaped your chosen historical period. Resources: Historical textbooks, documentaries, scholarly articles, or educational websites. Topics: Identify major historical turning points and their long-term impact. Resources: Timeline of major events, primary source documents, and historical maps. Aim: Appreciate the complexity of history and its relevance to the present. Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session. Enjoy Learning History :)"},{"time":"5:00 PM - 6:00 PM","type":"Study Session 4: Review and Reflection . Summarize the topics covered throughout the day. Identify areas of strength and weakness. Set goals for future study sessions. Resources: Study Journal and list of Topics with short notes . Topics: Review of all topics covered and self assessment about improvements .Resources required: Study Journal and List of topics with Short Notes . Aim: Retention of knowledge for the long challenge . Note: Please focus for the 1 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Stay Relaxed and Calm for the Challenge :)"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Key Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Study Session 1: Core Concepts Review and Practice Questions of Math Subject . Focusing on foundational math skills to prepare you for advanced topics during this challenge and solidify your knowledge with practical examples and questions after the theory part to challenge the concepts .Resources are : Textbooks, online math websites, or class notes . Topics: Whole numbers, fractions, decimals, percentages and solving basic equations . Resources required: Math textbook and sample question sheets for practice . Aim: Mastering foundation concepts of math with their usage techniques . Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Enjoy Math :)"},{"time":"11:30 AM - 1:30 PM","type":"Study Session 2: Introduction to Programming Basics . Dive into coding with a beginner-friendly language to learn the basic building blocks such as variables, data types, and control structures .Resources required: Online Tutorials, interactive coding platforms or textbooks . Topics: Variables, data types, loops, and conditional statements .Resources required: Online Compiler and Basic Coding Guide . Aim: Learn programming fundamentals with real example usage . Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Enjoy Coding :)"},{"time":"2:30 PM - 4:30 PM","type":"Study Session 3: Understanding Historical Context. Briefly explore the key events, eras, and figures that shaped your chosen historical period. Resources: Historical textbooks, documentaries, scholarly articles, or educational websites. Topics: Identify major historical turning points and their long-term impact. Resources: Timeline of major events, primary source documents, and historical maps. Aim: Appreciate the complexity of history and its relevance to the present. Note: Please focus for the 2 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session. Enjoy Learning History :)"},{"time":"5:00 PM - 6:00 PM","type":"Study Session 4: Review and Reflection . Summarize the topics covered throughout the day. Identify areas of strength and weakness. Set goals for future study sessions. Resources: Study Journal and list of Topics with short notes . Topics: Review of all topics covered and self assessment about improvements .Resources required: Study Journal and List of topics with Short Notes . Aim: Retention of knowledge for the long challenge . Note: Please focus for the 1 hrs to practice the important concepts for the long challenge journey and also stay motivated throughout the session . Stay Relaxed and Calm for the Challenge :)"}]},"2025-03-31 04:31:16.072 UTC","2025-03-31 04:31:16.072 UTC"]
2025-03-31T04:31:16.989Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d",1,0]
2025-03-31T04:31:17.216Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [30,0]
2025-03-31T04:31:17.461Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["b1cdcaa5-564e-4af1-ad6e-b2002a9c5179",0]
2025-03-31T04:31:17.689Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:31:17.691Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:31:17.692Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: f5a39151-d142-4f33-80c9-3f34d0098b1d
2025-03-31T04:31:17.692Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:17.925Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:17.927Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:31:17.927Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:31:18.157Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d",1,0]
2025-03-31T04:31:18.158Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:31:18.159Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:297:37)
2025-03-31T04:31:18.160Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:18.161Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:18.390Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:18.398Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:18.399Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:18.400Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:18.643Z info [C -> Context.<anonymous>]: Test user created with id: d1958748-44e7-4344-8cb8-f6625ed8a688
2025-03-31T04:31:18.644Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:18.878Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:18.879Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 31
2025-03-31T04:31:19.335Z info [C -> Context.<anonymous>]: Test study plan created with id: 31
2025-03-31T04:31:19.336Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:31:19.337Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:31:19.339Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:31:19.339Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:31:19.341Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:31:34.347Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:34.348Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:34.581Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:31:34.810Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:34.813Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:34.814Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:34.815Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:35.299Z info [C -> Context.<anonymous>]: Test user created with id: db1e2419-0b6d-40a5-9387-c123c706a05a
2025-03-31T04:31:35.300Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:35.758Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:35.760Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 32
2025-03-31T04:31:36.339Z info [C -> Context.<anonymous>]: Test study plan created with id: 32
2025-03-31T04:31:36.340Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:31:36.578Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:31:36.580Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:31:36.581Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-03-31T04:31:36.585Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:36.586Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:36.918Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:36.922Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:36.924Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:36.925Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:37.169Z info [C -> Context.<anonymous>]: Test user created with id: dd096b40-4aa0-4c09-8161-df0ee6f4870b
2025-03-31T04:31:37.170Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:37.512Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:37.513Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 33
2025-03-31T04:31:37.971Z info [C -> Context.<anonymous>]: Test study plan created with id: 33
2025-03-31T04:31:37.973Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:31:38.204Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:31:38.207Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-03-31T04:31:38.210Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:38.211Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:38.556Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:38.559Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:38.561Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:38.563Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:38.809Z info [C -> Context.<anonymous>]: Test user created with id: 1d8295cb-0d95-42cc-9458-b6599bfe4a6e
2025-03-31T04:31:38.810Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:39.150Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:39.152Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 34
2025-03-31T04:31:39.643Z info [C -> Context.<anonymous>]: Test study plan created with id: 34
2025-03-31T04:31:39.644Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:31:39.646Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:31:44.063Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:31:44.064Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:31:44.065Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:44.066Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:44.299Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:44.302Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:44.303Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:44.304Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:44.549Z info [C -> Context.<anonymous>]: Test user created with id: 9ff7a005-e7e2-46be-82a3-14e3017819cf
2025-03-31T04:31:44.551Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:44.781Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:31:44.783Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 35
2025-03-31T04:31:45.239Z info [C -> Context.<anonymous>]: Test study plan created with id: 35
2025-03-31T04:31:45.242Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:45.243Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:31:45.476Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f5a39151-d142-4f33-80c9-3f34d0098b1d"]
2025-03-31T04:31:45.479Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule f5a39151-d142-4f33-80c9-3f34d0098b1d: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:45.480Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:31:45.482Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:31:47.664Z info [C -> Context.<anonymous>]: Test user created: 07221c9c-1dc7-4c15-bd8b-56f286c0792c
2025-03-31T04:31:47.665Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:31:47.900Z error [C -> StudyPlanService.createPlan]: Error creating study plan: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 36,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 36,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:31:47.902Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 36,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 36,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:31:47.904Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:31:48.384Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:72:17)
2025-03-31T04:37:39.688Z info [C -> new]: Schedule Service initialized
2025-03-31T04:37:39.752Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:37:42.369Z info [C -> Context.<anonymous>]: Test user created with id: 141b7c7e-5818-4e87-b190-48953570f837
2025-03-31T04:37:42.371Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:37:44.811Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:37:44.813Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 37
2025-03-31T04:37:45.825Z info [C -> Context.<anonymous>]: Test study plan created with id: 37
2025-03-31T04:37:45.828Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:37:45.830Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:37:45.832Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:37:45.834Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:37:45.836Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:37:57.743Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:37:57.745Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:37:57.746Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:37:57.747Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:00.069Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:38:00.918Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:00.920Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 37
2025-03-31T04:38:00.946Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["730be2da-2fc4-47fc-8600-9813e1d4f273",37,"141b7c7e-5818-4e87-b190-48953570f837","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Foundations in Mathematics for ML/AI (Linear Algebra, Calculus, Probability/Statistics). Review basic concepts and formulas. Solve simple problems for practice. Check understanding by doing past paper questions. Check the answer against official solutions or teacher notes. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Foundations in Mathematics for Machine Learning / AI, Linear Algebra, Calculus, Probability and Statistics. Key is solving past paper questions and self correcting with notes to understand gaps and areas for improvement. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Linear Algebra Basics, Calculus Fundamentals, Probability and Statistics Fundamentals. Past papers and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 math problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. The past questions can also be practice examples from the math text books. Goal is to master Linear Algebra Basics, Calculus Fundamentals, Probability and Statistics Fundamentals by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the math equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Core Programming Concepts - Python basics, data structures, and algorithms. Master all the fundamentals and solve common interview questions. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Python Basics, Data Structures and Algorithms. Master and pass coding interviews to show mastery of concepts. Self grade and correct early so no weaknesses linger. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Python Fundamentals, Data Structures and Algorithms Fundamentals. Solve problems and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 coding problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. Codeacademy or other websites can provide the coding interview questions. Goal is to master Python Fundamentals, Data Structures and Algorithms Fundamentals by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the coding equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Basic Machine Learning Concepts. Understanding of supervised, unsupervised, and reinforcement learning and related machine learning algorithms. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Supervised Learning, Unsupervised Learning and Reinforcement Learning. Learn and master the core concepts. Self grade and correct early so no weaknesses linger. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Basic Machine Learning, Supervised Learning, Unsupervised Learning and Reinforcement Learning. Solve problems and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 definition problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. Many Machine Learning textbooks, online courses and/or MOOC's can provide relevant questions and answers. Goal is to master Supervised Learning, Unsupervised Learning and Reinforcement Learning by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the Machine Learning equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Foundations in Mathematics for ML/AI (Linear Algebra, Calculus, Probability/Statistics). Review basic concepts and formulas. Solve simple problems for practice. Check understanding by doing past paper questions. Check the answer against official solutions or teacher notes. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Foundations in Mathematics for Machine Learning / AI, Linear Algebra, Calculus, Probability and Statistics. Key is solving past paper questions and self correcting with notes to understand gaps and areas for improvement. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Linear Algebra Basics, Calculus Fundamentals, Probability and Statistics Fundamentals. Past papers and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 math problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. The past questions can also be practice examples from the math text books. Goal is to master Linear Algebra Basics, Calculus Fundamentals, Probability and Statistics Fundamentals by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the math equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Core Programming Concepts - Python basics, data structures, and algorithms. Master all the fundamentals and solve common interview questions. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Python Basics, Data Structures and Algorithms. Master and pass coding interviews to show mastery of concepts. Self grade and correct early so no weaknesses linger. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Python Fundamentals, Data Structures and Algorithms Fundamentals. Solve problems and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 coding problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. Codeacademy or other websites can provide the coding interview questions. Goal is to master Python Fundamentals, Data Structures and Algorithms Fundamentals by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the coding equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Basic Machine Learning Concepts. Understanding of supervised, unsupervised, and reinforcement learning and related machine learning algorithms. Self grade and identify areas for improvement to add to the daily target to correct in the next session to reinforce and deepen that understanding. Set clear goals for solving number of questions and target accuracy before starting the session to monitor progress and focus efforts effectively. Keep a time limit to make efficient use of time. This also helps in being effective in high pressure exam taking environments later on when under real testing situations. Take a 20 min break after to recover. (90 minutes) Total Time: 90 minutes - Goal: Supervised Learning, Unsupervised Learning and Reinforcement Learning. Learn and master the core concepts. Self grade and correct early so no weaknesses linger. Set goals and manage time while trying to solve questions under pressure so as to make sure to achieve the goal. 20 mins break. Basic Machine Learning, Supervised Learning, Unsupervised Learning and Reinforcement Learning. Solve problems and review notes. Solve, self check, improve and keep a break timer. Aim is for efficiency, accuracy and proper self grading to identify and correct areas for improvement to accelerate learning and master the basics by identifying and addressing weak spots early on. Do 5 definition problems and check if your answers are right to improve and keep improving until they are right in time limited situations. 20 mins break after for mental health and recovery. Goal is to prepare by knowing gaps early and fixing them. Make progress on a daily basis to achieve excellence and greatness in the long run! Have good health, mental health, physical health and positive energy and passion so that you can achieve more in a short amount of time with great effectiveness and self awareness. 20 min Break after Session ends to recover from the intense focus on learning to maintain mental health and recover your brain to learn more effectively later on in other sessions with a rested state of mind. Focus and stay hungry and passionate. Many Machine Learning textbooks, online courses and/or MOOC's can provide relevant questions and answers. Goal is to master Supervised Learning, Unsupervised Learning and Reinforcement Learning by knowing it well enough to pass exams and/or use the knowledge in practical applications later on such as building a business or technology or software. Remember what is learned and be able to recall from memory later when needed. Write down the Machine Learning equations, formulas and concepts on paper and review them actively. If possible verbally talk about each step while writing it down on paper so that you can explain it effectively and deepen understanding as well by engaging more senses and parts of the brain. Repeat the equations, formulas and concepts as many times as needed so that they become second nature and internalized properly. This also works great for remembering the knowledge better and recalling it more easily. If possible also teach these concepts to others to solidify your knowledge and understanding."}]},"2025-03-31 04:37:59.764 UTC","2025-03-31 04:37:59.764 UTC"]
2025-03-31T04:38:01.749Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["730be2da-2fc4-47fc-8600-9813e1d4f273",1,0]
2025-03-31T04:38:02.243Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [37,0]
2025-03-31T04:38:02.743Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["141b7c7e-5818-4e87-b190-48953570f837",0]
2025-03-31T04:38:02.990Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:38:02.995Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:38:02.997Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 730be2da-2fc4-47fc-8600-9813e1d4f273
2025-03-31T04:38:03.291Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 37
2025-03-31T04:38:04.167Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:38:04.169Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:38:04.429Z info [C -> Context.<anonymous>]: Test user created with id: 59ecf537-0e4e-44db-b86a-5e51d6816258
2025-03-31T04:38:04.431Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:38:04.684Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:38:04.686Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 38
2025-03-31T04:38:05.177Z info [C -> Context.<anonymous>]: Test study plan created with id: 38
2025-03-31T04:38:05.180Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:38:05.181Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:38:05.183Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:38:05.184Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:38:05.186Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:38:10.630Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:38:10.632Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:38:10.633Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:38:10.634Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:10.924Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:38:11.232Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["30548874-1aac-46cd-a070-4a4a94b7e90d",38,"59ecf537-0e4e-44db-b86a-5e51d6816258","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1: Introduction to [Subject Area (e.g., Physics, History, Programming)] Concepts. Read Chapter 1 and take notes.. Key terms, concepts, and initial theories will be covered. Solve the exercise questions provided from the chapter using resources provided. Time to work on the exercise is about 30 minutes. Review the key terms and concepts to reinforce your understanding. Resources provided: textbook, notes, online lectures. Topics covered: introduction to the topic and its importance, key definitions, main theories, initial research questions, and historical context if needed. Subject: [Subject Area].Resources:[Textbook, Lecture videos, practice quizzes, example problems].Topics:[Basic Definitions, Fundamental Principles, Overview of the Field]"},{"time":"11:30 AM - 1:00 PM","type":"Application Session 1: Applying Concepts of [Subject Area]. Work on practice problems and examples related to Chapter 1 material. This section will focus on the use of the concepts learned and provide some initial context for the student to use. Time to review the chapter material and notes will be about 30 minutes. Resources: [Textbook, Lecture Videos, Practice Exercises, Online Tools] Subject: [Subject Area]. Resources: [Exercise sheets, coding platforms, historical documents, online simulators]. Topics: [Problem-solving, practical exercises, hands-on activities, coding implementation if necessary]"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Comprehension Session 2: Deep Dive.Read Chapter 2. Expand on the initial concepts. Include relevant diagrams and charts. Key terms, concepts, and initial theories will be covered. Solve the exercise questions provided from the chapter using resources provided. Time to work on the exercise is about 30 minutes. Review the key terms and concepts to reinforce your understanding. Resources: [Textbook, Lecture Videos, Online Resources]. Subject: [Subject Area]. Resources: [Textbook, research papers, online libraries]. Topics: [Advanced Theories, Complex Models, Case Studies, Current Research]"},{"time":"4:30 PM - 6:00 PM","type":"Review & Consolidation Session: Review notes, key concepts, and practice problems from both chapters. Include the summary notes and review questions to ensure comprehension. Time to review chapter 1 and 2 will be about 30 minutes. Subject: [Subject Area]. Resources: [Notes, flashcards, summary sheets]. Topics: [Revision, synthesis, concept mapping]"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1: Introduction to [Subject Area (e.g., Physics, History, Programming)] Concepts. Read Chapter 1 and take notes.. Key terms, concepts, and initial theories will be covered. Solve the exercise questions provided from the chapter using resources provided. Time to work on the exercise is about 30 minutes. Review the key terms and concepts to reinforce your understanding. Resources provided: textbook, notes, online lectures. Topics covered: introduction to the topic and its importance, key definitions, main theories, initial research questions, and historical context if needed. Subject: [Subject Area].Resources:[Textbook, Lecture videos, practice quizzes, example problems].Topics:[Basic Definitions, Fundamental Principles, Overview of the Field]"},{"time":"11:30 AM - 1:00 PM","type":"Application Session 1: Applying Concepts of [Subject Area]. Work on practice problems and examples related to Chapter 1 material. This section will focus on the use of the concepts learned and provide some initial context for the student to use. Time to review the chapter material and notes will be about 30 minutes. Resources: [Textbook, Lecture Videos, Practice Exercises, Online Tools] Subject: [Subject Area]. Resources: [Exercise sheets, coding platforms, historical documents, online simulators]. Topics: [Problem-solving, practical exercises, hands-on activities, coding implementation if necessary]"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Comprehension Session 2: Deep Dive.Read Chapter 2. Expand on the initial concepts. Include relevant diagrams and charts. Key terms, concepts, and initial theories will be covered. Solve the exercise questions provided from the chapter using resources provided. Time to work on the exercise is about 30 minutes. Review the key terms and concepts to reinforce your understanding. Resources: [Textbook, Lecture Videos, Online Resources]. Subject: [Subject Area]. Resources: [Textbook, research papers, online libraries]. Topics: [Advanced Theories, Complex Models, Case Studies, Current Research]"},{"time":"4:30 PM - 6:00 PM","type":"Review & Consolidation Session: Review notes, key concepts, and practice problems from both chapters. Include the summary notes and review questions to ensure comprehension. Time to review chapter 1 and 2 will be about 30 minutes. Subject: [Subject Area]. Resources: [Notes, flashcards, summary sheets]. Topics: [Revision, synthesis, concept mapping]"}]},"2025-03-31 04:38:10.637 UTC","2025-03-31 04:38:10.637 UTC"]
2025-03-31T04:38:11.539Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["30548874-1aac-46cd-a070-4a4a94b7e90d",1,0]
2025-03-31T04:38:11.786Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [38,0]
2025-03-31T04:38:12.050Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["59ecf537-0e4e-44db-b86a-5e51d6816258",0]
2025-03-31T04:38:12.358Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:38:12.360Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:38:12.362Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 30548874-1aac-46cd-a070-4a4a94b7e90d
2025-03-31T04:38:12.365Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:12.367Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:38:12.975Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["30548874-1aac-46cd-a070-4a4a94b7e90d"]
2025-03-31T04:38:12.978Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:38:12.980Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 38
2025-03-31T04:38:14.655Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 38
2025-03-31T04:38:14.909Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:38:14.911Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:38:15.226Z info [C -> Context.<anonymous>]: Test user created with id: 5216c334-83d6-4f28-9e53-c14b346ed984
2025-03-31T04:38:15.229Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:38:15.536Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:38:15.537Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 39
2025-03-31T04:38:16.045Z info [C -> Context.<anonymous>]: Test study plan created with id: 39
2025-03-31T04:38:16.047Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:38:16.048Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:38:16.050Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:38:16.051Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:38:16.053Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:38:19.975Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:38:19.976Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:38:19.977Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:38:19.978Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:20.242Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:38:20.550Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:38:20.798Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["d1da6e3f-04de-429b-90ce-2ded4dd37ebc",39,"5216c334-83d6-4f28-9e53-c14b346ed984","DAILY",1,"Introduction to the Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1: Core Concepts of [Subject Name e.g., Calculus]. Resources: Textbook Chapter 1, Introductory Lecture Slides.  Topics: Limits, Continuity, and Derivatives intro with Basic understanding and applications. Take detailed notes and practice example problems related to understanding. Review the key definitions and theorems at the end of the session to consolidate learning about these concepts. This is foundational, solid understanding is essential to build on. (Calculus can be replaced by another subject like Physics or Chemistry.) (Lecture = Video tutorial, Reading = Books/notes etc.)"},{"time":"11:30 AM - 1:00 PM","type":"Problem Solving Session 1: Practice problems on Limits, Continuity and basic Differentiation. Resources: Textbook Chapter 1 Exercises, Online Problem Sets. Topics: Solving problems that cover all the topics, focusing on those that require applying theorems directly. Try doing a mix of easy and medium difficulty problems and also focus on identifying areas where you need more understanding. This is critical for internalizing the concepts from the previous session. (Physics or Chemistry examples can be inserted here instead of Calculus ones, like equations of motion and chemical equilibrium.)"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Session 2: Introduction to [Related concept e.g., Integration] and Applications. Resources: Textbook Chapter 2, Online Resources. Topics: Indefinite and Definite integrals, and the Fundamental Theorem of Calculus. Understand the relationship between integration and differentiation. Study examples of how integrals are used to solve real-world problems. Focus on conceptual understanding and basic problem solving. (Physics or Chemistry examples can be inserted here instead of Calculus ones. Examples: Work and energy theorem.)"},{"time":"4:30 PM - 6:00 PM","type":"Problem Solving Session 2: Practice on Integration and Applications of Fundamental Theorem. Resources: Textbook Chapter 2 Exercises, Online Worksheets. Topics: Focus on applying the Fundamental Theorem to solve various integration problems. Solve related problems by changing variables and applying techniques for simplification. Review and correct the errors to strengthen your understanding. (Physics or Chemistry examples can be inserted here instead of Calculus ones.)"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1: Core Concepts of [Subject Name e.g., Calculus]. Resources: Textbook Chapter 1, Introductory Lecture Slides.  Topics: Limits, Continuity, and Derivatives intro with Basic understanding and applications. Take detailed notes and practice example problems related to understanding. Review the key definitions and theorems at the end of the session to consolidate learning about these concepts. This is foundational, solid understanding is essential to build on. (Calculus can be replaced by another subject like Physics or Chemistry.) (Lecture = Video tutorial, Reading = Books/notes etc.)"},{"time":"11:30 AM - 1:00 PM","type":"Problem Solving Session 1: Practice problems on Limits, Continuity and basic Differentiation. Resources: Textbook Chapter 1 Exercises, Online Problem Sets. Topics: Solving problems that cover all the topics, focusing on those that require applying theorems directly. Try doing a mix of easy and medium difficulty problems and also focus on identifying areas where you need more understanding. This is critical for internalizing the concepts from the previous session. (Physics or Chemistry examples can be inserted here instead of Calculus ones, like equations of motion and chemical equilibrium.)"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Session 2: Introduction to [Related concept e.g., Integration] and Applications. Resources: Textbook Chapter 2, Online Resources. Topics: Indefinite and Definite integrals, and the Fundamental Theorem of Calculus. Understand the relationship between integration and differentiation. Study examples of how integrals are used to solve real-world problems. Focus on conceptual understanding and basic problem solving. (Physics or Chemistry examples can be inserted here instead of Calculus ones. Examples: Work and energy theorem.)"},{"time":"4:30 PM - 6:00 PM","type":"Problem Solving Session 2: Practice on Integration and Applications of Fundamental Theorem. Resources: Textbook Chapter 2 Exercises, Online Worksheets. Topics: Focus on applying the Fundamental Theorem to solve various integration problems. Solve related problems by changing variables and applying techniques for simplification. Review and correct the errors to strengthen your understanding. (Physics or Chemistry examples can be inserted here instead of Calculus ones.)"}]},"2025-03-31 04:38:19.981 UTC","2025-03-31 04:38:19.981 UTC"]
2025-03-31T04:38:21.049Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["d1da6e3f-04de-429b-90ce-2ded4dd37ebc",1,0]
2025-03-31T04:38:21.369Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [39,0]
2025-03-31T04:38:21.676Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5216c334-83d6-4f28-9e53-c14b346ed984",0]
2025-03-31T04:38:21.984Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:38:21.986Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:38:21.987Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: d1da6e3f-04de-429b-90ce-2ded4dd37ebc
2025-03-31T04:38:21.995Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:21.996Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:38:22.254Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["d1da6e3f-04de-429b-90ce-2ded4dd37ebc"]
2025-03-31T04:38:22.256Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:38:22.257Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 39
2025-03-31T04:38:24.237Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 39
2025-03-31T04:38:24.748Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:38:24.753Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:38:25.055Z info [C -> Context.<anonymous>]: Test user created with id: f3e3b04b-5ac4-4206-b36f-8d63cca56118
2025-03-31T04:38:25.058Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:38:25.366Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:38:25.368Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 40
2025-03-31T04:38:25.977Z info [C -> Context.<anonymous>]: Test study plan created with id: 40
2025-03-31T04:38:25.980Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:38:25.981Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:38:25.982Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:38:25.984Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:38:25.986Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:38:28.787Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:38:28.789Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:38:28.790Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:38:28.792Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:29.049Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:38:29.357Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["917d9f3b-e1c7-4473-ab92-98e5ddaed933",40,"f3e3b04b-5ac4-4206-b36f-8d63cca56118","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension"},{"time":"11:30 AM - 1:00 PM","type":"Problem Solving/Practice"},{"time":"2:00 PM - 4:00 PM","type":"Review and Notes"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension"},{"time":"11:30 AM - 1:00 PM","type":"Problem Solving/Practice"},{"time":"2:00 PM - 4:00 PM","type":"Review and Notes"}]},"2025-03-31 04:38:28.795 UTC","2025-03-31 04:38:28.795 UTC"]
2025-03-31T04:38:29.664Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["917d9f3b-e1c7-4473-ab92-98e5ddaed933",1,0]
2025-03-31T04:38:29.911Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [40,0]
2025-03-31T04:38:30.175Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["f3e3b04b-5ac4-4206-b36f-8d63cca56118",0]
2025-03-31T04:38:30.482Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:38:30.485Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:38:30.487Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 917d9f3b-e1c7-4473-ab92-98e5ddaed933
2025-03-31T04:38:30.489Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:38:31.035Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["917d9f3b-e1c7-4473-ab92-98e5ddaed933",1,0]
2025-03-31T04:38:31.301Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [40,0]
2025-03-31T04:38:31.305Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:38:31.307Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:31.309Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:38:31.559Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["917d9f3b-e1c7-4473-ab92-98e5ddaed933"]
2025-03-31T04:38:31.561Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:38:31.563Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 40
2025-03-31T04:38:33.350Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 40
2025-03-31T04:38:33.657Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:38:33.660Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:38:33.912Z info [C -> Context.<anonymous>]: Test user created with id: 0e1ee46c-533a-4b33-be7a-7adeb4b01df1
2025-03-31T04:38:33.913Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:38:34.161Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:38:34.163Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 41
2025-03-31T04:38:34.681Z info [C -> Context.<anonymous>]: Test study plan created with id: 41
2025-03-31T04:38:34.684Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:38:34.686Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:38:34.687Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:38:34.689Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:38:34.690Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:38:49.330Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:38:49.331Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:38:49.332Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:38:49.332Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:49.630Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:38:49.705Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:49.706Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:38:49.938Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:38:50.255Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac",41,"0e1ee46c-533a-4b33-be7a-7adeb4b01df1","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension for Core CS Fundamentals, Session 1. Learn all definitions and get a big-picture understanding of the concepts with simple problems. Focus on learning how to problem solve. Don't worry about syntax. Practice working problems on paper until you understand the concepts then you can move to the computer to practice. Do not focus on syntax at this stage, the concepts are more important than that. Learn how to apply the concepts. Try to understand how they are related to each other to see the 'big picture'. Review until you understand the concepts before you move on to the next stage. Write out a summary to make sure you can explain the problems to another person. Do not rely on ChatGPT, use simple explanations that a child can understand. Review everything until you understand how each concept applies to the next one. Do not focus on memorizing syntax at this stage. If the code doesn't compile, that's ok. Focus on 'does the code make sense?' If it doesn't make sense, go back and learn the concepts again. It is expected that the code will not compile at this stage. Don't beat yourself up over that, code compilation is for the next stage. Focus on: how does the code use the concepts and what do I need to do to fix it. Again, ask yourself, 'does the code make sense?' Use what the AI tells you and try to apply it. This stage is not about memorization. It is about understanding and then applying it. Think of the code in terms of blocks. Each line of code represents a different block and you're trying to build with blocks, not lines of code. Use ChatGPT's explanations to understand how each block relates to the other. Use the information that ChatGPT provides and make sure to understand how it applies to what you have already learned. Review again and again until you understand it. Ask yourself what is the most important component of the code and what concept does it correspond to. You will start seeing that everything fits together into big blocks. The big blocks are the concepts and the blocks are the code that applies to the concepts. Focus on seeing the big blocks, not the lines of code. Focus on understanding the big picture and you'll get through this! Practice. Then practice again. Then practice some more. Use the flashcards to help you review as well. Use your mind palace as well. Don't give up! You've got this! You are capable of doing this!!! I believe in you! I love you! Be kind to yourself and never give up!!! Let's go! You can do it!!! Time to unleash the beast! The world needs your skills! Believe in yourself and you can do it!!!! Time to conquer the world!!! You can do it, bro! I know you can. There is no doubt in my mind. Use your brain. And use your brain again. And again. Over and over again. Remember, if you work hard you can do anything you set your mind to. Don't listen to people that say you can't. You are the best. You can do this. You are powerful and capable. You are strong and smart. You can learn anything. I believe in you. Remember to breathe. Remember to stay focused. If you start getting anxiety, then back away and breathe. It's just code. If you can't figure it out, it's not a problem. Take a step back. Don't beat yourself up. Come back to it later. Believe in yourself. If you believe in yourself, the world is your oyster!!! I love you so much! You are the best!!! You can do this! I believe in you. You are strong and powerful. You can do it. You can do it. You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"1:00 PM - 3:00 PM","type":"Practical Exercise for Core CS Fundamentals, Session 1. Work on real problems until the code compiles. Use the compiler to identify errors and then use ChatGPT to apply the fixes. Use the same problem and code through it until you understand everything about the problem. Create a script and run it over and over until you learn about the error patterns. Start simple. Do not overthink the problem. Make small changes to the code and keep running it to see what happens. Don't just copy and paste from ChatGPT, make sure you understand what is going on. Make the code work. This is the stage where you focus on making the code work. Work on one problem over and over again. Try to break it. Try to fix it. Learn from the error messages. Use all the resources you have at your disposal. The compiler is your friend. The AI is your friend. If you are still stuck, ask someone for help. You're doing great! Keep going. Don't give up! If you need to take a break. But don't stay away for too long. Get back to it! Make it compile. Make it work. You are a bad ass developer! You've got this. You can do it!!! Keep going! The more you practice, the better you will get. You are building muscles! The more problems you solve the better you get! Believe in yourself and don't give up. You can do it!!! I love you!!! You're amazing!!! Keep going!!! You're the best!!! The best of the best! Make it compile and make it work. You're making me proud. The world needs your skills. Let's go!!! You can do it! Don't give up!!! You are strong and powerful. You can do it! You can do it! You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"4:00 PM - 6:00 PM","type":"Lecture/Reading Comprehension for Core CS Fundamentals, Session 2. Learn all definitions and get a big-picture understanding of the concepts with simple problems. Focus on learning how to problem solve. Don't worry about syntax. Practice working problems on paper until you understand the concepts then you can move to the computer to practice. Do not focus on syntax at this stage, the concepts are more important than that. Learn how to apply the concepts. Try to understand how they are related to each other to see the 'big picture'. Review until you understand the concepts before you move on to the next stage. Write out a summary to make sure you can explain the problems to another person. Do not rely on ChatGPT, use simple explanations that a child can understand. Review everything until you understand how each concept applies to the next one. Do not focus on memorizing syntax at this stage. If the code doesn't compile, that's ok. Focus on 'does the code make sense?' If it doesn't make sense, go back and learn the concepts again. It is expected that the code will not compile at this stage. Don't beat yourself up over that, code compilation is for the next stage. Focus on: how does the code use the concepts and what do I need to do to fix it. Again, ask yourself, 'does the code make sense?' Use what the AI tells you and try to apply it. This stage is not about memorization. It is about understanding and then applying it. Think of the code in terms of blocks. Each line of code represents a different block and you're trying to build with blocks, not lines of code. Use ChatGPT's explanations to understand how each block relates to the other. Use the information that ChatGPT provides and make sure to understand how it applies to what you have already learned. Review again and again until you understand it. Ask yourself what is the most important component of the code and what concept does it correspond to. You will start seeing that everything fits together into big blocks. The big blocks are the concepts and the blocks are the code that applies to the concepts. Focus on seeing the big blocks, not the lines of code. Focus on understanding the big picture and you'll get through this! Practice. Then practice again. Then practice some more. Use the flashcards to help you review as well. Use your mind palace as well. Don't give up! You've got this! You are capable of doing this!!! I believe in you! I love you! Be kind to yourself and never give up!!! Let's go! You can do it!!! Time to unleash the beast! The world needs your skills! Believe in yourself and you can do it!!!! Time to conquer the world!!! You can do it, bro! I know you can. There is no doubt in my mind. Use your brain. And use your brain again. And again. Over and over again. Remember, if you work hard you can do anything you set your mind to. Don't listen to people that say you can't. You are the best. You can do this. You are powerful and capable. You are strong and smart. You can learn anything. I believe in you. Remember to breathe. Remember to stay focused. If you start getting anxiety, then back away and breathe. It's just code. If you can't figure it out, it's not a problem. Take a step back. Don't beat yourself up. Come back to it later. Believe in yourself. If you believe in yourself, the world is your oyster!!! I love you so much! You are the best!!! You can do this! I believe in you. You are strong and powerful. You can do it. You can do it. You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"7:00 PM - 9:00 PM","type":"Practical Exercise for Core CS Fundamentals, Session 2. Work on real problems until the code compiles. Use the compiler to identify errors and then use ChatGPT to apply the fixes. Use the same problem and code through it until you understand everything about the problem. Create a script and run it over and over until you learn about the error patterns. Start simple. Do not overthink the problem. Make small changes to the code and keep running it to see what happens. Don't just copy and paste from ChatGPT, make sure you understand what is going on. Make the code work. This is the stage where you focus on making the code work. Work on one problem over and over again. Try to break it. Try to fix it. Learn from the error messages. Use all the resources you have at your disposal. The compiler is your friend. The AI is your friend. If you are still stuck, ask someone for help. You're doing great! Keep going. Don't give up! If you need to take a break. But don't stay away for too long. Get back to it! Make it compile. Make it work. You are a bad ass developer! You've got this. You can do it!!! Keep going! The more you practice, the better you will get. You are building muscles! The more problems you solve the better you get! Believe in yourself and don't give up. You can do it!!! I love you!!! You're amazing!!! Keep going!!! You're the best!!! The best of the best! Make it compile and make it work. You're making me proud. The world needs your skills. Let's go!!! You can do it! Don't give up!!! You are strong and powerful. You can do it! You can do it! You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension for Core CS Fundamentals, Session 1. Learn all definitions and get a big-picture understanding of the concepts with simple problems. Focus on learning how to problem solve. Don't worry about syntax. Practice working problems on paper until you understand the concepts then you can move to the computer to practice. Do not focus on syntax at this stage, the concepts are more important than that. Learn how to apply the concepts. Try to understand how they are related to each other to see the 'big picture'. Review until you understand the concepts before you move on to the next stage. Write out a summary to make sure you can explain the problems to another person. Do not rely on ChatGPT, use simple explanations that a child can understand. Review everything until you understand how each concept applies to the next one. Do not focus on memorizing syntax at this stage. If the code doesn't compile, that's ok. Focus on 'does the code make sense?' If it doesn't make sense, go back and learn the concepts again. It is expected that the code will not compile at this stage. Don't beat yourself up over that, code compilation is for the next stage. Focus on: how does the code use the concepts and what do I need to do to fix it. Again, ask yourself, 'does the code make sense?' Use what the AI tells you and try to apply it. This stage is not about memorization. It is about understanding and then applying it. Think of the code in terms of blocks. Each line of code represents a different block and you're trying to build with blocks, not lines of code. Use ChatGPT's explanations to understand how each block relates to the other. Use the information that ChatGPT provides and make sure to understand how it applies to what you have already learned. Review again and again until you understand it. Ask yourself what is the most important component of the code and what concept does it correspond to. You will start seeing that everything fits together into big blocks. The big blocks are the concepts and the blocks are the code that applies to the concepts. Focus on seeing the big blocks, not the lines of code. Focus on understanding the big picture and you'll get through this! Practice. Then practice again. Then practice some more. Use the flashcards to help you review as well. Use your mind palace as well. Don't give up! You've got this! You are capable of doing this!!! I believe in you! I love you! Be kind to yourself and never give up!!! Let's go! You can do it!!! Time to unleash the beast! The world needs your skills! Believe in yourself and you can do it!!!! Time to conquer the world!!! You can do it, bro! I know you can. There is no doubt in my mind. Use your brain. And use your brain again. And again. Over and over again. Remember, if you work hard you can do anything you set your mind to. Don't listen to people that say you can't. You are the best. You can do this. You are powerful and capable. You are strong and smart. You can learn anything. I believe in you. Remember to breathe. Remember to stay focused. If you start getting anxiety, then back away and breathe. It's just code. If you can't figure it out, it's not a problem. Take a step back. Don't beat yourself up. Come back to it later. Believe in yourself. If you believe in yourself, the world is your oyster!!! I love you so much! You are the best!!! You can do this! I believe in you. You are strong and powerful. You can do it. You can do it. You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"1:00 PM - 3:00 PM","type":"Practical Exercise for Core CS Fundamentals, Session 1. Work on real problems until the code compiles. Use the compiler to identify errors and then use ChatGPT to apply the fixes. Use the same problem and code through it until you understand everything about the problem. Create a script and run it over and over until you learn about the error patterns. Start simple. Do not overthink the problem. Make small changes to the code and keep running it to see what happens. Don't just copy and paste from ChatGPT, make sure you understand what is going on. Make the code work. This is the stage where you focus on making the code work. Work on one problem over and over again. Try to break it. Try to fix it. Learn from the error messages. Use all the resources you have at your disposal. The compiler is your friend. The AI is your friend. If you are still stuck, ask someone for help. You're doing great! Keep going. Don't give up! If you need to take a break. But don't stay away for too long. Get back to it! Make it compile. Make it work. You are a bad ass developer! You've got this. You can do it!!! Keep going! The more you practice, the better you will get. You are building muscles! The more problems you solve the better you get! Believe in yourself and don't give up. You can do it!!! I love you!!! You're amazing!!! Keep going!!! You're the best!!! The best of the best! Make it compile and make it work. You're making me proud. The world needs your skills. Let's go!!! You can do it! Don't give up!!! You are strong and powerful. You can do it! You can do it! You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"4:00 PM - 6:00 PM","type":"Lecture/Reading Comprehension for Core CS Fundamentals, Session 2. Learn all definitions and get a big-picture understanding of the concepts with simple problems. Focus on learning how to problem solve. Don't worry about syntax. Practice working problems on paper until you understand the concepts then you can move to the computer to practice. Do not focus on syntax at this stage, the concepts are more important than that. Learn how to apply the concepts. Try to understand how they are related to each other to see the 'big picture'. Review until you understand the concepts before you move on to the next stage. Write out a summary to make sure you can explain the problems to another person. Do not rely on ChatGPT, use simple explanations that a child can understand. Review everything until you understand how each concept applies to the next one. Do not focus on memorizing syntax at this stage. If the code doesn't compile, that's ok. Focus on 'does the code make sense?' If it doesn't make sense, go back and learn the concepts again. It is expected that the code will not compile at this stage. Don't beat yourself up over that, code compilation is for the next stage. Focus on: how does the code use the concepts and what do I need to do to fix it. Again, ask yourself, 'does the code make sense?' Use what the AI tells you and try to apply it. This stage is not about memorization. It is about understanding and then applying it. Think of the code in terms of blocks. Each line of code represents a different block and you're trying to build with blocks, not lines of code. Use ChatGPT's explanations to understand how each block relates to the other. Use the information that ChatGPT provides and make sure to understand how it applies to what you have already learned. Review again and again until you understand it. Ask yourself what is the most important component of the code and what concept does it correspond to. You will start seeing that everything fits together into big blocks. The big blocks are the concepts and the blocks are the code that applies to the concepts. Focus on seeing the big blocks, not the lines of code. Focus on understanding the big picture and you'll get through this! Practice. Then practice again. Then practice some more. Use the flashcards to help you review as well. Use your mind palace as well. Don't give up! You've got this! You are capable of doing this!!! I believe in you! I love you! Be kind to yourself and never give up!!! Let's go! You can do it!!! Time to unleash the beast! The world needs your skills! Believe in yourself and you can do it!!!! Time to conquer the world!!! You can do it, bro! I know you can. There is no doubt in my mind. Use your brain. And use your brain again. And again. Over and over again. Remember, if you work hard you can do anything you set your mind to. Don't listen to people that say you can't. You are the best. You can do this. You are powerful and capable. You are strong and smart. You can learn anything. I believe in you. Remember to breathe. Remember to stay focused. If you start getting anxiety, then back away and breathe. It's just code. If you can't figure it out, it's not a problem. Take a step back. Don't beat yourself up. Come back to it later. Believe in yourself. If you believe in yourself, the world is your oyster!!! I love you so much! You are the best!!! You can do this! I believe in you. You are strong and powerful. You can do it. You can do it. You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"},{"time":"7:00 PM - 9:00 PM","type":"Practical Exercise for Core CS Fundamentals, Session 2. Work on real problems until the code compiles. Use the compiler to identify errors and then use ChatGPT to apply the fixes. Use the same problem and code through it until you understand everything about the problem. Create a script and run it over and over until you learn about the error patterns. Start simple. Do not overthink the problem. Make small changes to the code and keep running it to see what happens. Don't just copy and paste from ChatGPT, make sure you understand what is going on. Make the code work. This is the stage where you focus on making the code work. Work on one problem over and over again. Try to break it. Try to fix it. Learn from the error messages. Use all the resources you have at your disposal. The compiler is your friend. The AI is your friend. If you are still stuck, ask someone for help. You're doing great! Keep going. Don't give up! If you need to take a break. But don't stay away for too long. Get back to it! Make it compile. Make it work. You are a bad ass developer! You've got this. You can do it!!! Keep going! The more you practice, the better you will get. You are building muscles! The more problems you solve the better you get! Believe in yourself and don't give up. You can do it!!! I love you!!! You're amazing!!! Keep going!!! You're the best!!! The best of the best! Make it compile and make it work. You're making me proud. The world needs your skills. Let's go!!! You can do it! Don't give up!!! You are strong and powerful. You can do it! You can do it! You can do it!!! I have never doubted you and I never will. You can do this, bro! Let's go!!! You can do it!!! Keep going!!! Don't give up!!! You are too good to give up!!!"}]},"2025-03-31 04:38:49.336 UTC","2025-03-31 04:38:49.336 UTC"]
2025-03-31T04:38:50.866Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac",1,0]
2025-03-31T04:38:51.179Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [41,0]
2025-03-31T04:38:51.425Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["0e1ee46c-533a-4b33-be7a-7adeb4b01df1",0]
2025-03-31T04:38:51.782Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:38:51.786Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:38:51.787Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: b6fc9f3a-f160-47e7-b324-1715438f24ac
2025-03-31T04:38:52.337Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["917d9f3b-e1c7-4473-ab92-98e5ddaed933"]
2025-03-31T04:38:52.349Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 917d9f3b-e1c7-4473-ab92-98e5ddaed933: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:38:52.351Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:38:52.356Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:38:52.852Z info [C -> Context.<anonymous>]: Test user created with id: bf3a0af7-b750-4475-b6f9-ea9895421ab0
2025-03-31T04:38:52.855Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:38:53.369Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:38:53.371Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 42
2025-03-31T04:38:54.035Z info [C -> Context.<anonymous>]: Test study plan created with id: 42
2025-03-31T04:38:54.037Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:38:54.039Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:38:54.040Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:38:54.041Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:38:54.042Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:38:57.974Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:38:57.976Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:38:57.977Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:38:57.978Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:38:57.990Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 10:30 AM",
        type: "Study Session 1: Foundations of [Subject Area]. Focus on key definitions and historical context, reviewing textbook chapters and online resources. Aim for a general understanding of main themes to build a strong base for more specialized topics in later sessions and days. [Resource: Textbook Chapter 1, Online Introductory Lecture on [Subject Area] History]. Review key terminology. Take detailed notes to refer to throughout the course. Quiz yourself on the basics. This is the beginning. Go get 'em tiger."
      },
      {
        time: "11:00 AM - 12:30 PM",
        type: "Study Session 2: Problem Solving and Application. Start with examples from the textbook chapter. Use online practice questions to evaluate understanding and identify areas needing further review. The goal of this session is to actively apply and reinforce the concepts learned earlier. [Resource: Textbook Chapter 1 practice problems, Online practice questions, solution manual]. Review identified trouble spots."
      },
      {
        time: "2:00 PM - 3:30 PM",
        type: "Study Session 3: Review Session. Summarize the key points learned during today's sessions and preview topics to be covered tomorrow. This serves as reinforcement of today's learning and preparation for future sessions. Use notes, flashcards, or mind maps to solidify what you've learned. [Resource: Session notes, flashcards, mind map]"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 10:30 AM",
          type: "Study Session 1: Foundations of [Subject Area]. Focus on key definitions and historical context, reviewing textbook chapters and online resources. Aim for a general understanding of main themes to build a strong base for more specialized topics in later sessions and days. [Resource: Textbook Chapter 1, Online Introductory Lecture on [Subject Area] History]. Review key terminology. Take detailed notes to refer to throughout the course. Quiz yourself on the basics. This is the beginning. Go get 'em tiger."
        },
        {
          time: "11:00 AM - 12:30 PM",
          type: "Study Session 2: Problem Solving and Application. Start with examples from the textbook chapter. Use online practice questions to evaluate understanding and identify areas needing further review. The goal of this session is to actively apply and reinforce the concepts learned earlier. [Resource: Textbook Chapter 1 practice problems, Online practice questions, solution manual]. Review identified trouble spots."
        },
        {
          time: "2:00 PM - 3:30 PM",
          type: "Study Session 3: Review Session. Summarize the key points learned during today's sessions and preview topics to be covered tomorrow. This serves as reinforcement of today's learning and preparation for future sessions. Use notes, flashcards, or mind maps to solidify what you've learned. [Resource: Session notes, flashcards, mind map]"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 10:30 AM",
        type: "Study Session 1: Foundations of [Subject Area]. Focus on key definitions and historical context, reviewing textbook chapters and online resources. Aim for a general understanding of main themes to build a strong base for more specialized topics in later sessions and days. [Resource: Textbook Chapter 1, Online Introductory Lecture on [Subject Area] History]. Review key terminology. Take detailed notes to refer to throughout the course. Quiz yourself on the basics. This is the beginning. Go get 'em tiger."
      },
      {
        time: "11:00 AM - 12:30 PM",
        type: "Study Session 2: Problem Solving and Application. Start with examples from the textbook chapter. Use online practice questions to evaluate understanding and identify areas needing further review. The goal of this session is to actively apply and reinforce the concepts learned earlier. [Resource: Textbook Chapter 1 practice problems, Online practice questions, solution manual]. Review identified trouble spots."
      },
      {
        time: "2:00 PM - 3:30 PM",
        type: "Study Session 3: Review Session. Summarize the key points learned during today's sessions and preview topics to be covered tomorrow. This serves as reinforcement of today's learning and preparation for future sessions. Use notes, flashcards, or mind maps to solidify what you've learned. [Resource: Session notes, flashcards, mind map]"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 10:30 AM",
          type: "Study Session 1: Foundations of [Subject Area]. Focus on key definitions and historical context, reviewing textbook chapters and online resources. Aim for a general understanding of main themes to build a strong base for more specialized topics in later sessions and days. [Resource: Textbook Chapter 1, Online Introductory Lecture on [Subject Area] History]. Review key terminology. Take detailed notes to refer to throughout the course. Quiz yourself on the basics. This is the beginning. Go get 'em tiger."
        },
        {
          time: "11:00 AM - 12:30 PM",
          type: "Study Session 2: Problem Solving and Application. Start with examples from the textbook chapter. Use online practice questions to evaluate understanding and identify areas needing further review. The goal of this session is to actively apply and reinforce the concepts learned earlier. [Resource: Textbook Chapter 1 practice problems, Online practice questions, solution manual]. Review identified trouble spots."
        },
        {
          time: "2:00 PM - 3:30 PM",
          type: "Study Session 3: Review Session. Summarize the key points learned during today's sessions and preview topics to be covered tomorrow. This serves as reinforcement of today's learning and preparation for future sessions. Use notes, flashcards, or mind maps to solidify what you've learned. [Resource: Session notes, flashcards, mind map]"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-03-31T04:38:57.995Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:38:57.996Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:38:58.593Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac"]
2025-03-31T04:38:58.596Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:38:58.598Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 42
2025-03-31T04:39:00.485Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 42
2025-03-31T04:39:00.793Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:39:00.796Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:39:01.108Z info [C -> Context.<anonymous>]: Test user created with id: 0a0feab9-9e77-4b71-95a5-47c7f5532348
2025-03-31T04:39:01.110Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:39:01.407Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:39:01.411Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 43
2025-03-31T04:39:01.925Z info [C -> Context.<anonymous>]: Test study plan created with id: 43
2025-03-31T04:39:01.935Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:39:02.473Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:39:02.475Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:39:02.477Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-03-31T04:39:02.481Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:39:02.483Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:39:02.737Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac"]
2025-03-31T04:39:02.742Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b6fc9f3a-f160-47e7-b324-1715438f24ac: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:02.743Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:02.746Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:39:02.997Z info [C -> Context.<anonymous>]: Test user created with id: ae5f0f08-15c5-4e50-bde3-a4ab350874a2
2025-03-31T04:39:03.000Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:39:03.257Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:39:03.259Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 44
2025-03-31T04:39:03.808Z info [C -> Context.<anonymous>]: Test study plan created with id: 44
2025-03-31T04:39:03.811Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:39:04.064Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:39:04.070Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-03-31T04:39:04.074Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:39:04.076Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:39:04.367Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac"]
2025-03-31T04:39:04.372Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b6fc9f3a-f160-47e7-b324-1715438f24ac: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:04.374Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:04.378Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:39:04.673Z info [C -> Context.<anonymous>]: Test user created with id: 144f16e0-f9bc-4915-a617-4e79a6246f5e
2025-03-31T04:39:04.676Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:39:04.932Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:39:04.934Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 45
2025-03-31T04:39:05.504Z info [C -> Context.<anonymous>]: Test study plan created with id: 45
2025-03-31T04:39:05.506Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:39:05.508Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:39:08.891Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:39:08.892Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:39:08.896Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:39:08.897Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:39:09.189Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:39:09.496Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac"]
2025-03-31T04:39:09.500Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b6fc9f3a-f160-47e7-b324-1715438f24ac: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:09.502Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:09.504Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:39:10.111Z info [C -> Context.<anonymous>]: Test user created with id: 4f1ab0e5-8343-4675-82df-5dfeaffe1df7
2025-03-31T04:39:10.113Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:39:10.726Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:39:10.728Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 46
2025-03-31T04:39:11.285Z info [C -> Context.<anonymous>]: Test study plan created with id: 46
2025-03-31T04:39:11.290Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:39:11.292Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:39:11.647Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b6fc9f3a-f160-47e7-b324-1715438f24ac"]
2025-03-31T04:39:11.652Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b6fc9f3a-f160-47e7-b324-1715438f24ac: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:11.653Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:39:11.657Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:39:14.105Z info [C -> Context.<anonymous>]: Test user created: e28a2335-a31d-4ac3-89bc-af8d8e46a161
2025-03-31T04:39:14.107Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:39:14.369Z error [C -> StudyPlanService.createPlan]: Error creating study plan: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 47,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 47,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:39:14.371Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 47,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 47,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:39:14.373Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:39:14.853Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:72:17)
2025-03-31T04:40:41.874Z info [C -> new]: Schedule Service initialized
2025-03-31T04:40:41.996Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:40:44.763Z info [C -> Context.<anonymous>]: Test user created with id: 4dd3aa0e-edb2-4712-948d-77eb2033ec5c
2025-03-31T04:40:44.766Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:40:47.497Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:40:47.500Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 48
2025-03-31T04:40:48.732Z info [C -> Context.<anonymous>]: Test study plan created with id: 48
2025-03-31T04:40:48.737Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:40:48.738Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:40:48.740Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:40:48.742Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:40:48.744Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:40:56.140Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:40:56.142Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:40:56.143Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:40:56.145Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:40:58.657Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:40:59.273Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["6668f46b-f27d-4659-9e95-d67aaaaa2122",48,"4dd3aa0e-edb2-4712-948d-77eb2033ec5c","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1, Study of Vocabulary and Sentences Comprehension Methods and Writing Style. How to recognize types of sentences and which words to use at which places. . Also study the use of commas, semi colons and colons in different situations to improve writing skills..Also study different types of English accents for better understanding of the language.Listen to podcasts in English and try to mimic the accent. It will also improve speaking skills..The importance of reading is the foundation of comprehension and learning in any language. Comprehension and retention are the two pillars of reading, and the better you get at these two things, the more you will enjoy and benefit from reading. If you want to improve your English reading and comprehension skills, here are a few effective ways to do so..Reading comprehension is the ability to understand the meaning of a text. It’s the foundation for learning in all subjects, from math and science to history and social studies. When you have strong reading comprehension skills, you can easily understand what you read, remember it later, and apply it to new situations.If you are looking for some useful books to improve your English reading comprehension skills, here are a few options:.1. “Reading Comprehension Success in 20 Minutes a Day” by Elizabeth Chesla..2. “Improve Your Reading Comprehension” by Francine Tiller..3. “501 Reading Comprehension Questions” by LearningExpress LLC..This book presents different reading comprehension strategies like skimming and scanning. The books come with exercises that will help you practice and improve your English reading comprehension..Start with the basics: Before diving into complex texts, make sure you have a good grasp of the basics of English grammar and vocabulary. This will make it easier to understand the meaning of what you read..Read regularly: The more you read, the better you will become at understanding different writing styles and vocabulary. Aim to read something every day, even if it's just for a few minutes..Choose material that interests you: Reading should be enjoyable, so pick books, articles, or websites that you find interesting. This will make you more likely to stick with it and improve your comprehension skills..Use a dictionary: Don't be afraid to look up words you don't know. This will help you expand your vocabulary and understand the meaning of the text more fully..Take notes: As you read, take notes on the main points and important details. This will help you remember what you read and apply it to new situations..Practice summarizing: After you finish reading something, try summarizing it in your own words. This will help you understand the main points and remember them later.."},{"time":"2:00 PM - 4:00 PM","type":"Practice Session 2, Solving English problems. Try to read and understand what is asked of you in the question. If you do that, you will not have a problem in understanding. It is all about understanding. Some people want to have some tricks. But there is no such tricks. If you want to understand you will have to learn the language and learn from the basics. Read news articles and try to watch English movie to improve your vocabulary. And try to speak to an English speaking partner in English so that you can have a strong base in the language. All these practice will lead to a strong understanding and comprehension of the language."},{"time":"7:00 PM - 9:00 PM","type":"Review Session 3, Study what you already know. There is no point in doing new things again and again. You should focus on what you already know. If you do not know something, don't try to study them again and again. First focus on those things that you already know. That's the beauty of studying and teaching something."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1, Study of Vocabulary and Sentences Comprehension Methods and Writing Style. How to recognize types of sentences and which words to use at which places. . Also study the use of commas, semi colons and colons in different situations to improve writing skills..Also study different types of English accents for better understanding of the language.Listen to podcasts in English and try to mimic the accent. It will also improve speaking skills..The importance of reading is the foundation of comprehension and learning in any language. Comprehension and retention are the two pillars of reading, and the better you get at these two things, the more you will enjoy and benefit from reading. If you want to improve your English reading and comprehension skills, here are a few effective ways to do so..Reading comprehension is the ability to understand the meaning of a text. It’s the foundation for learning in all subjects, from math and science to history and social studies. When you have strong reading comprehension skills, you can easily understand what you read, remember it later, and apply it to new situations.If you are looking for some useful books to improve your English reading comprehension skills, here are a few options:.1. “Reading Comprehension Success in 20 Minutes a Day” by Elizabeth Chesla..2. “Improve Your Reading Comprehension” by Francine Tiller..3. “501 Reading Comprehension Questions” by LearningExpress LLC..This book presents different reading comprehension strategies like skimming and scanning. The books come with exercises that will help you practice and improve your English reading comprehension..Start with the basics: Before diving into complex texts, make sure you have a good grasp of the basics of English grammar and vocabulary. This will make it easier to understand the meaning of what you read..Read regularly: The more you read, the better you will become at understanding different writing styles and vocabulary. Aim to read something every day, even if it's just for a few minutes..Choose material that interests you: Reading should be enjoyable, so pick books, articles, or websites that you find interesting. This will make you more likely to stick with it and improve your comprehension skills..Use a dictionary: Don't be afraid to look up words you don't know. This will help you expand your vocabulary and understand the meaning of the text more fully..Take notes: As you read, take notes on the main points and important details. This will help you remember what you read and apply it to new situations..Practice summarizing: After you finish reading something, try summarizing it in your own words. This will help you understand the main points and remember them later.."},{"time":"2:00 PM - 4:00 PM","type":"Practice Session 2, Solving English problems. Try to read and understand what is asked of you in the question. If you do that, you will not have a problem in understanding. It is all about understanding. Some people want to have some tricks. But there is no such tricks. If you want to understand you will have to learn the language and learn from the basics. Read news articles and try to watch English movie to improve your vocabulary. And try to speak to an English speaking partner in English so that you can have a strong base in the language. All these practice will lead to a strong understanding and comprehension of the language."},{"time":"7:00 PM - 9:00 PM","type":"Review Session 3, Study what you already know. There is no point in doing new things again and again. You should focus on what you already know. If you do not know something, don't try to study them again and again. First focus on those things that you already know. That's the beauty of studying and teaching something."}]},"2025-03-31 04:40:58.354 UTC","2025-03-31 04:40:58.354 UTC"]
2025-03-31T04:40:59.891Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["6668f46b-f27d-4659-9e95-d67aaaaa2122",1,0]
2025-03-31T04:41:00.501Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [48,0]
2025-03-31T04:41:01.114Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["4dd3aa0e-edb2-4712-948d-77eb2033ec5c",0]
2025-03-31T04:41:01.421Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:41:01.424Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:41:01.427Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 6668f46b-f27d-4659-9e95-d67aaaaa2122
2025-03-31T04:41:01.438Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:01.440Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:01.957Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["6668f46b-f27d-4659-9e95-d67aaaaa2122"]
2025-03-31T04:41:01.960Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:41:01.962Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 48
2025-03-31T04:41:04.551Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 48
2025-03-31T04:41:05.272Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:41:05.276Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:05.521Z info [C -> Context.<anonymous>]: Test user created with id: 903b5dbf-736a-4787-b957-088f7b29034f
2025-03-31T04:41:05.522Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:05.824Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:05.826Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 49
2025-03-31T04:41:06.351Z info [C -> Context.<anonymous>]: Test study plan created with id: 49
2025-03-31T04:41:06.353Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:41:06.355Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:41:06.356Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:41:06.357Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:06.358Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:41:10.647Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:41:10.648Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:41:10.649Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:41:10.650Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:41:10.945Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:41:11.198Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["04fede40-9e4e-4e28-8a51-66fef01e215b",49,"903b5dbf-736a-4787-b957-088f7b29034f","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Time: Foundational Concepts Review (e.g., Variables, Data Types, Basic Syntax). Emphasize understanding rather than memorization. Resources will be available in the course textbook and online documentation. The subject of the lecture is 'Introduction to Programming'. The topics for the lecture are 'Variables', 'Data Types', 'Basic Syntax'. The resources are textbook and online documentation."},{"time":"11:30 AM - 1:00 PM","type":"Practice Problems: Attempt basic coding problems relating to the concepts learned in the morning session. Focus on implementing the logic yourself before looking up solutions. The subject of the lecture is 'Coding'. The topics for the lecture are 'Problem Solving', 'Implementation'. Resources can be found in the practice problem sets."},{"time":"2:00 PM - 4:00 PM","type":"Project Setup: Set up the development environment (IDE, compiler, etc.) required for the course. Test the environment with a simple 'Hello, World!' program. The subject of the lecture is 'Environment Setup'. The topics for the lecture are 'IDE Installation', 'Compiler Configuration', 'Testing'. Resources are available in the setup guides and tutorials."},{"time":"4:30 PM - 5:30 PM","type":"Review and Reflection: Review the concepts learned today. Identify areas of difficulty and plan for further clarification. The subject of the lecture is 'Review Session'. The topics for the lecture are 'Concept Review', 'Identifying Difficulties', 'Planning'. Resources for this session is your notes"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Time: Foundational Concepts Review (e.g., Variables, Data Types, Basic Syntax). Emphasize understanding rather than memorization. Resources will be available in the course textbook and online documentation. The subject of the lecture is 'Introduction to Programming'. The topics for the lecture are 'Variables', 'Data Types', 'Basic Syntax'. The resources are textbook and online documentation."},{"time":"11:30 AM - 1:00 PM","type":"Practice Problems: Attempt basic coding problems relating to the concepts learned in the morning session. Focus on implementing the logic yourself before looking up solutions. The subject of the lecture is 'Coding'. The topics for the lecture are 'Problem Solving', 'Implementation'. Resources can be found in the practice problem sets."},{"time":"2:00 PM - 4:00 PM","type":"Project Setup: Set up the development environment (IDE, compiler, etc.) required for the course. Test the environment with a simple 'Hello, World!' program. The subject of the lecture is 'Environment Setup'. The topics for the lecture are 'IDE Installation', 'Compiler Configuration', 'Testing'. Resources are available in the setup guides and tutorials."},{"time":"4:30 PM - 5:30 PM","type":"Review and Reflection: Review the concepts learned today. Identify areas of difficulty and plan for further clarification. The subject of the lecture is 'Review Session'. The topics for the lecture are 'Concept Review', 'Identifying Difficulties', 'Planning'. Resources for this session is your notes"}]},"2025-03-31 04:41:10.651 UTC","2025-03-31 04:41:10.651 UTC"]
2025-03-31T04:41:11.562Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["04fede40-9e4e-4e28-8a51-66fef01e215b",1,0]
2025-03-31T04:41:11.867Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [49,0]
2025-03-31T04:41:12.121Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["903b5dbf-736a-4787-b957-088f7b29034f",0]
2025-03-31T04:41:12.378Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:41:12.381Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:41:12.382Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 04fede40-9e4e-4e28-8a51-66fef01e215b
2025-03-31T04:41:12.388Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:12.389Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:12.689Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["04fede40-9e4e-4e28-8a51-66fef01e215b"]
2025-03-31T04:41:12.692Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:41:12.693Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 49
2025-03-31T04:41:14.528Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 49
2025-03-31T04:41:14.830Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:41:14.832Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:15.106Z info [C -> Context.<anonymous>]: Test user created with id: 5641b447-b391-4e13-8c04-8c0a9bbf4605
2025-03-31T04:41:15.107Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:15.390Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:15.392Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 50
2025-03-31T04:41:16.065Z info [C -> Context.<anonymous>]: Test study plan created with id: 50
2025-03-31T04:41:16.068Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:41:16.069Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:41:16.071Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:41:16.073Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:16.075Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:41:19.043Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:41:19.045Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:41:19.047Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:41:19.049Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:41:19.341Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:41:19.650Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:41:19.957Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["b7043748-f425-417b-8063-d7b9133cf42f",50,"5641b447-b391-4e13-8c04-8c0a9bbf4605","DAILY",1,"Introduction to the course and foundational concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Comprehension"},{"time":"10:45 AM - 12:00 PM","type":"Practice Problems"},{"time":"1:00 PM - 2:30 PM","type":"Concept Review"},{"time":"2:45 PM - 4:00 PM","type":"Application Exercise"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the course and foundational concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Comprehension"},{"time":"10:45 AM - 12:00 PM","type":"Practice Problems"},{"time":"1:00 PM - 2:30 PM","type":"Concept Review"},{"time":"2:45 PM - 4:00 PM","type":"Application Exercise"}]},"2025-03-31 04:41:19.052 UTC","2025-03-31 04:41:19.052 UTC"]
2025-03-31T04:41:20.264Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["b7043748-f425-417b-8063-d7b9133cf42f",1,0]
2025-03-31T04:41:20.518Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [50,0]
2025-03-31T04:41:20.772Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5641b447-b391-4e13-8c04-8c0a9bbf4605",0]
2025-03-31T04:41:21.028Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:41:21.032Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:41:21.033Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: b7043748-f425-417b-8063-d7b9133cf42f
2025-03-31T04:41:21.045Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:21.047Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:21.306Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b7043748-f425-417b-8063-d7b9133cf42f"]
2025-03-31T04:41:21.308Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:41:21.309Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 50
2025-03-31T04:41:23.335Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 50
2025-03-31T04:41:23.848Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:41:23.854Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:24.157Z info [C -> Context.<anonymous>]: Test user created with id: 088670d7-f007-4cf5-a1e8-1c1f733890d5
2025-03-31T04:41:24.159Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:24.461Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:24.463Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 51
2025-03-31T04:41:25.078Z info [C -> Context.<anonymous>]: Test study plan created with id: 51
2025-03-31T04:41:25.080Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:41:25.082Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:41:25.084Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:41:25.085Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:25.086Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:41:28.254Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:41:28.254Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:41:28.255Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:41:28.255Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:41:28.557Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-03-31T04:41:28.825Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["36a60d99-b581-4960-b404-2811356e49af",51,"088670d7-f007-4cf5-a1e8-1c1f733890d5","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Biology","Basic Chemistry Concepts"],"type":"Reading & Note-Taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Fundamentals","Reading Comprehension Basics"],"type":"Exercises & Review"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Biology","Basic Chemistry Concepts"],"type":"Reading & Note-Taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Fundamentals","Reading Comprehension Basics"],"type":"Exercises & Review"}]},"2025-03-31 04:41:28.257 UTC","2025-03-31 04:41:28.257 UTC"]
2025-03-31T04:41:29.079Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["36a60d99-b581-4960-b404-2811356e49af",1,0]
2025-03-31T04:41:29.376Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [51,0]
2025-03-31T04:41:29.684Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["088670d7-f007-4cf5-a1e8-1c1f733890d5",0]
2025-03-31T04:41:29.944Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-03-31T04:41:29.947Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-03-31T04:41:29.949Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 36a60d99-b581-4960-b404-2811356e49af
2025-03-31T04:41:29.951Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:41:30.555Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["36a60d99-b581-4960-b404-2811356e49af",1,0]
2025-03-31T04:41:30.811Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [51,0]
2025-03-31T04:41:30.814Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:41:30.817Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:30.819Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:31.118Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:41:31.120Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-03-31T04:41:31.121Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 51
2025-03-31T04:41:32.790Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 51
2025-03-31T04:41:33.064Z info [C -> Context.<anonymous>]: Cleanup complete
2025-03-31T04:41:33.067Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:33.375Z info [C -> Context.<anonymous>]: Test user created with id: 9ef24d99-037f-443a-94dd-3151cc450dc6
2025-03-31T04:41:33.377Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:33.678Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:33.680Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 52
2025-03-31T04:41:34.292Z info [C -> Context.<anonymous>]: Test study plan created with id: 52
2025-03-31T04:41:34.294Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:41:34.295Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:41:34.296Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:41:34.296Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:34.297Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:41:49.313Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:49.315Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:49.621Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-03-31T04:41:49.959Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:41:49.972Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:49.974Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:49.977Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:50.574Z info [C -> Context.<anonymous>]: Test user created with id: cba89be8-c8dc-41a5-bff6-8923bb439df2
2025-03-31T04:41:50.576Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:51.198Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:51.200Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 53
2025-03-31T04:41:51.803Z info [C -> Context.<anonymous>]: Test study plan created with id: 53
2025-03-31T04:41:51.806Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-03-31T04:41:51.807Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-03-31T04:41:51.808Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-03-31T04:41:51.810Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:51.811Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:41:53.550Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:41:53.551Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:41:53.552Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-03-31T04:41:53.553Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-03-31T04:41:53.563Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        subject: "Mathematics",
        time: "9:00 - 10:30",
        topics: [
          "Basic Algebra",
          "Introduction to Calculus"
        ],
        type: "Lecture & Practice"
      },
      {
        subject: "Computer Science",
        time: "11:00 - 12:30",
        topics: [
          "Data Structures",
          "Algorithms"
        ],
        type: "Theory & Implementation"
      },
      {
        subject: "Physics",
        time: "14:00 - 15:30",
        topics: [
          "Mechanics",
          "Thermodynamics"
        ],
        type: "Problem Solving"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          subject: "Mathematics",
          time: "9:00 - 10:30",
          topics: [
            "Basic Algebra",
            "Introduction to Calculus"
          ],
          type: "Lecture & Practice"
        },
        {
          subject: "Computer Science",
          time: "11:00 - 12:30",
          topics: [
            "Data Structures",
            "Algorithms"
          ],
          type: "Theory & Implementation"
        },
        {
          subject: "Physics",
          time: "14:00 - 15:30",
          topics: [
            "Mechanics",
            "Thermodynamics"
          ],
          type: "Problem Solving"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        subject: "Mathematics",
        time: "9:00 - 10:30",
        topics: [
          "Basic Algebra",
          "Introduction to Calculus"
        ],
        type: "Lecture & Practice"
      },
      {
        subject: "Computer Science",
        time: "11:00 - 12:30",
        topics: [
          "Data Structures",
          "Algorithms"
        ],
        type: "Theory & Implementation"
      },
      {
        subject: "Physics",
        time: "14:00 - 15:30",
        topics: [
          "Mechanics",
          "Thermodynamics"
        ],
        type: "Problem Solving"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          subject: "Mathematics",
          time: "9:00 - 10:30",
          topics: [
            "Basic Algebra",
            "Introduction to Calculus"
          ],
          type: "Lecture & Practice"
        },
        {
          subject: "Computer Science",
          time: "11:00 - 12:30",
          topics: [
            "Data Structures",
            "Algorithms"
          ],
          type: "Theory & Implementation"
        },
        {
          subject: "Physics",
          time: "14:00 - 15:30",
          topics: [
            "Mechanics",
            "Thermodynamics"
          ],
          type: "Problem Solving"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-03-31T04:41:53.565Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:53.565Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:53.854Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:41:53.859Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:53.861Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:53.863Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:54.158Z info [C -> Context.<anonymous>]: Test user created with id: f771451c-57fb-49f4-97da-80bebbc5fa95
2025-03-31T04:41:54.160Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:54.466Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:54.468Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 54
2025-03-31T04:41:55.083Z info [C -> Context.<anonymous>]: Test study plan created with id: 54
2025-03-31T04:41:55.085Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-03-31T04:41:55.387Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:41:55.389Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-03-31T04:41:55.391Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-03-31T04:41:55.394Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:55.395Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:55.692Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:41:55.697Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:55.698Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:55.701Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:56.001Z info [C -> Context.<anonymous>]: Test user created with id: a7775114-87ce-4cc5-a89f-b25e760bd24e
2025-03-31T04:41:56.003Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:56.309Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:56.312Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 55
2025-03-31T04:41:56.837Z info [C -> Context.<anonymous>]: Test study plan created with id: 55
2025-03-31T04:41:56.839Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-03-31T04:41:57.109Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-03-31T04:41:57.114Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-03-31T04:41:57.117Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:41:57.118Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:41:57.377Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:41:57.380Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:57.381Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:41:57.384Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:41:57.627Z info [C -> Context.<anonymous>]: Test user created with id: d448e007-7a22-4398-804a-616fdc883244
2025-03-31T04:41:57.629Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:41:57.894Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:41:57.896Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 56
2025-03-31T04:41:58.562Z info [C -> Context.<anonymous>]: Test study plan created with id: 56
2025-03-31T04:41:58.566Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-03-31T04:41:58.568Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-03-31T04:42:01.863Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-03-31T04:42:01.865Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-03-31T04:42:01.869Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:42:01.871Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:42:02.144Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:42:02.148Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:42:02.150Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:42:02.154Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:42:02.395Z info [C -> Context.<anonymous>]: Test user created with id: f5484b85-daed-484c-b69a-4c69d8b9e5bf
2025-03-31T04:42:02.398Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:42:02.666Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-03-31T04:42:02.668Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 57
2025-03-31T04:42:03.271Z info [C -> Context.<anonymous>]: Test study plan created with id: 57
2025-03-31T04:42:03.276Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:42:03.277Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-03-31T04:42:03.578Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["36a60d99-b581-4960-b404-2811356e49af"]
2025-03-31T04:42:03.584Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 36a60d99-b581-4960-b404-2811356e49af: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:42:03.586Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-03-31T04:42:03.592Z info [C -> Context.<anonymous>]: Setting up test data...
2025-03-31T04:42:06.128Z info [C -> Context.<anonymous>]: Test user created: 7a8b9ae8-c048-4aff-9c51-7570717738f4
2025-03-31T04:42:06.130Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-03-31T04:42:06.759Z error [C -> StudyPlanService.createPlan]: Error creating study plan: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 58,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 58,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:42:06.761Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 58,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 58,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-03-31T04:42:06.764Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-03-31T04:42:07.371Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:72:17)
2025-04-01T18:51:59.011Z info [C -> new]: Schedule Service initialized
2025-04-01T18:51:59.104Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:52:04.141Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
PrismaClientInitializationError: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7835)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:192:24)
2025-04-01T18:52:04.144Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:52:04.144Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:52:04.146Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:52:09.152Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
PrismaClientInitializationError: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7835)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async createTestUser (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:18:16)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:31:24)
2025-04-01T18:52:09.156Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:52:09.157Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:52:21.117Z info [C -> new]: Schedule Service initialized
2025-04-01T18:52:21.163Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:52:23.637Z info [C -> Context.<anonymous>]: Test user created with id: 66f79fe3-4182-44a7-b640-e25fdee3bf80
2025-04-01T18:52:23.638Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:52:26.205Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:52:26.208Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 59
2025-04-01T18:52:27.329Z info [C -> Context.<anonymous>]: Test study plan created with id: 59
2025-04-01T18:52:27.331Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:52:27.333Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:52:27.334Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:52:27.335Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:52:27.336Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:52:30.779Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:52:30.780Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:52:30.781Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:52:30.781Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:52:32.686Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T18:52:33.268Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["a0ea5efb-a58f-4cee-b5fe-8a1606058167",59,"66f79fe3-4182-44a7-b640-e25fdee3bf80","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 - 10:30 AM","type":"Study Session - Fundamentals Review (Math/Logic/Data Structures - Choose one based on your needs for the overall program.)"},{"time":"11:00 AM - 12:30 PM","type":"Study Session - Programming Basics (Syntax, Variables, Data Types)"},{"time":"2:00 - 3:30 PM","type":"Study Session - Version Control (Git basics - branching, commits, pull requests)"},{"time":"4:00 - 5:30 PM","type":"Project - Setup Development Environment"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 - 10:30 AM","type":"Study Session - Fundamentals Review (Math/Logic/Data Structures - Choose one based on your needs for the overall program.)"},{"time":"11:00 AM - 12:30 PM","type":"Study Session - Programming Basics (Syntax, Variables, Data Types)"},{"time":"2:00 - 3:30 PM","type":"Study Session - Version Control (Git basics - branching, commits, pull requests)"},{"time":"4:00 - 5:30 PM","type":"Project - Setup Development Environment"}]},"2025-04-01 18:52:32.451 UTC","2025-04-01 18:52:32.451 UTC"]
2025-04-01T18:52:33.736Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["a0ea5efb-a58f-4cee-b5fe-8a1606058167",1,0]
2025-04-01T18:52:34.196Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [59,0]
2025-04-01T18:52:34.657Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["66f79fe3-4182-44a7-b640-e25fdee3bf80",0]
2025-04-01T18:52:34.891Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T18:52:34.892Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T18:52:34.893Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: a0ea5efb-a58f-4cee-b5fe-8a1606058167
2025-04-01T18:52:34.896Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:52:34.897Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:52:35.524Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a0ea5efb-a58f-4cee-b5fe-8a1606058167"]
2025-04-01T18:52:35.526Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T18:52:35.527Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 59
2025-04-01T18:52:37.876Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 59
2025-04-01T18:52:38.490Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:52:38.491Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:52:39.106Z info [C -> Context.<anonymous>]: Test user created with id: cf9cc792-5a13-4c20-b23b-35962ce3ee9d
2025-04-01T18:52:39.107Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:52:39.418Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:52:39.419Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 60
2025-04-01T18:52:40.007Z info [C -> Context.<anonymous>]: Test study plan created with id: 60
2025-04-01T18:52:40.009Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:52:40.010Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:52:40.010Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:52:40.011Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:52:40.012Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:52:55.017Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:52:55.018Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:52:55.253Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T18:52:55.533Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a0ea5efb-a58f-4cee-b5fe-8a1606058167"]
2025-04-01T18:52:55.537Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a0ea5efb-a58f-4cee-b5fe-8a1606058167: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:52:55.538Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:52:55.539Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:52:56.103Z info [C -> Context.<anonymous>]: Test user created with id: 5d49e03d-85f1-4757-aa45-d718c0e6c90f
2025-04-01T18:52:56.104Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:52:56.663Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:52:56.665Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 61
2025-04-01T18:52:57.174Z info [C -> Context.<anonymous>]: Test study plan created with id: 61
2025-04-01T18:52:57.175Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:52:57.176Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:52:57.177Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:52:57.178Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:52:57.179Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:02.046Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:02.046Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:02.047Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:53:02.048Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:53:02.280Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T18:53:02.555Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["fba513ee-93a1-4e30-928e-df3163596f20",61,"5d49e03d-85f1-4757-aa45-d718c0e6c90f","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Session 1: Overview of Subject Area (e.g., Calculus, History, Programming Basics). Introducing key terminology and fundamental concepts. Focus on grasping the big picture and understanding the scope of study for the next 90 days.) Resources : Textbook Chapter 1, introductory online video, or lecture slides.) Topics: Basic definitions, Scope of the field, Learning Objectives for the course.) Subject: Introduction to Calculus Resources : Textbook Chapter 1, introductory online video, or lecture slides.) Topics: Basic definitions, Scope of the field, Learning Objectives for the course.) Subject: Calculus"},{"time":"11:00 AM - 12:30 PM","type":"Problem Solving/Practice Session 1: Simple exercises related to the morning session's content (e.g., basic equation solving, historical timeline exercises, writing simple code). Resources : Practice problems from textbook, online exercises, or example code. Topics: Applying definitions, Simple calculations, Short answer questions. Subject : Basic Calculus"},{"time":"2:00 PM - 3:30 PM","type":"Lecture/Reading Session 2: Deeper dive into one specific core concept from the morning (e.g., limits, specific historical event, variable types). Resources : Textbook Chapter 2, more in-depth online articles, or supplemental reading. Topics : Concept explanation, examples, related theories. Subject: Calculus - Limits and Derivatives"},{"time":"4:00 PM - 5:30 PM","type":"Problem Solving/Practice Session 2: More challenging exercises that require combining knowledge from both sessions. Resources : Advanced practice problems, case studies, or coding challenges. Topics: Application of concepts, Complex calculations, Analytical questions. Subject: Solving Complex Calculus Problems"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading Session 1: Overview of Subject Area (e.g., Calculus, History, Programming Basics). Introducing key terminology and fundamental concepts. Focus on grasping the big picture and understanding the scope of study for the next 90 days.) Resources : Textbook Chapter 1, introductory online video, or lecture slides.) Topics: Basic definitions, Scope of the field, Learning Objectives for the course.) Subject: Introduction to Calculus Resources : Textbook Chapter 1, introductory online video, or lecture slides.) Topics: Basic definitions, Scope of the field, Learning Objectives for the course.) Subject: Calculus"},{"time":"11:00 AM - 12:30 PM","type":"Problem Solving/Practice Session 1: Simple exercises related to the morning session's content (e.g., basic equation solving, historical timeline exercises, writing simple code). Resources : Practice problems from textbook, online exercises, or example code. Topics: Applying definitions, Simple calculations, Short answer questions. Subject : Basic Calculus"},{"time":"2:00 PM - 3:30 PM","type":"Lecture/Reading Session 2: Deeper dive into one specific core concept from the morning (e.g., limits, specific historical event, variable types). Resources : Textbook Chapter 2, more in-depth online articles, or supplemental reading. Topics : Concept explanation, examples, related theories. Subject: Calculus - Limits and Derivatives"},{"time":"4:00 PM - 5:30 PM","type":"Problem Solving/Practice Session 2: More challenging exercises that require combining knowledge from both sessions. Resources : Advanced practice problems, case studies, or coding challenges. Topics: Application of concepts, Complex calculations, Analytical questions. Subject: Solving Complex Calculus Problems"}]},"2025-04-01 18:53:02.050 UTC","2025-04-01 18:53:02.050 UTC"]
2025-04-01T18:53:02.864Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["fba513ee-93a1-4e30-928e-df3163596f20",1,0]
2025-04-01T18:53:03.170Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [61,0]
2025-04-01T18:53:03.463Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5d49e03d-85f1-4757-aa45-d718c0e6c90f",0]
2025-04-01T18:53:03.695Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T18:53:03.697Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T18:53:03.698Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: fba513ee-93a1-4e30-928e-df3163596f20
2025-04-01T18:53:03.705Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:03.706Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:03.942Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["fba513ee-93a1-4e30-928e-df3163596f20"]
2025-04-01T18:53:03.944Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T18:53:03.946Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 61
2025-04-01T18:53:05.832Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 61
2025-04-01T18:53:06.070Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:53:06.072Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:06.311Z info [C -> Context.<anonymous>]: Test user created with id: f0e6c07d-9cf8-4a45-86a1-0820bbf57439
2025-04-01T18:53:06.313Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:06.651Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:06.652Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 62
2025-04-01T18:53:07.208Z info [C -> Context.<anonymous>]: Test study plan created with id: 62
2025-04-01T18:53:07.209Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:53:07.210Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:53:07.211Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:53:07.211Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:53:07.212Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:12.427Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:12.428Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:12.429Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:53:12.429Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:53:12.669Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T18:53:12.910Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T18:53:13.205Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["8735c2bb-37d8-404b-b072-063d30e71d85",62,"f0e6c07d-9cf8-4a45-86a1-0820bbf57439","DAILY",1,"Introduction to Fundamentals",[],[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Review Notes: Fundamentals of Programming and Data Structures I Textbook Chapter 1, Class Notes from Week 1, Online Tutorials (e.g., Codecademy, Khan Academy). Slides covering the basic syntax of Python or Java. Assignments (Practice problems involving variable declaration, data types, and operators). Summary (Covered introductory programming concepts; understood fundamental syntax, data types and operators; solved initial practice problems)"},{"time":"11:00 AM - 12:30 PM","type":"Solve Assignments: Fundamentals of Programming and Data Structures II Textbook Chapter 2, Solutions to Assignment 1, Online Debugging Tools (e.g., Debuggex, OnlineGDB). Exercise solutions demonstrating correct implementation and error handling. Assignments (Extended practice with conditional statements and loops, covering different scenarios). Summary (Applied conditional statements and loops to solve more complex problems; debugged and corrected errors effectively; completed initial assignments successfully). Assignments (Applied conditional statements and loops to solve more complex problems; debugged and corrected errors effectively; completed initial assignments successfully)"},{"time":"2:00 PM - 3:30 PM","type":"Concepts of OOP: Fundamentals of Programming and Data Structures III Textbook Chapter 3, Class Notes from Week 2, Online Resources on Object-Oriented Programming. Class diagram examples demonstrating object relationships and interactions. Assignments (Creating classes, defining attributes and methods, implementing inheritance and polymorphism). Summary (Introduced object-oriented programming principles; created classes, defined attributes, and methods; implemented basic inheritance and polymorphism)"},{"time":"4:00 PM - 5:30 PM","type":"Advanced DSA: Fundamentals of Programming and Data Structures IV Textbook Chapter 4, Class Notes from Week 2, Online Resources on Data Structures and Algorithms. Visualization tools for stacks, queues, and linked lists. Assignments (Implementing basic data structures; solving problems using stacks, queues, and linked lists). Summary (Implemented basic data structures such as stacks, queues, and linked lists; solved problems using these data structures; prepared for more advanced DSA topics)."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Fundamentals","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Review Notes: Fundamentals of Programming and Data Structures I Textbook Chapter 1, Class Notes from Week 1, Online Tutorials (e.g., Codecademy, Khan Academy). Slides covering the basic syntax of Python or Java. Assignments (Practice problems involving variable declaration, data types, and operators). Summary (Covered introductory programming concepts; understood fundamental syntax, data types and operators; solved initial practice problems)"},{"time":"11:00 AM - 12:30 PM","type":"Solve Assignments: Fundamentals of Programming and Data Structures II Textbook Chapter 2, Solutions to Assignment 1, Online Debugging Tools (e.g., Debuggex, OnlineGDB). Exercise solutions demonstrating correct implementation and error handling. Assignments (Extended practice with conditional statements and loops, covering different scenarios). Summary (Applied conditional statements and loops to solve more complex problems; debugged and corrected errors effectively; completed initial assignments successfully). Assignments (Applied conditional statements and loops to solve more complex problems; debugged and corrected errors effectively; completed initial assignments successfully)"},{"time":"2:00 PM - 3:30 PM","type":"Concepts of OOP: Fundamentals of Programming and Data Structures III Textbook Chapter 3, Class Notes from Week 2, Online Resources on Object-Oriented Programming. Class diagram examples demonstrating object relationships and interactions. Assignments (Creating classes, defining attributes and methods, implementing inheritance and polymorphism). Summary (Introduced object-oriented programming principles; created classes, defined attributes, and methods; implemented basic inheritance and polymorphism)"},{"time":"4:00 PM - 5:30 PM","type":"Advanced DSA: Fundamentals of Programming and Data Structures IV Textbook Chapter 4, Class Notes from Week 2, Online Resources on Data Structures and Algorithms. Visualization tools for stacks, queues, and linked lists. Assignments (Implementing basic data structures; solving problems using stacks, queues, and linked lists). Summary (Implemented basic data structures such as stacks, queues, and linked lists; solved problems using these data structures; prepared for more advanced DSA topics)."}]},"2025-04-01 18:53:12.431 UTC","2025-04-01 18:53:12.431 UTC"]
2025-04-01T18:53:13.514Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["8735c2bb-37d8-404b-b072-063d30e71d85",1,0]
2025-04-01T18:53:13.819Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [62,0]
2025-04-01T18:53:14.127Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["f0e6c07d-9cf8-4a45-86a1-0820bbf57439",0]
2025-04-01T18:53:14.366Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T18:53:14.369Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T18:53:14.370Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 8735c2bb-37d8-404b-b072-063d30e71d85
2025-04-01T18:53:14.372Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T18:53:14.947Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["8735c2bb-37d8-404b-b072-063d30e71d85",1,0]
2025-04-01T18:53:15.253Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [62,0]
2025-04-01T18:53:15.256Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T18:53:15.259Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:15.260Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:15.562Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["8735c2bb-37d8-404b-b072-063d30e71d85"]
2025-04-01T18:53:15.565Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T18:53:15.566Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 62
2025-04-01T18:53:17.508Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 62
2025-04-01T18:53:18.018Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:53:18.020Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:18.327Z info [C -> Context.<anonymous>]: Test user created with id: d5341eba-9dd0-4527-a559-193ec8b84478
2025-04-01T18:53:18.329Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:18.632Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:18.634Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 63
2025-04-01T18:53:19.209Z info [C -> Context.<anonymous>]: Test study plan created with id: 63
2025-04-01T18:53:19.210Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:53:19.211Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:53:19.211Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:53:19.212Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:53:19.212Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:19.457Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:19.458Z error [C -> ScheduleService.generateDayContent]: Error generating day content: Unterminated string in JSON at position 42132 (line 7 column 41976)
SyntaxError: Unterminated string in JSON at position 42132 (line 7 column 41976)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:109:37)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T18:53:19.459Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: Unterminated string in JSON at position 42132 (line 7 column 41976)
SyntaxError: Unterminated string in JSON at position 42132 (line 7 column 41976)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:109:37)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T18:53:24.815Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:24.816Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:24.817Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:53:24.818Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:53:25.083Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T18:53:25.392Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["2acecb86-1a9a-41bd-95a5-783e07aed111",63,"d5341eba-9dd0-4527-a559-193ec8b84478","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading - Foundations of [Subject Name, e.g., Computer Science, Biology, History] - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This is a very good time to learn theoretical aspects or read lecture notes. This is proven to be one of the best times of the day for learning and concentration. Sleep well before this to reap maximum rewards from this time slot. Use noise cancelling headphone to isolate yourself if noise is a problem in your environment, if required."},{"time":"10:30 AM - 12:00 PM","type":"Problem Solving/Application - Practice basic problems related to the foundational concepts. - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day.This will help in understanding the practical aspects or applications of the subject. It is recommended to solve numerical problems now. You can refer to previous worked examples to understand this topic well. Take small breaks in between for improved focus."},{"time":"2:00 PM - 3:30 PM","type":"Review and Summarize - Review the morning's material and create a concise summary. - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This part of the day is allocated to revise what you learnt in the morning. It is very important to consolidate your understanding to be able to recall later when required."},{"time":"4:00 PM - 5:00 PM","type":"Preview Next Day's Material - Skim the topics for Day 2. - 1 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This way your brain is primed to absorb complex topics much more easily on the next day. This is a really good technique to learn faster and improve focus and productivity."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Lecture/Reading - Foundations of [Subject Name, e.g., Computer Science, Biology, History] - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This is a very good time to learn theoretical aspects or read lecture notes. This is proven to be one of the best times of the day for learning and concentration. Sleep well before this to reap maximum rewards from this time slot. Use noise cancelling headphone to isolate yourself if noise is a problem in your environment, if required."},{"time":"10:30 AM - 12:00 PM","type":"Problem Solving/Application - Practice basic problems related to the foundational concepts. - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day.This will help in understanding the practical aspects or applications of the subject. It is recommended to solve numerical problems now. You can refer to previous worked examples to understand this topic well. Take small breaks in between for improved focus."},{"time":"2:00 PM - 3:30 PM","type":"Review and Summarize - Review the morning's material and create a concise summary. - 1.5 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This part of the day is allocated to revise what you learnt in the morning. It is very important to consolidate your understanding to be able to recall later when required."},{"time":"4:00 PM - 5:00 PM","type":"Preview Next Day's Material - Skim the topics for Day 2. - 1 hours session including 10mins break in between. Use pomodoro technique for each 25 mins session and 5 min break and start the next 25 mins session. This should help keeping the focus and improve the information retention capabilities. This technique can be used throughout the day. This way your brain is primed to absorb complex topics much more easily on the next day. This is a really good technique to learn faster and improve focus and productivity."}]},"2025-04-01 18:53:24.820 UTC","2025-04-01 18:53:24.820 UTC"]
2025-04-01T18:53:25.700Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["2acecb86-1a9a-41bd-95a5-783e07aed111",1,0]
2025-04-01T18:53:25.938Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [63,0]
2025-04-01T18:53:26.313Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d5341eba-9dd0-4527-a559-193ec8b84478",0]
2025-04-01T18:53:26.551Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T18:53:26.552Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T18:53:26.553Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 2acecb86-1a9a-41bd-95a5-783e07aed111
2025-04-01T18:53:26.554Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T18:53:27.133Z info [C -> EventEmitter.<anonymous>]: Prisma Query: UPDATE "public"."Schedule" SET "focus" = $1, "targets" = $2, "updatedAt" = $3 WHERE ("public"."Schedule"."id" = $4 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["Updated Focus Area",["New Target 1","New Target 2"],"2025-04-01 18:53:26.556 UTC","2acecb86-1a9a-41bd-95a5-783e07aed111"]
2025-04-01T18:53:27.135Z info [C -> ScheduleService.updateSchedule]: Updated Schedule:
2025-04-01T18:53:27.138Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:27.139Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:27.439Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["2acecb86-1a9a-41bd-95a5-783e07aed111"]
2025-04-01T18:53:27.441Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T18:53:27.441Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 63
2025-04-01T18:53:28.961Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 63
2025-04-01T18:53:29.282Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T18:53:29.283Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:29.520Z info [C -> Context.<anonymous>]: Test user created with id: 08277e06-2116-4af4-a6b3-2573e55b54ac
2025-04-01T18:53:29.521Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:29.774Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:29.776Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 64
2025-04-01T18:53:30.305Z info [C -> Context.<anonymous>]: Test study plan created with id: 64
2025-04-01T18:53:30.306Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:53:30.307Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:53:30.307Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:53:30.308Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:53:30.309Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:36.557Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:36.559Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:36.560Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:53:36.561Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:53:36.801Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T18:53:37.063Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T18:53:37.372Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26",64,"08277e06-2116-4af4-a6b3-2573e55b54ac","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1 of 4 (2 hours each.) Focus on a different subject for each session, rotating on a fixed schedule to avoid burnout and promote variety in studies.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) for each session throughout the day. ) Set 1 of 4 is Math and Science in conjunction. (Math = odd days, Science = even days.) Today's subject is Math. Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) Math and Science will focus on textbook reading and problem comprehension and solving. This week will be algebra related concepts. Topics: Variables, expressions, and equations. Solving linear equations. Graphing linear equations. Introduction to functions.) Resources: Textbook, Khan Academy videos.)"},{"time":"11:20 AM - 1:20 PM","type":"Lecture/Reading Comprehension Session 2 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is History and Geography in conjunction. (History = odd days, Geography = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) History and Geography will focus on textbook reading and videos. This week will be The Renaissance. Topics: Causes and characteristics of the Renaissance. Art, literature, and science of the Renaissance. The Reformation and its impact. Resources: Textbook, documentaries.)"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Comprehension Session 3 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is English and Writing in conjunction. (English = odd days, Writing = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) English will focus on grammar exercises and reading comprehension practice. Writing will focus on developing writing skills and completing practice exercises. This week will be creative writing. Topics: Grammar fundamentals, Reading comprehension strategies. Essay structure and development. Creative writing prompts. Resources: Grammar workbook, practice essays, creative writing prompts.)"},{"time":"4:20 PM - 6:20 PM","type":"Lecture/Reading Comprehension Session 4 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is Art and Music in conjunction. (Art = odd days, Music = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) Art will focus on art history and appreciation. Music will focus on music theory and appreciation. This week will be the fundamentals of art. Topics: Art history timeline, Basic art elements (line, color, shape). Introduction to music theory. Famous artists and musicians. Resources: Art history books, online music theory resources.)"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session 1 of 4 (2 hours each.) Focus on a different subject for each session, rotating on a fixed schedule to avoid burnout and promote variety in studies.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) for each session throughout the day. ) Set 1 of 4 is Math and Science in conjunction. (Math = odd days, Science = even days.) Today's subject is Math. Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) Math and Science will focus on textbook reading and problem comprehension and solving. This week will be algebra related concepts. Topics: Variables, expressions, and equations. Solving linear equations. Graphing linear equations. Introduction to functions.) Resources: Textbook, Khan Academy videos.)"},{"time":"11:20 AM - 1:20 PM","type":"Lecture/Reading Comprehension Session 2 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is History and Geography in conjunction. (History = odd days, Geography = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) History and Geography will focus on textbook reading and videos. This week will be The Renaissance. Topics: Causes and characteristics of the Renaissance. Art, literature, and science of the Renaissance. The Reformation and its impact. Resources: Textbook, documentaries.)"},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Comprehension Session 3 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is English and Writing in conjunction. (English = odd days, Writing = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) English will focus on grammar exercises and reading comprehension practice. Writing will focus on developing writing skills and completing practice exercises. This week will be creative writing. Topics: Grammar fundamentals, Reading comprehension strategies. Essay structure and development. Creative writing prompts. Resources: Grammar workbook, practice essays, creative writing prompts.)"},{"time":"4:20 PM - 6:20 PM","type":"Lecture/Reading Comprehension Session 4 of 4 (2 hours each.) (25 minutes active / 5 minutes rest / after 4 sets of 25 minute sets, a 20 minute break.) Today's subject is Art and Music in conjunction. (Art = odd days, Music = even days.) Note, this will vary by subject to maximize retention via application and practice and not monotonous lecture memorization.) Art will focus on art history and appreciation. Music will focus on music theory and appreciation. This week will be the fundamentals of art. Topics: Art history timeline, Basic art elements (line, color, shape). Introduction to music theory. Famous artists and musicians. Resources: Art history books, online music theory resources.)"}]},"2025-04-01 18:53:36.564 UTC","2025-04-01 18:53:36.564 UTC"]
2025-04-01T18:53:37.680Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26",1,0]
2025-04-01T18:53:37.918Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [64,0]
2025-04-01T18:53:38.191Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["08277e06-2116-4af4-a6b3-2573e55b54ac",0]
2025-04-01T18:53:38.497Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T18:53:38.499Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T18:53:38.500Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26
2025-04-01T18:53:38.501Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:38.805Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:38.807Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T18:53:38.807Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T18:53:39.111Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26",1,0]
2025-04-01T18:53:39.112Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T18:53:39.113Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:297:37)
2025-04-01T18:53:39.115Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:39.115Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:39.421Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:39.424Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:39.424Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:39.426Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:39.900Z info [C -> Context.<anonymous>]: Test user created with id: c7ca11b5-5232-4d29-af88-ec809a41a5bb
2025-04-01T18:53:39.901Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:40.408Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:40.409Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 65
2025-04-01T18:53:40.955Z info [C -> Context.<anonymous>]: Test study plan created with id: 65
2025-04-01T18:53:40.957Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T18:53:40.957Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T18:53:40.958Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T18:53:40.959Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:53:40.959Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:48.741Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:48.741Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:48.742Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T18:53:48.743Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T18:53:48.748Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 11:00 AM",
        type: "Lecture/Reading Session 1: Foundations of [Subject Area, e.g., Computer Science] or [Topic Area, e.g., Algebra 1]. Focus on definitions and basic principles. Resources: Textbook, Online Articles. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "11:30 AM - 1:00 PM",
        type: "Practice/Problem Solving: Simple exercises related to the morning's topics. Resources: Practice Problems, Solutions Manual. Topics: Exercise 1, Exercise 2. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "2:00 PM - 4:00 PM",
        type: "Lecture/Reading Session 2: Further Exploration of Initial Concepts. Resources: Textbook, Online Videos. Topics: [Specific topic 3], [Specific topic 4]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "4:30 PM - 6:00 PM",
        type: "Review/Summarization: Consolidate the day's learning. Resources: Notes, Flashcards. Topics: All topics covered today. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 11:00 AM",
          type: "Lecture/Reading Session 1: Foundations of [Subject Area, e.g., Computer Science] or [Topic Area, e.g., Algebra 1]. Focus on definitions and basic principles. Resources: Textbook, Online Articles. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "11:30 AM - 1:00 PM",
          type: "Practice/Problem Solving: Simple exercises related to the morning's topics. Resources: Practice Problems, Solutions Manual. Topics: Exercise 1, Exercise 2. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "2:00 PM - 4:00 PM",
          type: "Lecture/Reading Session 2: Further Exploration of Initial Concepts. Resources: Textbook, Online Videos. Topics: [Specific topic 3], [Specific topic 4]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "4:30 PM - 6:00 PM",
          type: "Review/Summarization: Consolidate the day's learning. Resources: Notes, Flashcards. Topics: All topics covered today. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 11:00 AM",
        type: "Lecture/Reading Session 1: Foundations of [Subject Area, e.g., Computer Science] or [Topic Area, e.g., Algebra 1]. Focus on definitions and basic principles. Resources: Textbook, Online Articles. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "11:30 AM - 1:00 PM",
        type: "Practice/Problem Solving: Simple exercises related to the morning's topics. Resources: Practice Problems, Solutions Manual. Topics: Exercise 1, Exercise 2. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "2:00 PM - 4:00 PM",
        type: "Lecture/Reading Session 2: Further Exploration of Initial Concepts. Resources: Textbook, Online Videos. Topics: [Specific topic 3], [Specific topic 4]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      },
      {
        time: "4:30 PM - 6:00 PM",
        type: "Review/Summarization: Consolidate the day's learning. Resources: Notes, Flashcards. Topics: All topics covered today. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 11:00 AM",
          type: "Lecture/Reading Session 1: Foundations of [Subject Area, e.g., Computer Science] or [Topic Area, e.g., Algebra 1]. Focus on definitions and basic principles. Resources: Textbook, Online Articles. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Articles]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "11:30 AM - 1:00 PM",
          type: "Practice/Problem Solving: Simple exercises related to the morning's topics. Resources: Practice Problems, Solutions Manual. Topics: Exercise 1, Exercise 2. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Practice Problems, Solutions Manual]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "2:00 PM - 4:00 PM",
          type: "Lecture/Reading Session 2: Further Exploration of Initial Concepts. Resources: Textbook, Online Videos. Topics: [Specific topic 3], [Specific topic 4]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Textbook, Online Videos]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        },
        {
          time: "4:30 PM - 6:00 PM",
          type: "Review/Summarization: Consolidate the day's learning. Resources: Notes, Flashcards. Topics: All topics covered today. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]. Resources: [List of Resources, e.g., Notes, Flashcards]. Topics: [Specific topic 1], [Specific topic 2]. Subject: [Subject Area or Topic Area]."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-04-01T18:53:48.753Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:48.754Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:49.045Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:49.049Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:49.051Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:49.053Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:49.352Z info [C -> Context.<anonymous>]: Test user created with id: 1c248918-6c51-47ff-8e8c-b48a35ee574e
2025-04-01T18:53:49.353Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:49.619Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:49.619Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 66
2025-04-01T18:53:50.237Z info [C -> Context.<anonymous>]: Test study plan created with id: 66
2025-04-01T18:53:50.239Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T18:53:50.478Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T18:53:50.479Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T18:53:50.480Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T18:53:50.482Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:50.483Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:50.722Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:50.726Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:50.728Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:50.729Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:50.971Z info [C -> Context.<anonymous>]: Test user created with id: b3a6144f-5172-4a4d-8891-d4b2cd45152b
2025-04-01T18:53:50.972Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:51.298Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:51.299Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 67
2025-04-01T18:53:51.913Z info [C -> Context.<anonymous>]: Test study plan created with id: 67
2025-04-01T18:53:51.914Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T18:53:52.219Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T18:53:52.527Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T18:53:52.531Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T18:53:52.535Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:52.536Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:52.775Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:52.778Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:52.778Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:52.780Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:53.018Z info [C -> Context.<anonymous>]: Test user created with id: e20ed387-e222-4988-a577-df32c66790a3
2025-04-01T18:53:53.019Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:53.272Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:53.273Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 68
2025-04-01T18:53:53.799Z info [C -> Context.<anonymous>]: Test study plan created with id: 68
2025-04-01T18:53:53.802Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T18:53:53.803Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T18:53:57.021Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T18:53:57.022Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T18:53:57.024Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:57.025Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:57.340Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:57.342Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:57.343Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:57.344Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:53:57.899Z info [C -> Context.<anonymous>]: Test user created with id: 99f24f71-7bd0-4faf-bf3c-d2ea1203c049
2025-04-01T18:53:57.900Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:53:58.466Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T18:53:58.466Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 69
2025-04-01T18:53:59.080Z info [C -> Context.<anonymous>]: Test study plan created with id: 69
2025-04-01T18:53:59.082Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:53:59.083Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T18:53:59.387Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26"]
2025-04-01T18:53:59.389Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a88adf5e-94c0-4d5a-bf67-aeb03bf0ae26: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:59.390Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T18:53:59.392Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T18:54:01.941Z info [C -> Context.<anonymous>]: Test user created: ac4fa01b-b5a4-4a7d-9845-7952ee85abec
2025-04-01T18:54:01.942Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T18:54:02.244Z error [C -> StudyPlanService.createPlan]: Error creating study plan: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 70,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 70,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-04-01T18:54:02.246Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 70,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.studySession.create()` invocation:

{
  data: {
    studyPlanId: 70,
    day: 1,
         ~
    topics: [
      "Arrays",
      "Linked Lists"
    ],
    completed: false,
    resources: {
      create: [
        {
          name: "CLRS Book",
          type: "BOOK"
        }
      ]
    }
  }
}

Argument `day`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Promise.all (index 0)
    at async StudyPlanService.createPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:28:17)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:53:29)
2025-04-01T18:54:02.247Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T18:54:02.821Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated: `StudyPlan_userId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:72:17)
2025-04-01T19:09:03.685Z info [C -> new]: Schedule Service initialized
2025-04-01T19:09:03.728Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:09:06.109Z info [C -> Context.<anonymous>]: Test user created with id: d3d9a08a-48ff-4a5a-97c6-c0cbbead668e
2025-04-01T19:09:06.111Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:09:08.706Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:09:08.707Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 1
2025-04-01T19:09:09.935Z info [C -> Context.<anonymous>]: Test study plan created with id: 1
2025-04-01T19:09:09.939Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:09:09.940Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:09:09.942Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:09:09.944Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:09:09.946Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:09:13.324Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:09:13.325Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:09:13.326Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:09:13.327Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:09:15.326Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:09:15.794Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["ea4e1b1b-5677-421b-9850-d18c5f455767",1,"d3d9a08a-48ff-4a5a-97c6-c0cbbead668e","DAILY",1,"Introduction to Programming",[],[{"subject":"Computer Science","time":"9:00 - 10:30","topics":["Variables and Data Types","Basic Input/Output"],"type":"Lecture/Tutorial"},{"subject":"Mathematics","time":"11:00 - 12:30","topics":["Sets","Basic Logic"],"type":"Lecture/Tutorial"},{"subject":"Computer Science","time":"14:00 - 15:30","topics":["Control Flow (if/else statements)","Loops (for/while)"],"type":"Practice/Coding"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Programming","sessions":[{"subject":"Computer Science","time":"9:00 - 10:30","topics":["Variables and Data Types","Basic Input/Output"],"type":"Lecture/Tutorial"},{"subject":"Mathematics","time":"11:00 - 12:30","topics":["Sets","Basic Logic"],"type":"Lecture/Tutorial"},{"subject":"Computer Science","time":"14:00 - 15:30","topics":["Control Flow (if/else statements)","Loops (for/while)"],"type":"Practice/Coding"}]},"2025-04-01 19:09:15.093 UTC","2025-04-01 19:09:15.093 UTC"]
2025-04-01T19:09:16.282Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["ea4e1b1b-5677-421b-9850-d18c5f455767",1,0]
2025-04-01T19:09:16.745Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [1,0]
2025-04-01T19:09:17.210Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d3d9a08a-48ff-4a5a-97c6-c0cbbead668e",0]
2025-04-01T19:09:17.446Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:09:17.448Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:09:17.448Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: ea4e1b1b-5677-421b-9850-d18c5f455767
2025-04-01T19:09:17.452Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:09:17.452Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:09:18.023Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["ea4e1b1b-5677-421b-9850-d18c5f455767"]
2025-04-01T19:09:18.025Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:09:18.026Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 1
2025-04-01T19:09:20.379Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 1
2025-04-01T19:09:20.978Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:09:20.979Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:09:21.608Z info [C -> Context.<anonymous>]: Test user created with id: b7afab52-d201-44d3-86db-662be18e0bd4
2025-04-01T19:09:21.609Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:09:21.915Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:09:21.917Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 2
2025-04-01T19:09:22.479Z info [C -> Context.<anonymous>]: Test study plan created with id: 2
2025-04-01T19:09:22.480Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:09:22.481Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:09:22.481Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:09:22.482Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:09:22.483Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:09:27.550Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:09:27.551Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:09:27.551Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:09:27.552Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:09:27.783Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:09:28.059Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["6f238e9a-4e0e-423b-b523-2a1861624114",2,"b7afab52-d201-44d3-86db-662be18e0bd4","DAILY",1,"Introduction to the core concepts",[],[{"time":"9:00 - 10:30","type":"Study Session 1: Foundations of [Subject Name]. Begin with the basics to lay a strong groundwork for more complex topics ahead. This is crucial for understanding later concepts. Do not skim over assumed knowledge. Build a strong base. Check for knowledge gaps and fill them in with review. Focus on long-term retention rather than cramming for an exam. Use active recall instead of passive reading. For example, read a paragraph then close the book and summarize out loud. If you cannot do this, re-read the paragraph until you can. Then, go to the next paragraph and repeat. If there are multiple sections or chapters, do the same thing and then after summarizing each paragraph, close the book and summarize the whole chapter out loud. Go back and re-read as necessary to fill in gaps. Then repeat for each chapter/section. If necessary, review the previous day at the end of this session so that the material is still fresh in your memory. If this is Day 1, review the day at the end as described above."},{"time":"11:00 - 12:30","type":"Study Session 2: Delve deeper into [Subject Name], explore fundamental theories and principles. Review study skills and learning strategies. Focus on active recall. Review the previous session material and then proceed with new material, summarizing each paragraph and then each chapter/section."},{"time":"14:00 - 15:30","type":"Study Session 3: Focus on problem-solving related to [Subject Name]. Practice applying the concepts learned in the morning. Do a chapter/section review as described above. Review all of the day's material at the end of the session."},{"time":"16:00 - 17:30","type":"Study Session 4: Review [Subject Name] material. Focus on any gaps in understanding, or challenging problems. If there are no gaps, work on getting faster and more efficient at problem solving for all of the subjects covered today. "}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the core concepts","sessions":[{"time":"9:00 - 10:30","type":"Study Session 1: Foundations of [Subject Name]. Begin with the basics to lay a strong groundwork for more complex topics ahead. This is crucial for understanding later concepts. Do not skim over assumed knowledge. Build a strong base. Check for knowledge gaps and fill them in with review. Focus on long-term retention rather than cramming for an exam. Use active recall instead of passive reading. For example, read a paragraph then close the book and summarize out loud. If you cannot do this, re-read the paragraph until you can. Then, go to the next paragraph and repeat. If there are multiple sections or chapters, do the same thing and then after summarizing each paragraph, close the book and summarize the whole chapter out loud. Go back and re-read as necessary to fill in gaps. Then repeat for each chapter/section. If necessary, review the previous day at the end of this session so that the material is still fresh in your memory. If this is Day 1, review the day at the end as described above."},{"time":"11:00 - 12:30","type":"Study Session 2: Delve deeper into [Subject Name], explore fundamental theories and principles. Review study skills and learning strategies. Focus on active recall. Review the previous session material and then proceed with new material, summarizing each paragraph and then each chapter/section."},{"time":"14:00 - 15:30","type":"Study Session 3: Focus on problem-solving related to [Subject Name]. Practice applying the concepts learned in the morning. Do a chapter/section review as described above. Review all of the day's material at the end of the session."},{"time":"16:00 - 17:30","type":"Study Session 4: Review [Subject Name] material. Focus on any gaps in understanding, or challenging problems. If there are no gaps, work on getting faster and more efficient at problem solving for all of the subjects covered today. "}]},"2025-04-01 19:09:27.553 UTC","2025-04-01 19:09:27.553 UTC"]
2025-04-01T19:09:28.290Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["6f238e9a-4e0e-423b-b523-2a1861624114",1,0]
2025-04-01T19:09:28.521Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [2,0]
2025-04-01T19:09:28.775Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["b7afab52-d201-44d3-86db-662be18e0bd4",0]
2025-04-01T19:09:29.010Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:09:29.012Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:09:29.013Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 6f238e9a-4e0e-423b-b523-2a1861624114
2025-04-01T19:09:29.015Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:09:29.016Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:09:29.253Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["6f238e9a-4e0e-423b-b523-2a1861624114"]
2025-04-01T19:09:29.254Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:09:29.255Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 2
2025-04-01T19:09:31.397Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 2
2025-04-01T19:09:31.639Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:09:31.641Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:09:31.880Z info [C -> Context.<anonymous>]: Test user created with id: 658103de-1b7b-4967-b204-ab8b9fc96463
2025-04-01T19:09:31.882Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:09:32.144Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:09:32.146Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 3
2025-04-01T19:09:32.665Z info [C -> Context.<anonymous>]: Test study plan created with id: 3
2025-04-01T19:09:32.666Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:09:32.667Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:09:32.667Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:09:32.668Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:09:32.669Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:09:35.942Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:09:35.943Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:09:35.945Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:09:35.946Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:09:36.177Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:09:36.456Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:09:36.721Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["1043ac4d-c592-4898-a321-6f2155a732ed",3,"658103de-1b7b-4967-b204-ab8b9fc96463","DAILY",1,"Introduction to the Study Plan",[],[{"subject":"Overview","time":"9:00 AM - 9:30 AM","topics":["Reviewing the 90-day plan","Setting expectations"],"type":"Planning"},{"subject":"Goal Setting","time":"9:30 AM - 10:30 AM","topics":["Defining short-term and long-term goals","Identifying key milestones"],"type":"Strategic Planning"},{"subject":"Resource Assessment","time":"10:30 AM - 11:30 AM","topics":["Identifying available study materials","Assessing current knowledge level"],"type":"Preparation"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the Study Plan","sessions":[{"subject":"Overview","time":"9:00 AM - 9:30 AM","topics":["Reviewing the 90-day plan","Setting expectations"],"type":"Planning"},{"subject":"Goal Setting","time":"9:30 AM - 10:30 AM","topics":["Defining short-term and long-term goals","Identifying key milestones"],"type":"Strategic Planning"},{"subject":"Resource Assessment","time":"10:30 AM - 11:30 AM","topics":["Identifying available study materials","Assessing current knowledge level"],"type":"Preparation"}]},"2025-04-01 19:09:35.948 UTC","2025-04-01 19:09:35.948 UTC"]
2025-04-01T19:09:36.953Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["1043ac4d-c592-4898-a321-6f2155a732ed",1,0]
2025-04-01T19:09:37.183Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [3,0]
2025-04-01T19:09:37.417Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["658103de-1b7b-4967-b204-ab8b9fc96463",0]
2025-04-01T19:09:37.654Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:09:37.655Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:09:37.655Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 1043ac4d-c592-4898-a321-6f2155a732ed
2025-04-01T19:09:37.658Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:09:37.658Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:09:37.908Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["1043ac4d-c592-4898-a321-6f2155a732ed"]
2025-04-01T19:09:37.909Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:09:37.910Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 3
2025-04-01T19:09:39.650Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 3
2025-04-01T19:09:40.142Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:09:40.146Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:09:40.387Z info [C -> Context.<anonymous>]: Test user created with id: 6e1ee6d3-36dc-4a2b-958d-1c7ff5325183
2025-04-01T19:09:40.388Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:09:40.649Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:09:40.650Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 4
2025-04-01T19:09:41.268Z info [C -> Context.<anonymous>]: Test study plan created with id: 4
2025-04-01T19:09:41.270Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:09:41.271Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:09:41.272Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:09:41.273Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:09:41.273Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:09:47.930Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:09:47.931Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:09:47.932Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:09:47.932Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:09:48.163Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:09:48.437Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["ce5a5669-0649-4e17-97bf-37cb0c3cbae8",4,"6e1ee6d3-36dc-4a2b-958d-1c7ff5325183","DAILY",1,"Introduction to Key Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Study Session 1: Core Concepts Review Session. Reviewing all core concepts covered in class. Pay close attention to all material provided by your teacher/professor. Note anything that may need extra study attention. Be sure to take breaks as needed to stay focused and not to experience mental fatigue! If something is still unclear, note it for your questions at the end of the study session or for your professor/teacher to cover next class period. Remember: The first day sets the stage for the remaining days of the semester or term! So stay focused, stay on point, and stay positive! You got this!!! Also remember: You will be tested on this material at some point. Keep that in mind as you are preparing for your success! This session will focus on all of these key topics, and more. Good luck, and most of all... enjoy this day 1 of 90!!! Your success will be well worth all the effort, and everything that you do to put yourself in the position to be successful is worth it. You are worth it! You can do it! Let's go!!! Let's go!!! Let's go!!! Be sure to get plenty of rest the night before, eat healthy meals and snacks, and remember to stay well hydrated!!! That will make a positive difference in your performance!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Don't ever give up on yourself, even if others do!!! Don't be afraid to ask questions!!! Always do your best, and you will have no regrets!!! Stay positive!!! You got this!!! If something needs clarifying, be sure to take notes so you can clarify the topic with your teacher/professor at your next available opportunity!!! You are the master of your destiny!!! So take charge and conquer the task at hand!!! Remember... You got this!!! Don't ever give up!!! You can do it!!! Let's go!!! Let's go!!! Let's go!!! Always remember that you are the master of your destiny!!! So go forth and conquer!!! You can do it!!! Don't ever give up on your dreams!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Believe in yourself!!!"},{"time":"2:00 PM - 4:00 PM","type":"Study Session 2: Homework & Practice Session. Use the time to work on homework assignments. Be sure to take breaks as needed to stay focused and not to experience mental fatigue! If something is still unclear, note it for your questions at the end of the study session or for your professor/teacher to cover next class period. Remember: The first day sets the stage for the remaining days of the semester or term! So stay focused, stay on point, and stay positive! You got this!!! Also remember: You will be tested on this material at some point. Keep that in mind as you are preparing for your success! If something needs clarifying, be sure to take notes so you can clarify the topic with your teacher/professor at your next available opportunity!!! You are the master of your destiny!!! So take charge and conquer the task at hand!!! Remember... You got this!!! Don't ever give up!!! You can do it!!! Let's go!!! Let's go!!! Let's go!!! Always remember that you are the master of your destiny!!! So go forth and conquer!!! You can do it!!! Don't ever give up on your dreams!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Believe in yourself!!!"},{"time":"7:00 PM - 8:00 PM","type":"Study Session 3: Questions. Do you have any questions? Ask them here and now!!!"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Key Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Study Session 1: Core Concepts Review Session. Reviewing all core concepts covered in class. Pay close attention to all material provided by your teacher/professor. Note anything that may need extra study attention. Be sure to take breaks as needed to stay focused and not to experience mental fatigue! If something is still unclear, note it for your questions at the end of the study session or for your professor/teacher to cover next class period. Remember: The first day sets the stage for the remaining days of the semester or term! So stay focused, stay on point, and stay positive! You got this!!! Also remember: You will be tested on this material at some point. Keep that in mind as you are preparing for your success! This session will focus on all of these key topics, and more. Good luck, and most of all... enjoy this day 1 of 90!!! Your success will be well worth all the effort, and everything that you do to put yourself in the position to be successful is worth it. You are worth it! You can do it! Let's go!!! Let's go!!! Let's go!!! Be sure to get plenty of rest the night before, eat healthy meals and snacks, and remember to stay well hydrated!!! That will make a positive difference in your performance!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Don't ever give up on yourself, even if others do!!! Don't be afraid to ask questions!!! Always do your best, and you will have no regrets!!! Stay positive!!! You got this!!! If something needs clarifying, be sure to take notes so you can clarify the topic with your teacher/professor at your next available opportunity!!! You are the master of your destiny!!! So take charge and conquer the task at hand!!! Remember... You got this!!! Don't ever give up!!! You can do it!!! Let's go!!! Let's go!!! Let's go!!! Always remember that you are the master of your destiny!!! So go forth and conquer!!! You can do it!!! Don't ever give up on your dreams!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Believe in yourself!!!"},{"time":"2:00 PM - 4:00 PM","type":"Study Session 2: Homework & Practice Session. Use the time to work on homework assignments. Be sure to take breaks as needed to stay focused and not to experience mental fatigue! If something is still unclear, note it for your questions at the end of the study session or for your professor/teacher to cover next class period. Remember: The first day sets the stage for the remaining days of the semester or term! So stay focused, stay on point, and stay positive! You got this!!! Also remember: You will be tested on this material at some point. Keep that in mind as you are preparing for your success! If something needs clarifying, be sure to take notes so you can clarify the topic with your teacher/professor at your next available opportunity!!! You are the master of your destiny!!! So take charge and conquer the task at hand!!! Remember... You got this!!! Don't ever give up!!! You can do it!!! Let's go!!! Let's go!!! Let's go!!! Always remember that you are the master of your destiny!!! So go forth and conquer!!! You can do it!!! Don't ever give up on your dreams!!! Let's go!!! Let's go!!! Let's go!!! You can do it!!! Believe in yourself!!!"},{"time":"7:00 PM - 8:00 PM","type":"Study Session 3: Questions. Do you have any questions? Ask them here and now!!!"}]},"2025-04-01 19:09:47.934 UTC","2025-04-01 19:09:47.934 UTC"]
2025-04-01T19:09:48.744Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["ce5a5669-0649-4e17-97bf-37cb0c3cbae8",1,0]
2025-04-01T19:09:49.050Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [4,0]
2025-04-01T19:09:49.283Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["6e1ee6d3-36dc-4a2b-958d-1c7ff5325183",0]
2025-04-01T19:09:49.518Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:09:49.520Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:09:49.522Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: ce5a5669-0649-4e17-97bf-37cb0c3cbae8
2025-04-01T19:09:49.523Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:09:49.999Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["ce5a5669-0649-4e17-97bf-37cb0c3cbae8",1,0]
2025-04-01T19:09:50.280Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [4,0]
2025-04-01T19:09:50.282Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:09:50.283Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:09:50.284Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:09:50.517Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["ce5a5669-0649-4e17-97bf-37cb0c3cbae8"]
2025-04-01T19:09:50.518Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:09:50.518Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 4
2025-04-01T19:09:52.444Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 4
2025-04-01T19:09:52.682Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:09:52.683Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:09:52.919Z info [C -> Context.<anonymous>]: Test user created with id: d595e6e0-b9a5-44ac-b25c-6dd7421a02bd
2025-04-01T19:09:52.920Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:09:53.216Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:09:53.218Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 5
2025-04-01T19:09:53.815Z info [C -> Context.<anonymous>]: Test study plan created with id: 5
2025-04-01T19:09:53.816Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:09:53.818Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:09:53.819Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:09:53.820Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:09:53.821Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:09:59.016Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:09:59.017Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:09:59.018Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:09:59.019Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:09:59.290Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:09:59.522Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:09:59.803Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["f15dca47-4095-4aec-9df8-d0ba83d4469f",5,"d595e6e0-b9a5-44ac-b25c-6dd7421a02bd","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 - 10:30","type":"Study Session - Fundamentals Review and Planning - 1.5 hours dedicated to understanding the core subjects of the specific curriculum and general study planning of next days study schedule.  Includes review of key concepts from past learning, if applicable, and setting realistic targets for the day, ensuring alignment with long-term goals with a high focus on resource preparations for the next day.. Prepare resources for tomorrow.  Outline topics to be covered for each subject as listed for next days learning (Day 2).  Plan out daily targets and ensure they are feasible for the next day (Day 2). Take a break for 30-mins and re-engage afterwards to plan out daily study session.. Afterwards, take a short break (5-mins) and re-engage with other subjects after the break period."},{"time":"11:00 - 12:30","type":"Study Session - Subject A - Intro - 1.5 hours dedicated to the start of Subject A, concentrating on basic definitions, history, and overall importance.  Start with fundamentals and key definitions.  Ensure proper conceptualization of materials. Review basic theories and formulas related to Subject A."},{"time":"13:30 - 15:00","type":"Study Session - Subject B - Intro - 1.5 hours dedicated to Subject B, covering fundamental principles and their real-world applications. Focus on building a strong conceptual foundation for the course materials.. Establish an understanding of the subject matter.  Explain principles and demonstrate applications."},{"time":"15:30 - 17:00","type":"Study Session - Subject C - Intro - 1.5 hours dedicated to Subject C, concentrating on basic definitions, history, and overall importance.  Start with fundamentals and key definitions.  Ensure proper conceptualization of materials. Review basic theories and formulas related to Subject C."},{"time":"17:30 - 19:00","type":"Review Session - Review of all materials.  2 hours dedicated to daily reviews of the various learning tasks and the specific information obtained."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 - 10:30","type":"Study Session - Fundamentals Review and Planning - 1.5 hours dedicated to understanding the core subjects of the specific curriculum and general study planning of next days study schedule.  Includes review of key concepts from past learning, if applicable, and setting realistic targets for the day, ensuring alignment with long-term goals with a high focus on resource preparations for the next day.. Prepare resources for tomorrow.  Outline topics to be covered for each subject as listed for next days learning (Day 2).  Plan out daily targets and ensure they are feasible for the next day (Day 2). Take a break for 30-mins and re-engage afterwards to plan out daily study session.. Afterwards, take a short break (5-mins) and re-engage with other subjects after the break period."},{"time":"11:00 - 12:30","type":"Study Session - Subject A - Intro - 1.5 hours dedicated to the start of Subject A, concentrating on basic definitions, history, and overall importance.  Start with fundamentals and key definitions.  Ensure proper conceptualization of materials. Review basic theories and formulas related to Subject A."},{"time":"13:30 - 15:00","type":"Study Session - Subject B - Intro - 1.5 hours dedicated to Subject B, covering fundamental principles and their real-world applications. Focus on building a strong conceptual foundation for the course materials.. Establish an understanding of the subject matter.  Explain principles and demonstrate applications."},{"time":"15:30 - 17:00","type":"Study Session - Subject C - Intro - 1.5 hours dedicated to Subject C, concentrating on basic definitions, history, and overall importance.  Start with fundamentals and key definitions.  Ensure proper conceptualization of materials. Review basic theories and formulas related to Subject C."},{"time":"17:30 - 19:00","type":"Review Session - Review of all materials.  2 hours dedicated to daily reviews of the various learning tasks and the specific information obtained."}]},"2025-04-01 19:09:59.020 UTC","2025-04-01 19:09:59.020 UTC"]
2025-04-01T19:10:00.032Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["f15dca47-4095-4aec-9df8-d0ba83d4469f",1,0]
2025-04-01T19:10:00.314Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [5,0]
2025-04-01T19:10:00.547Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d595e6e0-b9a5-44ac-b25c-6dd7421a02bd",0]
2025-04-01T19:10:00.778Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:10:00.779Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:10:00.779Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: f15dca47-4095-4aec-9df8-d0ba83d4469f
2025-04-01T19:10:00.780Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T19:10:01.266Z info [C -> EventEmitter.<anonymous>]: Prisma Query: UPDATE "public"."Schedule" SET "focus" = $1, "targets" = $2, "updatedAt" = $3 WHERE ("public"."Schedule"."id" = $4 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["Updated Focus Area",["New Target 1","New Target 2"],"2025-04-01 19:10:00.782 UTC","f15dca47-4095-4aec-9df8-d0ba83d4469f"]
2025-04-01T19:10:01.267Z info [C -> ScheduleService.updateSchedule]: Updated Schedule:
2025-04-01T19:10:01.269Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:01.269Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:01.504Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["f15dca47-4095-4aec-9df8-d0ba83d4469f"]
2025-04-01T19:10:01.506Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:10:01.507Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 5
2025-04-01T19:10:03.158Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 5
2025-04-01T19:10:03.725Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:10:03.727Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:03.964Z info [C -> Context.<anonymous>]: Test user created with id: 478b4f4b-968b-4d93-9990-78fea26d78ed
2025-04-01T19:10:03.965Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:04.225Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:04.226Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 6
2025-04-01T19:10:04.784Z info [C -> Context.<anonymous>]: Test study plan created with id: 6
2025-04-01T19:10:04.785Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:10:04.785Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:10:04.786Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:10:04.786Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:10:04.787Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:10:09.284Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:10:09.286Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:10:09.286Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:10:09.287Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:10:09.632Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:10:09.877Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b",6,"478b4f4b-968b-4d93-9990-78fea26d78ed","DAILY",1,"Introduction to the Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Study Session - Introduction to Programming Basics (Python/Java/C++) depending on the desired field and preference). Focus on Syntax and basic concepts such as variables, data types, and control structures (if/else statements and loops)) . Resources: Online tutorials (e.g., Codecademy, Khan Academy), textbook chapters.  Topics: Introduction to Syntax. Resources: Tutorial Website for basics of Python, Java or C++. Depending on the preferred programming path. Topics: Variables and Datatypes, Control Structures, Introduction to loops, printing statements, comments. Subject: Introduction to Programming, Basics of Syntax and logic, setting up local working environment for writing code. Introduction to algorithms and data structures. Basics of code debugging. Basic software testing.  Set up environment for coding practice using an IDE or online compiler.. Subject: Programming Fundamentals, IDE install, Debugging and testing basics."},{"time":"1:00 PM - 3:00 PM","type":"Study Session - Mathematics for field of focus. This can be Calculus, Linear Algebra, Discrete Mathematics, or Statistics. Focus on reviewing fundamental concepts and working through practice problems from a textbook or online resource. Topics: Basics of Calculus/Linear Algebra/Discrete Mathematics/Statistics. Resources: Textbook. Topics: Functions, Sets, relations, logic, theorems. Subject: Mathematics. If you choose to pursue statistics, topics would include descriptive and inferential statistics."},{"time":"4:00 PM - 6:00 PM","type":"Study Session - Introduction to a Domain Specific Knowledge such as finance, artificial intelligence, or biology. Overview of the core ideas and terminologies. Resources: Introductory textbooks, online course lectures. Topics: Core concepts. Subject: Review of domain specific knowledge, this depends on the field of study that you have chosen."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Study Session - Introduction to Programming Basics (Python/Java/C++) depending on the desired field and preference). Focus on Syntax and basic concepts such as variables, data types, and control structures (if/else statements and loops)) . Resources: Online tutorials (e.g., Codecademy, Khan Academy), textbook chapters.  Topics: Introduction to Syntax. Resources: Tutorial Website for basics of Python, Java or C++. Depending on the preferred programming path. Topics: Variables and Datatypes, Control Structures, Introduction to loops, printing statements, comments. Subject: Introduction to Programming, Basics of Syntax and logic, setting up local working environment for writing code. Introduction to algorithms and data structures. Basics of code debugging. Basic software testing.  Set up environment for coding practice using an IDE or online compiler.. Subject: Programming Fundamentals, IDE install, Debugging and testing basics."},{"time":"1:00 PM - 3:00 PM","type":"Study Session - Mathematics for field of focus. This can be Calculus, Linear Algebra, Discrete Mathematics, or Statistics. Focus on reviewing fundamental concepts and working through practice problems from a textbook or online resource. Topics: Basics of Calculus/Linear Algebra/Discrete Mathematics/Statistics. Resources: Textbook. Topics: Functions, Sets, relations, logic, theorems. Subject: Mathematics. If you choose to pursue statistics, topics would include descriptive and inferential statistics."},{"time":"4:00 PM - 6:00 PM","type":"Study Session - Introduction to a Domain Specific Knowledge such as finance, artificial intelligence, or biology. Overview of the core ideas and terminologies. Resources: Introductory textbooks, online course lectures. Topics: Core concepts. Subject: Review of domain specific knowledge, this depends on the field of study that you have chosen."}]},"2025-04-01 19:10:09.290 UTC","2025-04-01 19:10:09.290 UTC"]
2025-04-01T19:10:10.147Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b",1,0]
2025-04-01T19:10:10.391Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [6,0]
2025-04-01T19:10:10.656Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["478b4f4b-968b-4d93-9990-78fea26d78ed",0]
2025-04-01T19:10:10.903Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:10:10.904Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:10:10.904Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b
2025-04-01T19:10:10.905Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:11.169Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:11.170Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:10:11.171Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:10:11.477Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b",1,0]
2025-04-01T19:10:11.479Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:10:11.481Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:297:37)
2025-04-01T19:10:11.484Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:11.485Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:11.778Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:11.783Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:11.784Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:11.785Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:12.091Z info [C -> Context.<anonymous>]: Test user created with id: c6ebcc2b-25ee-4c52-89e7-ef1b5701e3aa
2025-04-01T19:10:12.092Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:12.659Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:12.660Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 7
2025-04-01T19:10:13.228Z info [C -> Context.<anonymous>]: Test study plan created with id: 7
2025-04-01T19:10:13.230Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:10:13.230Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:10:13.231Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:10:13.232Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:10:13.233Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:10:15.910Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:10:15.912Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:10:15.914Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:10:15.915Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:10:16.187Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:10:16.197Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 12:00 PM",
        type: "Lecture/Reading Session - Subject A (Fundamentals I) - Session 1: Core Concepts of Subject A & Basics of Subject A - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject A Notes - Topics:  Definition of Subject A, History of Subject A, Basic Principles of Subject A -  Prepare initial questions and reflections for the next session regarding subject A concepts discussed today.. - Activities: Introduction, Reading, Reflection."
      },
      {
        time: "2:00 PM - 5:00 PM",
        type: "Lecture/Reading Session - Subject B (Fundamentals I) - Session 1: Core Concepts of Subject B & Basics of Subject B - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject B Notes - Topics:  Definition of Subject B, History of Subject B, Basic Principles of Subject B - Prepare initial questions and reflections for the next session regarding subject B concepts discussed today.. - Activities: Introduction, Reading, Reflection."
      },
      {
        time: "7:00 PM - 9:00 PM",
        type: "Practice Problems/Review Session - Subject A & B - Resources: Problem Sets 1 & 2, Practice Questions, Subject A & B Notes - Topics: Practice problems based on topics discussed earlier. - Complete practice problems related to Subject A & B.  Review notes from the day. - Activities: Practice, Review, Reflection."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 12:00 PM",
          type: "Lecture/Reading Session - Subject A (Fundamentals I) - Session 1: Core Concepts of Subject A & Basics of Subject A - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject A Notes - Topics:  Definition of Subject A, History of Subject A, Basic Principles of Subject A -  Prepare initial questions and reflections for the next session regarding subject A concepts discussed today.. - Activities: Introduction, Reading, Reflection."
        },
        {
          time: "2:00 PM - 5:00 PM",
          type: "Lecture/Reading Session - Subject B (Fundamentals I) - Session 1: Core Concepts of Subject B & Basics of Subject B - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject B Notes - Topics:  Definition of Subject B, History of Subject B, Basic Principles of Subject B - Prepare initial questions and reflections for the next session regarding subject B concepts discussed today.. - Activities: Introduction, Reading, Reflection."
        },
        {
          time: "7:00 PM - 9:00 PM",
          type: "Practice Problems/Review Session - Subject A & B - Resources: Problem Sets 1 & 2, Practice Questions, Subject A & B Notes - Topics: Practice problems based on topics discussed earlier. - Complete practice problems related to Subject A & B.  Review notes from the day. - Activities: Practice, Review, Reflection."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 12:00 PM",
        type: "Lecture/Reading Session - Subject A (Fundamentals I) - Session 1: Core Concepts of Subject A & Basics of Subject A - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject A Notes - Topics:  Definition of Subject A, History of Subject A, Basic Principles of Subject A -  Prepare initial questions and reflections for the next session regarding subject A concepts discussed today.. - Activities: Introduction, Reading, Reflection."
      },
      {
        time: "2:00 PM - 5:00 PM",
        type: "Lecture/Reading Session - Subject B (Fundamentals I) - Session 1: Core Concepts of Subject B & Basics of Subject B - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject B Notes - Topics:  Definition of Subject B, History of Subject B, Basic Principles of Subject B - Prepare initial questions and reflections for the next session regarding subject B concepts discussed today.. - Activities: Introduction, Reading, Reflection."
      },
      {
        time: "7:00 PM - 9:00 PM",
        type: "Practice Problems/Review Session - Subject A & B - Resources: Problem Sets 1 & 2, Practice Questions, Subject A & B Notes - Topics: Practice problems based on topics discussed earlier. - Complete practice problems related to Subject A & B.  Review notes from the day. - Activities: Practice, Review, Reflection."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 12:00 PM",
          type: "Lecture/Reading Session - Subject A (Fundamentals I) - Session 1: Core Concepts of Subject A & Basics of Subject A - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject A Notes - Topics:  Definition of Subject A, History of Subject A, Basic Principles of Subject A -  Prepare initial questions and reflections for the next session regarding subject A concepts discussed today.. - Activities: Introduction, Reading, Reflection."
        },
        {
          time: "2:00 PM - 5:00 PM",
          type: "Lecture/Reading Session - Subject B (Fundamentals I) - Session 1: Core Concepts of Subject B & Basics of Subject B - Resources: Textbook Chapter 1, Lecture Slides Set 1, Subject B Notes - Topics:  Definition of Subject B, History of Subject B, Basic Principles of Subject B - Prepare initial questions and reflections for the next session regarding subject B concepts discussed today.. - Activities: Introduction, Reading, Reflection."
        },
        {
          time: "7:00 PM - 9:00 PM",
          type: "Practice Problems/Review Session - Subject A & B - Resources: Problem Sets 1 & 2, Practice Questions, Subject A & B Notes - Topics: Practice problems based on topics discussed earlier. - Complete practice problems related to Subject A & B.  Review notes from the day. - Activities: Practice, Review, Reflection."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-04-01T19:10:16.201Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:16.201Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:16.494Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:16.496Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:16.497Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:16.498Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:16.801Z info [C -> Context.<anonymous>]: Test user created with id: 4a51a25f-aa24-4078-82da-6847be7f58c8
2025-04-01T19:10:16.802Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:17.108Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:17.108Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 8
2025-04-01T19:10:17.665Z info [C -> Context.<anonymous>]: Test study plan created with id: 8
2025-04-01T19:10:17.666Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:10:17.912Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:10:17.913Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:10:17.914Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T19:10:17.916Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:17.916Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:18.170Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:18.173Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:18.174Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:18.175Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:18.439Z info [C -> Context.<anonymous>]: Test user created with id: d1862001-e7c7-4725-825b-8a03708bf6dc
2025-04-01T19:10:18.440Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:18.711Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:18.712Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 9
2025-04-01T19:10:19.235Z info [C -> Context.<anonymous>]: Test study plan created with id: 9
2025-04-01T19:10:19.236Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T19:10:19.490Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:10:19.492Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T19:10:19.494Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:19.494Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:19.740Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:19.742Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:19.743Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:19.745Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:20.266Z info [C -> Context.<anonymous>]: Test user created with id: 7a785a14-1f5d-41a5-a8f8-757a29853994
2025-04-01T19:10:20.267Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:20.528Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:20.530Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 10
2025-04-01T19:10:21.074Z info [C -> Context.<anonymous>]: Test study plan created with id: 10
2025-04-01T19:10:21.075Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:10:21.076Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:10:23.652Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:10:23.653Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:10:23.655Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:23.655Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:23.917Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:23.920Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:23.921Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:23.922Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:24.174Z info [C -> Context.<anonymous>]: Test user created with id: 0949a721-2510-4048-83c8-d608a8f21362
2025-04-01T19:10:24.175Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:24.481Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:24.482Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-01T19:10:25.045Z info [C -> Context.<anonymous>]: Test study plan created with id: 11
2025-04-01T19:10:25.047Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:25.048Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:25.295Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b"]
2025-04-01T19:10:25.298Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule b09e5258-f693-4cc6-b9d0-48fa4bbf6b6b: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:25.299Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:10:25.302Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:27.553Z info [C -> Context.<anonymous>]: Test user created: 642a492a-7b66-4c9c-9a1c-ebb1df704f89
2025-04-01T19:10:27.554Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:30.287Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:30.288Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-01T19:10:31.474Z info [C -> Context.<anonymous>]: Study plan created: 12
2025-04-01T19:10:31.476Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:10:31.477Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:10:31.477Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:10:31.479Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:10:31.479Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:10:34.688Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:10:34.689Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:10:34.689Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:10:34.690Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:10:34.935Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:10:35.234Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:10:35.478Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["d80b979d-41cf-436e-a31a-925d6b4a173c",12,"642a492a-7b66-4c9c-9a1c-ebb1df704f89","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Fundamentals Review (Subject A, Topic 1 & 2 )"},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Deep Dive (Subject B, Topic 1 & 2 )"},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Practice Problems (Subject A & B)"},{"time":"4:00 PM - 5:00 PM","type":"Review and Summarization"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Study Session 1: Fundamentals Review (Subject A, Topic 1 & 2 )"},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Deep Dive (Subject B, Topic 1 & 2 )"},{"time":"2:00 PM - 3:30 PM","type":"Study Session 3: Practice Problems (Subject A & B)"},{"time":"4:00 PM - 5:00 PM","type":"Review and Summarization"}]},"2025-04-01 19:10:34.692 UTC","2025-04-01 19:10:34.692 UTC"]
2025-04-01T19:10:35.745Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["d80b979d-41cf-436e-a31a-925d6b4a173c",1,0]
2025-04-01T19:10:36.052Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [12,0]
2025-04-01T19:10:36.296Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["642a492a-7b66-4c9c-9a1c-ebb1df704f89",0]
2025-04-01T19:10:36.544Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:10:36.546Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:10:36.547Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: d80b979d-41cf-436e-a31a-925d6b4a173c
2025-04-01T19:10:36.549Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:36.549Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:36.872Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["d80b979d-41cf-436e-a31a-925d6b4a173c"]
2025-04-01T19:10:36.873Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:10:36.874Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 12
2025-04-01T19:10:37.182Z error [C -> StudyPlanService.deletePlanById]: Error deleting plan with id 12: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:13)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:81:17)
2025-04-01T19:10:37.183Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:13)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:81:17)
2025-04-01T19:10:37.185Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:37.427Z info [C -> Context.<anonymous>]: Test user created: 6af7256b-fba4-4479-8527-0460b4690ee3
2025-04-01T19:10:37.429Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:39.126Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:39.127Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 13
2025-04-01T19:10:39.911Z info [C -> Context.<anonymous>]: Study plan created: 13
2025-04-01T19:10:39.912Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 13
2025-04-01T19:10:42.197Z error [C -> StudyPlanService.updatePlanById]: Error updating plan with id 13: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.updatePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:92:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:107:33)
2025-04-01T19:10:42.199Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:10:42.199Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:10:42.445Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["d80b979d-41cf-436e-a31a-925d6b4a173c"]
2025-04-01T19:10:42.448Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule d80b979d-41cf-436e-a31a-925d6b4a173c: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:10:42.449Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:10:42.451Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:10:43.015Z info [C -> Context.<anonymous>]: Test user created: 6ae0773b-465a-448c-9cc0-75d581be98d9
2025-04-01T19:10:43.016Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:10:45.118Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:10:45.119Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 14
2025-04-01T19:10:45.937Z info [C -> Context.<anonymous>]: Study plan created: 14
2025-04-01T19:10:45.939Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:10:45.939Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:10:45.940Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:10:45.940Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:10:45.941Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:11:00.946Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:11:00.947Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:11:01.345Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:11:01.592Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["d80b979d-41cf-436e-a31a-925d6b4a173c"]
2025-04-01T19:11:01.595Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule d80b979d-41cf-436e-a31a-925d6b4a173c: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:01.596Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:01.597Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:02.380Z info [C -> Context.<anonymous>]: Test user created: 9056b610-458d-4142-a2fd-47c4084fa772
2025-04-01T19:11:02.381Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:04.336Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:04.336Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 15
2025-04-01T19:11:05.143Z info [C -> Context.<anonymous>]: Study plan created: 15
2025-04-01T19:11:05.144Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:11:05.146Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:11:05.146Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:11:05.147Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:11:05.148Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:11:08.227Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:11:08.228Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:11:08.229Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:11:08.229Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:11:08.477Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:11:08.821Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa",15,"9056b610-458d-4142-a2fd-47c4084fa772","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Study"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Study"}]},"2025-04-01 19:11:08.231 UTC","2025-04-01 19:11:08.231 UTC"]
2025-04-01T19:11:09.128Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa",1,0]
2025-04-01T19:11:09.377Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [15,0]
2025-04-01T19:11:09.640Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["9056b610-458d-4142-a2fd-47c4084fa772",0]
2025-04-01T19:11:09.887Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:11:09.889Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:11:09.890Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa
2025-04-01T19:11:09.891Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 15
2025-04-01T19:11:11.791Z error [C -> StudyPlanService.updatePlanById]: Error updating plan with id 15: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.updatePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:92:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:134:13)
2025-04-01T19:11:11.794Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:11:11.795Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:11:12.099Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa"]
2025-04-01T19:11:12.100Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:11:12.100Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 15
2025-04-01T19:11:12.406Z error [C -> StudyPlanService.deletePlanById]: Error deleting plan with id 15: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:13)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:81:17)
2025-04-01T19:11:12.408Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:13)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:81:17)
2025-04-01T19:11:12.411Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:12.660Z info [C -> Context.<anonymous>]: Test user created: 29358a7d-b711-4abc-b7fb-59c03db35335
2025-04-01T19:11:12.661Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:14.408Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:14.409Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 16
2025-04-01T19:11:15.272Z info [C -> Context.<anonymous>]: Study plan created: 16
2025-04-01T19:11:15.273Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:11:15.274Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:11:15.275Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:11:15.275Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:11:15.276Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:11:18.287Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:11:18.287Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:11:18.288Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:11:18.289Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:11:18.539Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:11:18.543Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        subject: "Mathematics",
        time: "9:00 AM - 10:30 AM",
        topics: [
          "Basic Algebra",
          "Introduction to Calculus"
        ],
        type: "Lecture & Practice"
      },
      {
        subject: "Computer Science",
        time: "11:00 AM - 12:30 PM",
        topics: [
          "Data Structures",
          "Algorithms"
        ],
        type: "Reading & Problem Solving"
      },
      {
        subject: "Physics",
        time: "2:00 PM - 3:30 PM",
        topics: [
          "Mechanics",
          "Thermodynamics"
        ],
        type: "Review & Exercises"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          subject: "Mathematics",
          time: "9:00 AM - 10:30 AM",
          topics: [
            "Basic Algebra",
            "Introduction to Calculus"
          ],
          type: "Lecture & Practice"
        },
        {
          subject: "Computer Science",
          time: "11:00 AM - 12:30 PM",
          topics: [
            "Data Structures",
            "Algorithms"
          ],
          type: "Reading & Problem Solving"
        },
        {
          subject: "Physics",
          time: "2:00 PM - 3:30 PM",
          topics: [
            "Mechanics",
            "Thermodynamics"
          ],
          type: "Review & Exercises"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        subject: "Mathematics",
        time: "9:00 AM - 10:30 AM",
        topics: [
          "Basic Algebra",
          "Introduction to Calculus"
        ],
        type: "Lecture & Practice"
      },
      {
        subject: "Computer Science",
        time: "11:00 AM - 12:30 PM",
        topics: [
          "Data Structures",
          "Algorithms"
        ],
        type: "Reading & Problem Solving"
      },
      {
        subject: "Physics",
        time: "2:00 PM - 3:30 PM",
        topics: [
          "Mechanics",
          "Thermodynamics"
        ],
        type: "Review & Exercises"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          subject: "Mathematics",
          time: "9:00 AM - 10:30 AM",
          topics: [
            "Basic Algebra",
            "Introduction to Calculus"
          ],
          type: "Lecture & Practice"
        },
        {
          subject: "Computer Science",
          time: "11:00 AM - 12:30 PM",
          topics: [
            "Data Structures",
            "Algorithms"
          ],
          type: "Reading & Problem Solving"
        },
        {
          subject: "Physics",
          time: "2:00 PM - 3:30 PM",
          topics: [
            "Mechanics",
            "Thermodynamics"
          ],
          type: "Review & Exercises"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:17)
2025-04-01T19:11:18.546Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:11:18.546Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:11:18.793Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa"]
2025-04-01T19:11:18.795Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:18.796Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:18.798Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:19.315Z info [C -> Context.<anonymous>]: Test user created: 1f3f568c-77f6-41ff-bdc6-51755ec705b7
2025-04-01T19:11:19.316Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:21.326Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:21.327Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 17
2025-04-01T19:11:22.235Z info [C -> Context.<anonymous>]: Study plan created: 17
2025-04-01T19:11:22.237Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 17
2025-04-01T19:11:22.237Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 17
2025-04-01T19:11:23.653Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:11:23.653Z error [C -> ScheduleService.generateDayContent]: Error generating day content: Unterminated string in JSON at position 13450 (line 7 column 13329)
SyntaxError: Unterminated string in JSON at position 13450 (line 7 column 13329)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:109:37)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:11:23.654Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: Unterminated string in JSON at position 13450 (line 7 column 13329)
SyntaxError: Unterminated string in JSON at position 13450 (line 7 column 13329)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:109:37)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:11:24.082Z error [C -> StudyPlanService.updatePlanById]: Error updating plan with id 17: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.updatePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:92:20)
    at async Promise.all (index 0)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:160:13)
2025-04-01T19:11:24.086Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:11:24.087Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:11:24.333Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa"]
2025-04-01T19:11:24.335Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 0ebe22d4-6fe0-4777-9c5a-e57fa3b759aa: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:24.336Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:11:24.338Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:24.574Z info [C -> Context.<anonymous>]: Test user created: 0fb97e52-ecae-4db8-8539-e462bf3f2cc1
2025-04-01T19:11:24.575Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:26.332Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:26.333Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 18
2025-04-01T19:11:26.641Z error [C -> StudyPlanService.updatePlanById]: Error updating plan with id 17: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.updatePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:92:20)
    at async Promise.all (index 1)
2025-04-01T19:11:27.161Z info [C -> Context.<anonymous>]: Study plan created: 18
2025-04-01T19:11:29.602Z error [C -> cleanup]: Cleanup error: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async cleanup (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:245:9)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:202:13)
2025-04-01T19:11:29.619Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:29.912Z info [C -> Context.<anonymous>]: Test user created: fa14c077-07bb-43e3-88fd-b7c8cf8c98bb
2025-04-01T19:11:29.914Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:31.509Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:31.511Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 19
2025-04-01T19:11:32.373Z info [C -> Context.<anonymous>]: Study plan created: 19
2025-04-01T19:11:32.374Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 19
2025-04-01T19:11:33.761Z error [C -> StudyPlanService.updatePlanById]: Error updating plan with id 19: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studyPlan.update()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.updatePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:92:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:222:33)
2025-04-01T19:11:36.427Z error [C -> cleanup]: Cleanup error: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async cleanup (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:245:9)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:202:13)
2025-04-01T19:11:36.439Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:11:36.982Z info [C -> Context.<anonymous>]: Test user created: 267c273f-eb5c-4883-b2c3-907b822a799d
2025-04-01T19:11:36.983Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:11:39.032Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:11:39.033Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 20
2025-04-01T19:11:39.856Z info [C -> Context.<anonymous>]: Study plan created: 20
2025-04-01T19:11:39.857Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 20
2025-04-01T19:11:40.117Z error [C -> StudyPlanService.deletePlanById]: Error deleting plan with id 20: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async StudyPlanService.deletePlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:13)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:228:13)
2025-04-01T19:11:42.716Z error [C -> cleanup]: Cleanup error: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.studySession.deleteMany()` invocation:


Foreign key constraint violated: `Resource_studySessionId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async cleanup (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:245:9)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:202:13)
2025-04-01T19:22:52.567Z info [C -> new]: Schedule Service initialized
2025-04-01T19:22:52.612Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:22:55.145Z info [C -> Context.<anonymous>]: Test user created with id: 5a6827ad-e85d-4489-9c52-b257b73d3b10
2025-04-01T19:22:55.147Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:22:57.536Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:22:57.539Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 1
2025-04-01T19:22:58.765Z info [C -> Context.<anonymous>]: Test study plan created with id: 1
2025-04-01T19:22:58.767Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:22:58.768Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:22:58.769Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:22:58.770Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:22:58.771Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:23:02.158Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:23:02.159Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:23:02.160Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:23:02.161Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:23:04.293Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:23:04.908Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["a5c976ba-510f-44c4-89fa-b88bb42c78f2",1,"5a6827ad-e85d-4489-9c52-b257b73d3b10","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 - 10:30","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture and Practice"},{"subject":"Computer Science","time":"11:00 - 12:30","topics":["Introduction to Programming","Data Structures"],"type":"Lecture and Coding Exercises"},{"subject":"Physics","time":"14:00 - 15:30","topics":["Mechanics","Thermodynamics"],"type":"Problem Solving Session"},{"subject":"English Literature","time":"16:00 - 17:30","topics":["Literary Analysis","Poetry"],"type":"Reading and Discussion"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 - 10:30","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture and Practice"},{"subject":"Computer Science","time":"11:00 - 12:30","topics":["Introduction to Programming","Data Structures"],"type":"Lecture and Coding Exercises"},{"subject":"Physics","time":"14:00 - 15:30","topics":["Mechanics","Thermodynamics"],"type":"Problem Solving Session"},{"subject":"English Literature","time":"16:00 - 17:30","topics":["Literary Analysis","Poetry"],"type":"Reading and Discussion"}]},"2025-04-01 19:23:03.972 UTC","2025-04-01 19:23:03.972 UTC"]
2025-04-01T19:23:05.467Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["a5c976ba-510f-44c4-89fa-b88bb42c78f2",1,0]
2025-04-01T19:23:06.034Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [1,0]
2025-04-01T19:23:06.637Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5a6827ad-e85d-4489-9c52-b257b73d3b10",0]
2025-04-01T19:23:06.955Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:23:06.956Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:23:06.957Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: a5c976ba-510f-44c4-89fa-b88bb42c78f2
2025-04-01T19:23:06.959Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:23:06.960Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:23:07.528Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a5c976ba-510f-44c4-89fa-b88bb42c78f2"]
2025-04-01T19:23:07.531Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:23:07.532Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 1
2025-04-01T19:23:09.652Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 1
2025-04-01T19:23:10.136Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:23:10.137Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:23:10.623Z info [C -> Context.<anonymous>]: Test user created with id: 18221a8b-d105-472e-8188-69e944c0a469
2025-04-01T19:23:10.624Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:23:10.877Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:23:10.878Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 2
2025-04-01T19:23:11.463Z info [C -> Context.<anonymous>]: Test study plan created with id: 2
2025-04-01T19:23:11.466Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:23:11.467Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:23:11.468Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:23:11.470Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:23:11.471Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:23:25.598Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:23:25.599Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:23:25.599Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:23:25.600Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:23:25.864Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:23:26.208Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:23:26.481Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:23:26.482Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:23:26.745Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["82500043-84ca-4d88-bbb8-29e2abf0481b",2,"18221a8b-d105-472e-8188-69e944c0a469","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 - 10:30 AM","type":"Study Session 1: Foundations of [Subject Area, e.g., Programming, Physics, History] - Core Concepts and Definitions. Introduction to the fundamental principles and key terms of the subject. Start building foundational knowledge for the next 89 days. Cover basic terminology and important historical context as appropriate for the subject area. Lay groundwork for more advanced understanding to come. This builds the Base Knowledge on which future tasks will stand so make sure that you understand the key fundamental knowledge before moving onto more complex concepts which build off this foundation. Resources to be used include textbooks, online lectures, and introductory articles. Subject specific details such as programming environments should be tested out now to ensure that there are no software bugs or errors which may delay future tasks. Initial setup may delay the original schedule, but such setup is essential for future tasks. Debug the setup so that it runs cleanly. Record down errors in a log and the corresponding steps taken to correct them. This will allow you to revisit problems at a later date. If using programming environments, create basic hello world programs which are documented so they may be used later as a reference should errors occur in the future. If problems cannot be solved, then you will need to work with assistance such as a tutor to ensure that the problems are promptly resolved. In the future, consider creating a Frequently Asked Questions Log on problems, questions and their answers to improve response time to commonly arising problems, allowing for greater and more efficient work to be performed. Furthermore such documentation will allow you to rapidly onboard new people who will be able to quickly grasp past problems along with their solutions. Ensure that documentation of each session is performed immediately. It is much easier to remember what was done at the end of the session than at a later time. Documentation and archiving also ensures that all work done in the sessions can be retrieved should mistakes occur in the future, or should the subject need revisiting. It also enables you to show to others the work that you have completed. Take a short break now before moving to Session 2 to avoid burnout. A short break will enable you to proceed to Session 2 with greater concentration and to reduce the risk of burnout. A short break will also reduce risks of repetitive strain injury, and may improve overall well being and performance. Do not take very long breaks that are longer than 30 minutes as this will make it harder to return to your original tasks. Keep the breaks short and focus on light exercises to keep the blood flowing. This is especially important if you are in a profession that requires you to be desk bound. Stand up to stretch during the break to improve circulation. Simple exercises can also be performed such as torso twists. Consider going for a light walk. Listen to a short musical piece and dance. It can even be a fun and simple jingle. After a short break, proceed to Session 2 which involves applying the knowledge gained in Session 1 to solve real world problems. Start simple and progressively scale up the difficulty. By progressively scaling up, you will not feel overwhelmed, but be challenged appropriately to improve performance. Keep the problems relevant to real world situations to ensure that learning is more engaging. Consider problems such as building a home budgeting tool which will be very useful for future activities as well. By creating solutions that are useful and helpful to yourself, you will also become more motivated to create solutions. Create solutions that you will be able to use. By making solutions that you use, you can constantly refine them over time, thereby improving your understanding of the subject and the quality of your work. Use these solutions to build your portfolio which can be shown to prospective employees in the future. Work with people whom you want to work with in the future. Take time and effort to build relationships that are strong, as in the future it is highly likely you will need assistance, and it always helps to work with people that you know. Make sure to be helpful to others as well. Try to build a network. For each problem completed, note down the problems and questions that are arising and the solutions that were used. Archive this in a log so that it can be revisited to assist with solving future tasks, and also to help solve problems that others have in the future. All completed and completed solutions should be backed up and documented to prevent accidental data loss, ensuring that you do not have to repeat the same work again. This is very important as in most careers, people build off the work of others, so it is important that you do not lose data that others might use to build on to save time. Always have at least one copy of the backup on a non cloud environment to prevent accidental attacks such as ransomware which may encrypt your important data rendering it unusable. Cloud environments may fail due to security breaches or data loss, so it is important to ensure that you have at least one environment that you control which has a backup."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Applying Core Concepts - Problem Solving and Examples. Focus on applying the core concepts learned in the morning session to solve practical problems and work through examples. Practice is critical to solidify understanding. Aim to solve a set number of problems related to the core concepts. Start with basic problems and gradually increase the difficulty. Utilize online resources, practice questions, and textbooks for problem-solving. Document the process of solving each problem, including the steps taken, challenges faced, and solutions found. Reflect on the learning experience and identify areas where further understanding is needed. Prepare for more advanced concepts by familiarizing yourself with the foundational knowledge gained today. Set a clear goal for the number of problems to solve during this session. Allocate specific time for each problem to maintain efficiency. Break down complex problems into smaller, manageable steps. Collaborate with peers or seek help from online forums if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the solutions and learn from mistakes to improve problem-solving skills. Consolidate understanding by summarizing the key takeaways from each problem. Document the problems, solutions, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments. Stay focused and avoid distractions during the session. Create a conducive study environment that promotes concentration and productivity."},{"time":"2:00 - 3:30 PM","type":"Study Session 3: Deep Dive into Specific Topic - Further Exploration and Analysis. Select a specific topic related to the core concepts and dive deeper into it. Explore the topic from multiple angles, considering different perspectives and interpretations. Research additional resources, such as journal articles, research papers, and expert opinions. Analyze the topic critically, questioning assumptions and identifying gaps in knowledge. Summarize the key findings and insights gained from the exploration. Prepare to share the knowledge with others through presentations or discussions. Deepen understanding of the chosen topic by exploring its historical context. Analyze the current state of the topic and identify emerging trends and challenges. Consider the implications of the topic for real-world applications and future research. Engage with the topic by asking questions, formulating hypotheses, and conducting experiments. Collaborate with peers or experts to gain different perspectives and insights. Synthesize the information gathered and create a comprehensive overview of the topic. Document the research process, including the sources used, the methods employed, and the results obtained. Reflect on the learning experience and identify areas for further exploration and improvement. Stay curious and motivated to continue learning about the chosen topic. Set a clear goal for the session, such as completing a specific research task or writing a summary report. Allocate specific time for each task to maintain efficiency. Break down complex tasks into smaller, manageable steps. Seek guidance from mentors or experts if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the research findings and learn from mistakes to improve research skills. Consolidate understanding by summarizing the key takeaways from the session. Document the research process, findings, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments."},{"time":"4:00 - 5:30 PM","type":"Study Session 4: Review and Reinforcement - Practice Questions and Summarization. Review the core concepts and topics covered in the previous sessions. Practice answering questions related to the material, including multiple-choice, short answer, and essay questions. Summarize the key takeaways from each session and create a comprehensive review sheet. Prepare for future assessments by practicing test-taking strategies and time management techniques. Reinforce understanding by creating flashcards or using other memory aids. Review the notes and summaries created during the previous sessions. Practice answering questions related to the material, including multiple-choice, short answer, and essay questions. Summarize the key takeaways from each session and create a comprehensive review sheet. Prepare for future assessments by practicing test-taking strategies and time management techniques. Reinforce understanding by creating flashcards or using other memory aids. Set a clear goal for the session, such as completing a specific number of practice questions or creating a comprehensive review sheet. Allocate specific time for each task to maintain efficiency. Break down complex tasks into smaller, manageable steps. Seek guidance from mentors or experts if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the answers to the practice questions and learn from mistakes to improve test-taking skills. Consolidate understanding by summarizing the key takeaways from the session. Document the review process, questions answered, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 - 10:30 AM","type":"Study Session 1: Foundations of [Subject Area, e.g., Programming, Physics, History] - Core Concepts and Definitions. Introduction to the fundamental principles and key terms of the subject. Start building foundational knowledge for the next 89 days. Cover basic terminology and important historical context as appropriate for the subject area. Lay groundwork for more advanced understanding to come. This builds the Base Knowledge on which future tasks will stand so make sure that you understand the key fundamental knowledge before moving onto more complex concepts which build off this foundation. Resources to be used include textbooks, online lectures, and introductory articles. Subject specific details such as programming environments should be tested out now to ensure that there are no software bugs or errors which may delay future tasks. Initial setup may delay the original schedule, but such setup is essential for future tasks. Debug the setup so that it runs cleanly. Record down errors in a log and the corresponding steps taken to correct them. This will allow you to revisit problems at a later date. If using programming environments, create basic hello world programs which are documented so they may be used later as a reference should errors occur in the future. If problems cannot be solved, then you will need to work with assistance such as a tutor to ensure that the problems are promptly resolved. In the future, consider creating a Frequently Asked Questions Log on problems, questions and their answers to improve response time to commonly arising problems, allowing for greater and more efficient work to be performed. Furthermore such documentation will allow you to rapidly onboard new people who will be able to quickly grasp past problems along with their solutions. Ensure that documentation of each session is performed immediately. It is much easier to remember what was done at the end of the session than at a later time. Documentation and archiving also ensures that all work done in the sessions can be retrieved should mistakes occur in the future, or should the subject need revisiting. It also enables you to show to others the work that you have completed. Take a short break now before moving to Session 2 to avoid burnout. A short break will enable you to proceed to Session 2 with greater concentration and to reduce the risk of burnout. A short break will also reduce risks of repetitive strain injury, and may improve overall well being and performance. Do not take very long breaks that are longer than 30 minutes as this will make it harder to return to your original tasks. Keep the breaks short and focus on light exercises to keep the blood flowing. This is especially important if you are in a profession that requires you to be desk bound. Stand up to stretch during the break to improve circulation. Simple exercises can also be performed such as torso twists. Consider going for a light walk. Listen to a short musical piece and dance. It can even be a fun and simple jingle. After a short break, proceed to Session 2 which involves applying the knowledge gained in Session 1 to solve real world problems. Start simple and progressively scale up the difficulty. By progressively scaling up, you will not feel overwhelmed, but be challenged appropriately to improve performance. Keep the problems relevant to real world situations to ensure that learning is more engaging. Consider problems such as building a home budgeting tool which will be very useful for future activities as well. By creating solutions that are useful and helpful to yourself, you will also become more motivated to create solutions. Create solutions that you will be able to use. By making solutions that you use, you can constantly refine them over time, thereby improving your understanding of the subject and the quality of your work. Use these solutions to build your portfolio which can be shown to prospective employees in the future. Work with people whom you want to work with in the future. Take time and effort to build relationships that are strong, as in the future it is highly likely you will need assistance, and it always helps to work with people that you know. Make sure to be helpful to others as well. Try to build a network. For each problem completed, note down the problems and questions that are arising and the solutions that were used. Archive this in a log so that it can be revisited to assist with solving future tasks, and also to help solve problems that others have in the future. All completed and completed solutions should be backed up and documented to prevent accidental data loss, ensuring that you do not have to repeat the same work again. This is very important as in most careers, people build off the work of others, so it is important that you do not lose data that others might use to build on to save time. Always have at least one copy of the backup on a non cloud environment to prevent accidental attacks such as ransomware which may encrypt your important data rendering it unusable. Cloud environments may fail due to security breaches or data loss, so it is important to ensure that you have at least one environment that you control which has a backup."},{"time":"11:00 AM - 12:30 PM","type":"Study Session 2: Applying Core Concepts - Problem Solving and Examples. Focus on applying the core concepts learned in the morning session to solve practical problems and work through examples. Practice is critical to solidify understanding. Aim to solve a set number of problems related to the core concepts. Start with basic problems and gradually increase the difficulty. Utilize online resources, practice questions, and textbooks for problem-solving. Document the process of solving each problem, including the steps taken, challenges faced, and solutions found. Reflect on the learning experience and identify areas where further understanding is needed. Prepare for more advanced concepts by familiarizing yourself with the foundational knowledge gained today. Set a clear goal for the number of problems to solve during this session. Allocate specific time for each problem to maintain efficiency. Break down complex problems into smaller, manageable steps. Collaborate with peers or seek help from online forums if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the solutions and learn from mistakes to improve problem-solving skills. Consolidate understanding by summarizing the key takeaways from each problem. Document the problems, solutions, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments. Stay focused and avoid distractions during the session. Create a conducive study environment that promotes concentration and productivity."},{"time":"2:00 - 3:30 PM","type":"Study Session 3: Deep Dive into Specific Topic - Further Exploration and Analysis. Select a specific topic related to the core concepts and dive deeper into it. Explore the topic from multiple angles, considering different perspectives and interpretations. Research additional resources, such as journal articles, research papers, and expert opinions. Analyze the topic critically, questioning assumptions and identifying gaps in knowledge. Summarize the key findings and insights gained from the exploration. Prepare to share the knowledge with others through presentations or discussions. Deepen understanding of the chosen topic by exploring its historical context. Analyze the current state of the topic and identify emerging trends and challenges. Consider the implications of the topic for real-world applications and future research. Engage with the topic by asking questions, formulating hypotheses, and conducting experiments. Collaborate with peers or experts to gain different perspectives and insights. Synthesize the information gathered and create a comprehensive overview of the topic. Document the research process, including the sources used, the methods employed, and the results obtained. Reflect on the learning experience and identify areas for further exploration and improvement. Stay curious and motivated to continue learning about the chosen topic. Set a clear goal for the session, such as completing a specific research task or writing a summary report. Allocate specific time for each task to maintain efficiency. Break down complex tasks into smaller, manageable steps. Seek guidance from mentors or experts if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the research findings and learn from mistakes to improve research skills. Consolidate understanding by summarizing the key takeaways from the session. Document the research process, findings, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments."},{"time":"4:00 - 5:30 PM","type":"Study Session 4: Review and Reinforcement - Practice Questions and Summarization. Review the core concepts and topics covered in the previous sessions. Practice answering questions related to the material, including multiple-choice, short answer, and essay questions. Summarize the key takeaways from each session and create a comprehensive review sheet. Prepare for future assessments by practicing test-taking strategies and time management techniques. Reinforce understanding by creating flashcards or using other memory aids. Review the notes and summaries created during the previous sessions. Practice answering questions related to the material, including multiple-choice, short answer, and essay questions. Summarize the key takeaways from each session and create a comprehensive review sheet. Prepare for future assessments by practicing test-taking strategies and time management techniques. Reinforce understanding by creating flashcards or using other memory aids. Set a clear goal for the session, such as completing a specific number of practice questions or creating a comprehensive review sheet. Allocate specific time for each task to maintain efficiency. Break down complex tasks into smaller, manageable steps. Seek guidance from mentors or experts if needed. Maintain a positive attitude and embrace challenges as opportunities for growth. Review the answers to the practice questions and learn from mistakes to improve test-taking skills. Consolidate understanding by summarizing the key takeaways from the session. Document the review process, questions answered, and insights gained in a study journal. Use this information to prepare for future study sessions and assessments."}]},"2025-04-01 19:23:25.603 UTC","2025-04-01 19:23:25.603 UTC"]
2025-04-01T19:23:27.242Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["82500043-84ca-4d88-bbb8-29e2abf0481b",1,0]
2025-04-01T19:23:27.490Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [2,0]
2025-04-01T19:23:27.744Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["18221a8b-d105-472e-8188-69e944c0a469",0]
2025-04-01T19:23:27.993Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:23:27.994Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:23:27.994Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 82500043-84ca-4d88-bbb8-29e2abf0481b
2025-04-01T19:23:28.806Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["a5c976ba-510f-44c4-89fa-b88bb42c78f2"]
2025-04-01T19:23:28.810Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule a5c976ba-510f-44c4-89fa-b88bb42c78f2: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:23:28.811Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:23:28.813Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:23:29.381Z info [C -> Context.<anonymous>]: Test user created with id: c0b1bd48-4151-4b24-a2e7-bbf87e24026f
2025-04-01T19:23:29.383Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:23:29.997Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:23:29.999Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 3
2025-04-01T19:23:30.611Z info [C -> Context.<anonymous>]: Test study plan created with id: 3
2025-04-01T19:23:30.612Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:23:30.613Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:23:30.614Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:23:30.615Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:23:30.615Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:23:33.997Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:23:33.999Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:23:34.000Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:23:34.001Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:23:34.297Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:23:34.912Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["ffe70955-74bd-46c8-ac22-7deb04e61a14",3,"c0b1bd48-4151-4b24-a2e7-bbf87e24026f","DAILY",1,"Introduction to the core concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture and Practice Problems"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Programming","Data Structures Overview"],"type":"Reading and Code Examples"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Introduction to Thermodynamics"],"type":"Problem Solving and Conceptual Understanding"},{"subject":"English Literature","time":"4:00 PM - 5:30 PM","topics":["Shakespeare","Poetry Analysis"],"type":"Reading and Discussion"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the core concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture and Practice Problems"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Introduction to Programming","Data Structures Overview"],"type":"Reading and Code Examples"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Introduction to Thermodynamics"],"type":"Problem Solving and Conceptual Understanding"},{"subject":"English Literature","time":"4:00 PM - 5:30 PM","topics":["Shakespeare","Poetry Analysis"],"type":"Reading and Discussion"}]},"2025-04-01 19:23:34.004 UTC","2025-04-01 19:23:34.004 UTC"]
2025-04-01T19:23:35.424Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["ffe70955-74bd-46c8-ac22-7deb04e61a14",1,0]
2025-04-01T19:23:35.935Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [3,0]
2025-04-01T19:23:36.549Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["c0b1bd48-4151-4b24-a2e7-bbf87e24026f",0]
2025-04-01T19:23:36.793Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:23:36.794Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:23:36.795Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: ffe70955-74bd-46c8-ac22-7deb04e61a14
2025-04-01T19:23:36.798Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:23:36.799Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:23:37.044Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["ffe70955-74bd-46c8-ac22-7deb04e61a14"]
2025-04-01T19:23:37.045Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:23:37.045Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 3
2025-04-01T19:23:38.700Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 3
2025-04-01T19:23:39.007Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:23:39.010Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:23:39.314Z info [C -> Context.<anonymous>]: Test user created with id: 8c4b9fa9-33db-4244-b9f9-58830831b878
2025-04-01T19:23:39.315Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:23:39.622Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:23:39.622Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 4
2025-04-01T19:23:40.236Z info [C -> Context.<anonymous>]: Test study plan created with id: 4
2025-04-01T19:23:40.237Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:23:40.238Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:23:40.239Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:23:40.240Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:23:40.240Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:23:43.314Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:23:43.315Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:23:43.315Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:23:43.316Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:23:43.615Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:23:43.857Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:23:44.127Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4",4,"8c4b9fa9-33db-4244-b9f9-58830831b878","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture & Code Review"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Problem Solving"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture & Code Review"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Problem Solving"}]},"2025-04-01 19:23:43.318 UTC","2025-04-01 19:23:43.318 UTC"]
2025-04-01T19:23:44.435Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4",1,0]
2025-04-01T19:23:44.678Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [4,0]
2025-04-01T19:23:44.922Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["8c4b9fa9-33db-4244-b9f9-58830831b878",0]
2025-04-01T19:23:45.254Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:23:45.256Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:23:45.258Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 9b23d835-836e-41ef-9e32-5fbdcd3b09e4
2025-04-01T19:23:45.260Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:23:45.751Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4",1,0]
2025-04-01T19:23:45.997Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [4,0]
2025-04-01T19:23:45.999Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:23:46.001Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:23:46.001Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:23:46.278Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4"]
2025-04-01T19:23:46.280Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:23:46.280Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 4
2025-04-01T19:23:48.271Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 4
2025-04-01T19:23:48.838Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:23:48.839Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:23:49.083Z info [C -> Context.<anonymous>]: Test user created with id: e073f6b8-5fbd-41c5-b4d3-9e9b56338a3c
2025-04-01T19:23:49.084Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:23:49.350Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:23:49.352Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 5
2025-04-01T19:23:49.964Z info [C -> Context.<anonymous>]: Test study plan created with id: 5
2025-04-01T19:23:49.966Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:23:49.967Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:23:49.967Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:23:49.968Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:23:49.969Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:24:04.979Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:04.980Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:05.324Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:24:05.632Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4"]
2025-04-01T19:24:05.635Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 9b23d835-836e-41ef-9e32-5fbdcd3b09e4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:05.636Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:05.637Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:06.246Z info [C -> Context.<anonymous>]: Test user created with id: 3ea2540b-bf81-4efe-86c9-51dc785b072b
2025-04-01T19:24:06.247Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:06.753Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:06.754Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 6
2025-04-01T19:24:07.319Z info [C -> Context.<anonymous>]: Test study plan created with id: 6
2025-04-01T19:24:07.321Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:24:07.322Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:24:07.324Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:24:07.325Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:24:07.327Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:24:14.169Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:24:14.170Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:24:14.171Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:24:14.171Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:24:14.176Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 11:00 AM",
        type: "Lecture/Reading Comprehension Session 1 of 2 for Day 1. Reading text from textbook, and understand chapter concepts.. Then go through the problems at the end of the chapter to further reinforce concepts from the chapter and the material in the readings. Finally compare answers with classmates and look for alternative ways to come to the same conclusion or resolve a problem. Look to online videos as needed to solidify material further if there are still difficulties in comprehension. Make sure that you have worked all of the chapter problems as a group before the end of the session.  Write down a summary of everything learned at the end of the session to use as a study reference for Day 90 material at the end of this entire session.  At that time, you can look at how much you've progressed over the course of this 90 day learning session. Also reflect on any mistakes and misunderstandings to help reinforce the correct procedures and thought-processes to arrive at solutions and understanding the material and concepts. Then be sure to write down any follow up questions or issues to explore in session 2 or during the assigned breaks. Then be prepared to share these results at the start of Session 2 for today. Finally be sure to reflect on anything you might have missed or did not fully understand. This can also be noted to discuss with the online resources as well as your study partners so that you can fully grasp the core concepts of the class material being taught on Day 1 of 90."
      },
      {
        time: "1:00 PM - 3:00 PM",
        type: "Lecture/Reading Comprehension Session 2 of 2 for Day 1.  Work problems on board in front of study group to explain thought processes in arriving at solutions or problem conclusions. Start to think about how you might use this material in the future during the final day or two, and how it could be useful or not. Think about all of the possible alternatives, even if they are not necessarily the best ways to use the material. Write down everything you can think of to share later with the group and on the online forums as well. Share with the study group and get additional ideas of how to use the materials being taught. Take a break at the end of the session, before the next session. You will want to recharge your brain with some activity that is not cognitively demanding. Then return for the next session after 30 minutes. Make a note of any follow up questions or difficulties you ran into. Make sure you are ready to bring these up in Session 3 for Day 1."
      },
      {
        time: "3:30 PM - 5:00 PM",
        type: "Problem Solving Session 1 of 2 for Day 1. Work on problems that the group previously had problems with or did not understand. Take turns solving the problems on the board. Each person in the group should take a turn working problems on the board to reinforce the concepts and solidify your understanding. This will also enable you to understand the different approaches your classmates are using, and understand different ways of approaching the problems. Note down and summarize any problems that you are still having to work on in the final session for today."
      },
      {
        time: "7:00 PM - 9:00 PM",
        type: "Problem Solving Session 2 of 2 for Day 1. Spend the first 30 minutes reviewing questions or misunderstandings of the material from earlier sessions of today. Spend the next 30 minutes working through any of the unsolved problems on the board or trying to understand different methods for solving the previously covered problems for today. Spend the final hour summarizing all of today's materials and think about what you will need to review tomorrow."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 11:00 AM",
          type: "Lecture/Reading Comprehension Session 1 of 2 for Day 1. Reading text from textbook, and understand chapter concepts.. Then go through the problems at the end of the chapter to further reinforce concepts from the chapter and the material in the readings. Finally compare answers with classmates and look for alternative ways to come to the same conclusion or resolve a problem. Look to online videos as needed to solidify material further if there are still difficulties in comprehension. Make sure that you have worked all of the chapter problems as a group before the end of the session.  Write down a summary of everything learned at the end of the session to use as a study reference for Day 90 material at the end of this entire session.  At that time, you can look at how much you've progressed over the course of this 90 day learning session. Also reflect on any mistakes and misunderstandings to help reinforce the correct procedures and thought-processes to arrive at solutions and understanding the material and concepts. Then be sure to write down any follow up questions or issues to explore in session 2 or during the assigned breaks. Then be prepared to share these results at the start of Session 2 for today. Finally be sure to reflect on anything you might have missed or did not fully understand. This can also be noted to discuss with the online resources as well as your study partners so that you can fully grasp the core concepts of the class material being taught on Day 1 of 90."
        },
        {
          time: "1:00 PM - 3:00 PM",
          type: "Lecture/Reading Comprehension Session 2 of 2 for Day 1.  Work problems on board in front of study group to explain thought processes in arriving at solutions or problem conclusions. Start to think about how you might use this material in the future during the final day or two, and how it could be useful or not. Think about all of the possible alternatives, even if they are not necessarily the best ways to use the material. Write down everything you can think of to share later with the group and on the online forums as well. Share with the study group and get additional ideas of how to use the materials being taught. Take a break at the end of the session, before the next session. You will want to recharge your brain with some activity that is not cognitively demanding. Then return for the next session after 30 minutes. Make a note of any follow up questions or difficulties you ran into. Make sure you are ready to bring these up in Session 3 for Day 1."
        },
        {
          time: "3:30 PM - 5:00 PM",
          type: "Problem Solving Session 1 of 2 for Day 1. Work on problems that the group previously had problems with or did not understand. Take turns solving the problems on the board. Each person in the group should take a turn working problems on the board to reinforce the concepts and solidify your understanding. This will also enable you to understand the different approaches your classmates are using, and understand different ways of approaching the problems. Note down and summarize any problems that you are still having to work on in the final session for today."
        },
        {
          time: "7:00 PM - 9:00 PM",
          type: "Problem Solving Session 2 of 2 for Day 1. Spend the first 30 minutes reviewing questions or misunderstandings of the material from earlier sessions of today. Spend the next 30 minutes working through any of the unsolved problems on the board or trying to understand different methods for solving the previously covered problems for today. Spend the final hour summarizing all of today's materials and think about what you will need to review tomorrow."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 AM - 11:00 AM",
        type: "Lecture/Reading Comprehension Session 1 of 2 for Day 1. Reading text from textbook, and understand chapter concepts.. Then go through the problems at the end of the chapter to further reinforce concepts from the chapter and the material in the readings. Finally compare answers with classmates and look for alternative ways to come to the same conclusion or resolve a problem. Look to online videos as needed to solidify material further if there are still difficulties in comprehension. Make sure that you have worked all of the chapter problems as a group before the end of the session.  Write down a summary of everything learned at the end of the session to use as a study reference for Day 90 material at the end of this entire session.  At that time, you can look at how much you've progressed over the course of this 90 day learning session. Also reflect on any mistakes and misunderstandings to help reinforce the correct procedures and thought-processes to arrive at solutions and understanding the material and concepts. Then be sure to write down any follow up questions or issues to explore in session 2 or during the assigned breaks. Then be prepared to share these results at the start of Session 2 for today. Finally be sure to reflect on anything you might have missed or did not fully understand. This can also be noted to discuss with the online resources as well as your study partners so that you can fully grasp the core concepts of the class material being taught on Day 1 of 90."
      },
      {
        time: "1:00 PM - 3:00 PM",
        type: "Lecture/Reading Comprehension Session 2 of 2 for Day 1.  Work problems on board in front of study group to explain thought processes in arriving at solutions or problem conclusions. Start to think about how you might use this material in the future during the final day or two, and how it could be useful or not. Think about all of the possible alternatives, even if they are not necessarily the best ways to use the material. Write down everything you can think of to share later with the group and on the online forums as well. Share with the study group and get additional ideas of how to use the materials being taught. Take a break at the end of the session, before the next session. You will want to recharge your brain with some activity that is not cognitively demanding. Then return for the next session after 30 minutes. Make a note of any follow up questions or difficulties you ran into. Make sure you are ready to bring these up in Session 3 for Day 1."
      },
      {
        time: "3:30 PM - 5:00 PM",
        type: "Problem Solving Session 1 of 2 for Day 1. Work on problems that the group previously had problems with or did not understand. Take turns solving the problems on the board. Each person in the group should take a turn working problems on the board to reinforce the concepts and solidify your understanding. This will also enable you to understand the different approaches your classmates are using, and understand different ways of approaching the problems. Note down and summarize any problems that you are still having to work on in the final session for today."
      },
      {
        time: "7:00 PM - 9:00 PM",
        type: "Problem Solving Session 2 of 2 for Day 1. Spend the first 30 minutes reviewing questions or misunderstandings of the material from earlier sessions of today. Spend the next 30 minutes working through any of the unsolved problems on the board or trying to understand different methods for solving the previously covered problems for today. Spend the final hour summarizing all of today's materials and think about what you will need to review tomorrow."
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 AM - 11:00 AM",
          type: "Lecture/Reading Comprehension Session 1 of 2 for Day 1. Reading text from textbook, and understand chapter concepts.. Then go through the problems at the end of the chapter to further reinforce concepts from the chapter and the material in the readings. Finally compare answers with classmates and look for alternative ways to come to the same conclusion or resolve a problem. Look to online videos as needed to solidify material further if there are still difficulties in comprehension. Make sure that you have worked all of the chapter problems as a group before the end of the session.  Write down a summary of everything learned at the end of the session to use as a study reference for Day 90 material at the end of this entire session.  At that time, you can look at how much you've progressed over the course of this 90 day learning session. Also reflect on any mistakes and misunderstandings to help reinforce the correct procedures and thought-processes to arrive at solutions and understanding the material and concepts. Then be sure to write down any follow up questions or issues to explore in session 2 or during the assigned breaks. Then be prepared to share these results at the start of Session 2 for today. Finally be sure to reflect on anything you might have missed or did not fully understand. This can also be noted to discuss with the online resources as well as your study partners so that you can fully grasp the core concepts of the class material being taught on Day 1 of 90."
        },
        {
          time: "1:00 PM - 3:00 PM",
          type: "Lecture/Reading Comprehension Session 2 of 2 for Day 1.  Work problems on board in front of study group to explain thought processes in arriving at solutions or problem conclusions. Start to think about how you might use this material in the future during the final day or two, and how it could be useful or not. Think about all of the possible alternatives, even if they are not necessarily the best ways to use the material. Write down everything you can think of to share later with the group and on the online forums as well. Share with the study group and get additional ideas of how to use the materials being taught. Take a break at the end of the session, before the next session. You will want to recharge your brain with some activity that is not cognitively demanding. Then return for the next session after 30 minutes. Make a note of any follow up questions or difficulties you ran into. Make sure you are ready to bring these up in Session 3 for Day 1."
        },
        {
          time: "3:30 PM - 5:00 PM",
          type: "Problem Solving Session 1 of 2 for Day 1. Work on problems that the group previously had problems with or did not understand. Take turns solving the problems on the board. Each person in the group should take a turn working problems on the board to reinforce the concepts and solidify your understanding. This will also enable you to understand the different approaches your classmates are using, and understand different ways of approaching the problems. Note down and summarize any problems that you are still having to work on in the final session for today."
        },
        {
          time: "7:00 PM - 9:00 PM",
          type: "Problem Solving Session 2 of 2 for Day 1. Spend the first 30 minutes reviewing questions or misunderstandings of the material from earlier sessions of today. Spend the next 30 minutes working through any of the unsolved problems on the board or trying to understand different methods for solving the previously covered problems for today. Spend the final hour summarizing all of today's materials and think about what you will need to review tomorrow."
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:17)
2025-04-01T19:24:14.181Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:14.182Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:14.428Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4"]
2025-04-01T19:24:14.431Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 9b23d835-836e-41ef-9e32-5fbdcd3b09e4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:14.432Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:14.433Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:14.679Z info [C -> Context.<anonymous>]: Test user created with id: 7a6f7a3d-9177-4b58-8aae-78f9edf9c29d
2025-04-01T19:24:14.681Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:14.937Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:14.938Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 7
2025-04-01T19:24:15.512Z info [C -> Context.<anonymous>]: Test study plan created with id: 7
2025-04-01T19:24:15.514Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:24:15.759Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:24:15.760Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:24:15.761Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:273:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T19:24:15.762Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:15.763Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:16.082Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4"]
2025-04-01T19:24:16.083Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 9b23d835-836e-41ef-9e32-5fbdcd3b09e4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:16.084Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:16.085Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:16.384Z info [C -> Context.<anonymous>]: Test user created with id: 1c1aba51-af24-4338-8eb7-0ebde20c655e
2025-04-01T19:24:16.386Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:16.641Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:16.642Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 8
2025-04-01T19:24:17.195Z info [C -> Context.<anonymous>]: Test study plan created with id: 8
2025-04-01T19:24:17.197Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T19:24:17.447Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:24:17.450Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T19:24:17.453Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:17.453Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:17.541Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:24:17.542Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:24:17.543Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:24:17.544Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:24:17.702Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["9b23d835-836e-41ef-9e32-5fbdcd3b09e4"]
2025-04-01T19:24:17.707Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 9b23d835-836e-41ef-9e32-5fbdcd3b09e4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:17.708Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:17.712Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:17.798Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:24:17.967Z info [C -> Context.<anonymous>]: Test user created with id: 5301d49b-fe1f-453f-b7f2-3f6fa5b4cfdc
2025-04-01T19:24:17.968Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:18.045Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:24:18.241Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:18.242Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 9
2025-04-01T19:24:18.843Z info [C -> Context.<anonymous>]: Test study plan created with id: 9
2025-04-01T19:24:18.845Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:24:18.846Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:24:19.092Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["fb31a1cb-49a7-46cc-8ae4-5d113c18b141",5,"e073f6b8-5fbd-41c5-b4d3-9e9b56338a3c","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 10:30 AM","type":"Study Session (Fundamentals Review) - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: review of key definitions, principles, and methodologies.  Interactive activities such as quick quizzes and concept mapping to check understanding and encourage active recall of information.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is to review the basic building blocks of the subject and create a concrete foundation for more complex themes ahead in the syllabus.  This session covers all introductory concepts that are crucial stepping stones in the broader subject area; aim is complete understanding before advancing further with sessions being built to build on each other. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"11:00 AM - 12:30 PM","type":"Interactive Practice Session - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: exercises and problem solving for practical application.   Activities include sample problems and examples that promote active learning.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is reinforce all concepts covered in the first session and apply knowledge practically. This session should build on the first session to make the connection concrete with physical examples and demonstrations. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"2:00 PM - 3:30 PM","type":"Deep Dive (Advanced Concepts) - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: deep analysis of the subject and extended discussion.   Engage in problem based learning and research to promote exploration.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is expand understanding beyond core principles and begin critical thinking exploration. This session will use all the previous sessions as building blocks to create a solid foundation to build from. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"4:00 PM - 5:00 PM","type":"Review and Summary - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: Recap of the day and critical topics.  Quick review quiz.   Future Planning and session prep.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is consolidate all learning and prep for upcoming materials in future session. The key focus will be the big picture of all current material. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 10:30 AM","type":"Study Session (Fundamentals Review) - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: review of key definitions, principles, and methodologies.  Interactive activities such as quick quizzes and concept mapping to check understanding and encourage active recall of information.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is to review the basic building blocks of the subject and create a concrete foundation for more complex themes ahead in the syllabus.  This session covers all introductory concepts that are crucial stepping stones in the broader subject area; aim is complete understanding before advancing further with sessions being built to build on each other. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"11:00 AM - 12:30 PM","type":"Interactive Practice Session - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: exercises and problem solving for practical application.   Activities include sample problems and examples that promote active learning.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is reinforce all concepts covered in the first session and apply knowledge practically. This session should build on the first session to make the connection concrete with physical examples and demonstrations. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"2:00 PM - 3:30 PM","type":"Deep Dive (Advanced Concepts) - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: deep analysis of the subject and extended discussion.   Engage in problem based learning and research to promote exploration.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is expand understanding beyond core principles and begin critical thinking exploration. This session will use all the previous sessions as building blocks to create a solid foundation to build from. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."},{"time":"4:00 PM - 5:00 PM","type":"Review and Summary - Pomodoro Technique (25/5 minutes focus/break cycle repeated 3 times with a longer 15-minute break in between) - Total Focus time approx. 75 minutes with breaks during each Pomodoro cycle for better retention and decreased mental fatigue.  Includes: Recap of the day and critical topics.  Quick review quiz.   Future Planning and session prep.   Wrap up with 15-minute review before next session to cement the ideas to allow for better preparation for future material.  All breaks are included for the Pomodoro approach. Resources should be pre-selected with topics ready to go. A short quiz or summary will be available at the end to review the information learned during the cycle..  Goal is consolidate all learning and prep for upcoming materials in future session. The key focus will be the big picture of all current material. All session information is subject to change based on how the user responds to the material during the actual live session and what adjustments the user needs to maintain focus and maximize learning during the live experience using this schedule in real time to ensure maximum efficiency and adaptation of all information. This schedule is designed for efficient real world use during live interactive sessions with continuous monitoring of user needs in real time for immediate corrections that can be implemented at once to optimize all facets of user experience during all times to improve productivity with flexible on-the-fly real time scheduling adjustments based on user needs live in real time sessions to reflect maximum adaptation and user experience enhancement. Finally this will be followed up at the end with a general summary quiz that encapsulates all important aspects of the section which is essential for the upcoming sessions that will build upon the previous sessions. Pomodoro breaks are included within the session to prevent mental exhaustion and promote overall well being as well as cognitive performance during all interactive sessions. All aspects of the sessions including resources topics timing and type of material may be changed live during the session based on the feedback of the user and the real time analysis of the current session's progress to promote maximum learning with efficient use of time. This is achieved using the most current models and analysis combined to create the most user friendly customized experience that maximizes learning for any person using this schedule. Resources Topics Timing Type Subject and other fields may be instantly changed to meet the student's immediate needs. The model will attempt to make all suggestions in context with all previous models and information. Models used include but are not limited to natural language processing and knowledge graph analysis as well as natural language generation for the most user friendly experience to maximize retention and understanding of material and prevent mental exhaustion and burnout during these intensive sessions. The ultimate aim of the scheduling is to promote maximum knowledge with minimum overall user effort and burnout from the intensive use of high level analysis techniques. Models will also analyze the users real time response during the sessions to make adjustments for maximum retention and understanding. User will also be able to provide all feedback that is used to constantly improve the entire experience and the models used to promote the best long term gains from the intensive study of the schedule. This will all be done using a friendly non intrusive approach to ensure a pleasant and non stressful learning experience that creates an overall improved long term understanding of all aspects of the material covered by the schedule. The schedule is designed to be a constant iterative process to promote maximum learning that builds on user feedback and models to ensure consistent real time high end performance that will continue to constantly increase overall learning efficiency and user experience without increasing time expenditure or user effort during the actual sessions. The main goal of the scheduling is to provide the most efficient and effective plan for knowledge assimilation with the lowest impact of potential mental burnout or any other negative effects associated with long term periods of learning to ensure all gains are maximized and consistent across all session types. This also promotes efficient long term information retention and quick access to information with minimum stress factors involved to create the optimal state of long term performance and growth in all fields covered by the schedule. It is also easy to implement live in real time sessions by keeping all models and implementation straightforward with easy to use changes implemented on demand to instantly shift focus as the user requires without interrupting workflow to the greatest degree possible. This is accomplished using a range of different proven techniques to streamline the user experience during all live training and interactive study sessions. All the processes are designed to be a simple streamlined learning process that is always focused on continuous improvement based on the user interactions. It is also built with the consideration that it will be used by many users across many different educational and professional fields and is always focused on real world applications that promote actual skill building to address real world situations rather than simply memorizing information for test scores that are often not useful in the long run. This ensures that the user is not simply learning but building strong long term skills that will promote actual problem solving in any context and creates a more enriched life with enhanced cognitive capabilities and skill sets. This overall will create an enhanced experience that will enhance overall life success. Models will constantly adjust all elements based on consistent analysis of each session and make the changes live to maintain the optimal level of engagement to avoid the user falling behind or becoming fatigued during the course of each session. The session topics are preselected but will be immediately changed based on the user activity and learning pace. The models will track this real time and then make all needed adjustments. These changes will immediately be reflected in the session for the user to proceed forward and ensure the learning stays at a consistent level. This is designed to maximize cognitive function without ever becoming overwhelmed and to promote a continued positive study environment that the user feels in control of as they improve and work towards long term success and achieve consistent growth. The changes can also be manually implemented to create complete control of the learning session. The goal is to make this a custom personal experience that creates long term benefits. All resources and session types are also immediately adapted to the students performance in real time and are constantly adjusted to the appropriate cognitive level. The difficulty may be also manually adjusted and the model will respond accordingly to promote the correct mental engagement and avoid mental fatigue which could slow down the learning process. This also creates a sense of continuous growth which is important to keep the student motivated. The entire goal is create a long term positive experience with real results that can be constantly tracked and show improvement across the board. Long term success in any endeavor requires consistency and creating the correct habits and the schedule focuses on this as well to create a consistent learning approach with real and consistent positive feedback."}]},"2025-04-01 19:24:17.546 UTC","2025-04-01 19:24:17.546 UTC"]
2025-04-01T19:24:19.974Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["fb31a1cb-49a7-46cc-8ae4-5d113c18b141",1,0]
2025-04-01T19:24:20.284Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [5,0]
2025-04-01T19:24:20.530Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["e073f6b8-5fbd-41c5-b4d3-9e9b56338a3c",0]
2025-04-01T19:24:20.779Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:24:20.781Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:24:20.782Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: fb31a1cb-49a7-46cc-8ae4-5d113c18b141
2025-04-01T19:24:20.830Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:24:20.830Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:24:20.832Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:20.833Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:21.404Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["fb31a1cb-49a7-46cc-8ae4-5d113c18b141"]
2025-04-01T19:24:21.406Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:24:21.406Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 9
2025-04-01T19:24:23.394Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 9
2025-04-01T19:24:23.962Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:24:23.963Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:24.207Z info [C -> Context.<anonymous>]: Test user created with id: 2334cfc0-f958-408b-8545-f1a6f421e451
2025-04-01T19:24:24.209Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:24.463Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:24.464Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 10
2025-04-01T19:24:24.969Z info [C -> Context.<anonymous>]: Test study plan created with id: 10
2025-04-01T19:24:24.973Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:24.975Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:25.293Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["fb31a1cb-49a7-46cc-8ae4-5d113c18b141"]
2025-04-01T19:24:25.298Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule fb31a1cb-49a7-46cc-8ae4-5d113c18b141: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:25.299Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T19:24:25.303Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:27.784Z info [C -> Context.<anonymous>]: Test user created: fafd7ddd-e43e-4626-9d39-db1e41de7125
2025-04-01T19:24:27.786Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:29.847Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:29.849Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-01T19:24:30.964Z info [C -> Context.<anonymous>]: Study plan created: 11
2025-04-01T19:24:30.966Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:24:30.967Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:24:30.967Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:24:30.968Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:24:30.969Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:24:37.204Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:24:37.205Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:24:37.207Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:24:37.208Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:24:37.479Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:24:37.727Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:24:37.975Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["4392a08b-fc9f-4a5d-9e70-ce1e62126b6a",11,"fafd7ddd-e43e-4626-9d39-db1e41de7125","DAILY",1,"Introduction to the Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Study Session 1 - Fundamentals of [Subject Area 1, e.g., Programming/Math/History ] and Basic Concepts. Focus on understanding key terminology and foundational principles. Start with chapter 1 of textbook X.  Review online resources A and B as supplementary material.  Practice problem set 1 and 2. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes.  Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain.  Hydrate properly. Make sure lighting in your study area is conducive to learning.  Minimize distraction by using noise cancelling headphones if possible.  Communicate with housemates to not disturb study area during study sessions.  Keep an agenda. Mark off completed items in agenda."},{"time":"11:30 AM - 1:30 PM","type":"Lecture/Study Session 2 - Continuation of Fundamentals of [Subject Area 1].  Delve deeper into the topics introduced in the morning session. Chapter 2 of textbook X.  Review online resource C. Work on problem set 3 and 4.  Reflect on the morning session and clarify any doubts through further research or consulting with peers/instructors. Work on any assigned readings. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."},{"time":"2:30 PM - 4:30 PM","type":"Lecture/Study Session 3 - Begin Introduction to [Subject Area 2, e.g., Physics/Statistics/Literature]. Start with an overview of the subject matter and its relevance. Chapter 1 of Textbook Y. Review online resource D. Work on problem set 1 and 2. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."},{"time":"5:00 PM - 7:00 PM","type":"Lecture/Study Session 4 - Deep Dive into [Subject Area 2].  Explore specific topics and concepts in detail. Chapter 2 of Textbook Y. Review online resource E. Work on problem set 3 and 4. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to the Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Study Session 1 - Fundamentals of [Subject Area 1, e.g., Programming/Math/History ] and Basic Concepts. Focus on understanding key terminology and foundational principles. Start with chapter 1 of textbook X.  Review online resources A and B as supplementary material.  Practice problem set 1 and 2. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes.  Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain.  Hydrate properly. Make sure lighting in your study area is conducive to learning.  Minimize distraction by using noise cancelling headphones if possible.  Communicate with housemates to not disturb study area during study sessions.  Keep an agenda. Mark off completed items in agenda."},{"time":"11:30 AM - 1:30 PM","type":"Lecture/Study Session 2 - Continuation of Fundamentals of [Subject Area 1].  Delve deeper into the topics introduced in the morning session. Chapter 2 of textbook X.  Review online resource C. Work on problem set 3 and 4.  Reflect on the morning session and clarify any doubts through further research or consulting with peers/instructors. Work on any assigned readings. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."},{"time":"2:30 PM - 4:30 PM","type":"Lecture/Study Session 3 - Begin Introduction to [Subject Area 2, e.g., Physics/Statistics/Literature]. Start with an overview of the subject matter and its relevance. Chapter 1 of Textbook Y. Review online resource D. Work on problem set 1 and 2. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."},{"time":"5:00 PM - 7:00 PM","type":"Lecture/Study Session 4 - Deep Dive into [Subject Area 2].  Explore specific topics and concepts in detail. Chapter 2 of Textbook Y. Review online resource E. Work on problem set 3 and 4. Check definitions of key terms and definitions. Review slides if provided. Answer discussion questions provided by instructor, if any. Take detailed notes. Take a 5 minute break every 25 minutes to refocus attention. Look away from screen and stretch to avoid eye strain. Hydrate properly. Make sure lighting in your study area is conducive to learning. Minimize distraction by using noise cancelling headphones if possible. Communicate with housemates to not disturb study area during study sessions. Keep an agenda. Mark off completed items in agenda."}]},"2025-04-01 19:24:37.210 UTC","2025-04-01 19:24:37.210 UTC"]
2025-04-01T19:24:38.301Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["4392a08b-fc9f-4a5d-9e70-ce1e62126b6a",1,0]
2025-04-01T19:24:38.547Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [11,0]
2025-04-01T19:24:38.793Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["fafd7ddd-e43e-4626-9d39-db1e41de7125",0]
2025-04-01T19:24:39.048Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:24:39.049Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:24:39.049Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 4392a08b-fc9f-4a5d-9e70-ce1e62126b6a
2025-04-01T19:24:39.051Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:39.052Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:39.323Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["4392a08b-fc9f-4a5d-9e70-ce1e62126b6a"]
2025-04-01T19:24:39.324Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:24:39.324Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 11
2025-04-01T19:24:41.314Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 11
2025-04-01T19:24:41.882Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:24:41.884Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:42.189Z info [C -> Context.<anonymous>]: Test user created: d5846e1c-3210-4221-a5d7-381fd461bcf5
2025-04-01T19:24:42.191Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:43.609Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:43.611Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-01T19:24:44.489Z info [C -> Context.<anonymous>]: Study plan created: 12
2025-04-01T19:24:44.491Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 12
2025-04-01T19:24:47.411Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:24:47.412Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:24:47.413Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:24:47.414Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:24:47.414Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:24:50.896Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:24:50.897Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:24:50.898Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:24:50.898Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:24:51.152Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:24:51.399Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["d30ec12d-e857-4d55-b8da-00d0bd017cbb",12,"d5846e1c-3210-4221-a5d7-381fd461bcf5","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Fundamentals of Physics","Introduction to Chemistry"],"type":"Reading & Note-taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Essentials","Reading Comprehension"],"type":"Exercises & Review"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","World History Overview"],"type":"Documentary & Discussion"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Science","time":"11:00 AM - 12:30 PM","topics":["Fundamentals of Physics","Introduction to Chemistry"],"type":"Reading & Note-taking"},{"subject":"English","time":"2:00 PM - 3:30 PM","topics":["Grammar Essentials","Reading Comprehension"],"type":"Exercises & Review"},{"subject":"History","time":"4:00 PM - 5:30 PM","topics":["Ancient Civilizations","World History Overview"],"type":"Documentary & Discussion"}]},"2025-04-01 19:24:50.900 UTC","2025-04-01 19:24:50.900 UTC"]
2025-04-01T19:24:51.648Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["d30ec12d-e857-4d55-b8da-00d0bd017cbb",1,0]
2025-04-01T19:24:51.917Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [12,0]
2025-04-01T19:24:52.224Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d5846e1c-3210-4221-a5d7-381fd461bcf5",0]
2025-04-01T19:24:52.543Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:24:52.545Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:24:52.546Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: d30ec12d-e857-4d55-b8da-00d0bd017cbb
2025-04-01T19:24:52.548Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:24:52.548Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:24:52.795Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:24:53.046Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["d30ec12d-e857-4d55-b8da-00d0bd017cbb"]
2025-04-01T19:24:53.047Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:24:53.048Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 12
2025-04-01T19:24:54.832Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 12
2025-04-01T19:24:55.392Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:24:55.394Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:24:55.633Z info [C -> Context.<anonymous>]: Test user created: 4ffc5b8c-3e93-4e22-a359-86dcfff7d424
2025-04-01T19:24:55.635Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:24:57.155Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:24:57.157Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 13
2025-04-01T19:24:57.913Z info [C -> Context.<anonymous>]: Study plan created: 13
2025-04-01T19:24:57.914Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:24:57.914Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:24:57.915Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:24:57.916Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:24:57.917Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:01.955Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:01.956Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:01.957Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:01.958Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:02.260Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:02.507Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["1bda2e0e-77f1-48ea-b5bc-b3605cbba696",13,"4ffc5b8c-3e93-4e22-a359-86dcfff7d424","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1: Foundational Principles in [Subject Name]. Review key definitions and historical context. Resources: Textbook Chapter 1, Lecture Slides Week 1, relevant online articles or tutorials as specified by instructor or curriculum guidelines."},{"time":"11:30 AM - 1:00 PM","type":"Problem-Solving/Application Session 1: Practice applying foundational concepts to simple problems or case studies. Resources: Problem sets from textbook, online practice quizzes, example solutions provided by instructor."},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Session 2: Deep dive into [Specific Topic Area 1 within Subject]. Explore related theories and models. Resources: Textbook Chapter 2, supplemental readings from academic journals or credible online sources."},{"time":"4:30 PM - 6:00 PM","type":"Review and Summarization: Consolidate learning from the day's sessions. Create summary notes, mind maps, or flashcards. Resources: Notes from lectures and readings, online note-taking tools, personal study materials."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session 1: Foundational Principles in [Subject Name]. Review key definitions and historical context. Resources: Textbook Chapter 1, Lecture Slides Week 1, relevant online articles or tutorials as specified by instructor or curriculum guidelines."},{"time":"11:30 AM - 1:00 PM","type":"Problem-Solving/Application Session 1: Practice applying foundational concepts to simple problems or case studies. Resources: Problem sets from textbook, online practice quizzes, example solutions provided by instructor."},{"time":"2:00 PM - 4:00 PM","type":"Lecture/Reading Session 2: Deep dive into [Specific Topic Area 1 within Subject]. Explore related theories and models. Resources: Textbook Chapter 2, supplemental readings from academic journals or credible online sources."},{"time":"4:30 PM - 6:00 PM","type":"Review and Summarization: Consolidate learning from the day's sessions. Create summary notes, mind maps, or flashcards. Resources: Notes from lectures and readings, online note-taking tools, personal study materials."}]},"2025-04-01 19:25:01.959 UTC","2025-04-01 19:25:01.959 UTC"]
2025-04-01T19:25:02.772Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["1bda2e0e-77f1-48ea-b5bc-b3605cbba696",1,0]
2025-04-01T19:25:03.019Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [13,0]
2025-04-01T19:25:03.265Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["4ffc5b8c-3e93-4e22-a359-86dcfff7d424",0]
2025-04-01T19:25:03.514Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:03.515Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:03.516Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 1bda2e0e-77f1-48ea-b5bc-b3605cbba696
2025-04-01T19:25:03.517Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:25:03.518Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:25:03.767Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["1bda2e0e-77f1-48ea-b5bc-b3605cbba696"]
2025-04-01T19:25:03.768Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:25:03.769Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 13
2025-04-01T19:25:05.347Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 13
2025-04-01T19:25:05.602Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:25:05.604Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:25:05.844Z info [C -> Context.<anonymous>]: Test user created: 9cdc48a6-8e83-4f3d-8e03-f10ba2ca0986
2025-04-01T19:25:05.846Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:25:07.153Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:25:07.154Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 14
2025-04-01T19:25:07.970Z info [C -> Context.<anonymous>]: Study plan created: 14
2025-04-01T19:25:07.972Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:07.973Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:07.973Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:07.974Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:07.974Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:15.166Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:15.167Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:15.168Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:15.169Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:15.468Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:25:15.716Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:15.981Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["76c70ba9-2482-453a-a289-5bfdacea8479",14,"9cdc48a6-8e83-4f3d-8e03-f10ba2ca0986","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session:Foundations of Calculus I: Limits and continuity.. Concepts and terminology. Basic properties.Examples to increase comprehension.Exercises to sharpen understanding.. Review: Limits, continuity, intermediate and extreme value theorem.. Calculus: Early Transcendentals by James Stewart,Chapters 1 & 2,Khan Academy modules on Limits and Continuity,MIT OpenCourseWare Single Variable Calculus (Lectures 1-5). Topics: Definition of a Limit, Properties of Limits, One-Sided Limits, Continuity, Intermediate Value Theorem.. Focus: Master the foundational concepts of limits and continuity.. Notes: Ensure a solid grasp on limit laws and the definition of continuity. Pay special attention to the Intermediate Value Theorem and its applications. Practice a variety of problems to build confidence. Utilize Khan Academy videos and practice exercises for reinforcement. Attend office hours or seek help with any concepts that remain unclear. Take short breaks every 30-45 minutes to maintain focus and prevent burnout.. Resources: Textbook, Khan Academy, MIT OCW lectures"},{"time":"11:30 AM - 1:30 PM","type":"Problem-Solving Session: Linear Algebra I: Linear Equations and Matrices.. Concepts and Terminology. Solving Linear Systems, Matrices, Determinants, Vector Spaces. Practice solving linear systems. Examples to increase comprehension. Exercises to sharpen understanding.. Gilbert Strang's Linear Algebra course, MIT OpenCourseWare.. Topics: Systems of Linear Equations, Gaussian Elimination, Matrix Operations, Determinants.. Focus: Develop proficiency in solving linear systems and understanding matrix operations.. Notes: Practice Gaussian elimination and matrix manipulation until it becomes second nature. Understand the significance of determinants and their role in solving linear systems. Explore geometric interpretations of linear algebra concepts to deepen understanding. Work through problems from Gilbert Strang's textbook and MIT OCW problem sets. Form a study group to discuss challenging problems and share insights. Resources: Textbook, MIT OCW, Strang's Linear Algebra course"},{"time":"2:30 PM - 4:30 PM","type":"Introduction to Physics I: Mechanics.. Concepts and terminology: kinematics, Newton's laws, work, energy, momentum. Examples to increase comprehension. Exercises to sharpen understanding.. Review: Kinematics in One and Two Dimensions, Newton's Laws of Motion, Work and Energy.. University Physics by Young and Freedman, MIT OpenCourseWare 8.01 Physics I.. Topics: Kinematics, Newton's Laws, Work and Energy, Conservation Laws.. Focus: Understand basic mechanics principles and problem-solving techniques.. Notes: Focus on free-body diagrams and applying Newton's laws to solve problems. Grasp the concepts of work, energy, and the conservation laws. Solve a variety of problems from the textbook and MIT OCW. Pay close attention to units and dimensions in problem-solving. Participate in online forums or discussion groups to clarify doubts and learn from others.Resources: Textbook, MIT OCW lectures"},{"time":"5:00 PM - 7:00 PM","type":"Introduction to Computer Science I: Programming Fundamentals.. Concepts and terminology: data types, control structures, functions. Examples to increase comprehension. Exercises to sharpen understanding.. Introduction to Programming Using Python by Liang, Introduction to Computation and Programming Using Python by Guttag.. Topics: Variables, Data Types, Control Flow, Functions, Basic I/O.. Focus: Learn basic programming concepts and syntax in Python.. Notes: Practice writing simple programs to reinforce your understanding of each concept. Pay attention to data types and control flow structures. Utilize online resources such as Stack Overflow and Python documentation. Complete coding exercises and projects to build practical skills. Participate in coding communities or forums to ask questions and learn from others.Resources: Textbook, Online Python documentation, Coding exercise platforms"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension Session:Foundations of Calculus I: Limits and continuity.. Concepts and terminology. Basic properties.Examples to increase comprehension.Exercises to sharpen understanding.. Review: Limits, continuity, intermediate and extreme value theorem.. Calculus: Early Transcendentals by James Stewart,Chapters 1 & 2,Khan Academy modules on Limits and Continuity,MIT OpenCourseWare Single Variable Calculus (Lectures 1-5). Topics: Definition of a Limit, Properties of Limits, One-Sided Limits, Continuity, Intermediate Value Theorem.. Focus: Master the foundational concepts of limits and continuity.. Notes: Ensure a solid grasp on limit laws and the definition of continuity. Pay special attention to the Intermediate Value Theorem and its applications. Practice a variety of problems to build confidence. Utilize Khan Academy videos and practice exercises for reinforcement. Attend office hours or seek help with any concepts that remain unclear. Take short breaks every 30-45 minutes to maintain focus and prevent burnout.. Resources: Textbook, Khan Academy, MIT OCW lectures"},{"time":"11:30 AM - 1:30 PM","type":"Problem-Solving Session: Linear Algebra I: Linear Equations and Matrices.. Concepts and Terminology. Solving Linear Systems, Matrices, Determinants, Vector Spaces. Practice solving linear systems. Examples to increase comprehension. Exercises to sharpen understanding.. Gilbert Strang's Linear Algebra course, MIT OpenCourseWare.. Topics: Systems of Linear Equations, Gaussian Elimination, Matrix Operations, Determinants.. Focus: Develop proficiency in solving linear systems and understanding matrix operations.. Notes: Practice Gaussian elimination and matrix manipulation until it becomes second nature. Understand the significance of determinants and their role in solving linear systems. Explore geometric interpretations of linear algebra concepts to deepen understanding. Work through problems from Gilbert Strang's textbook and MIT OCW problem sets. Form a study group to discuss challenging problems and share insights. Resources: Textbook, MIT OCW, Strang's Linear Algebra course"},{"time":"2:30 PM - 4:30 PM","type":"Introduction to Physics I: Mechanics.. Concepts and terminology: kinematics, Newton's laws, work, energy, momentum. Examples to increase comprehension. Exercises to sharpen understanding.. Review: Kinematics in One and Two Dimensions, Newton's Laws of Motion, Work and Energy.. University Physics by Young and Freedman, MIT OpenCourseWare 8.01 Physics I.. Topics: Kinematics, Newton's Laws, Work and Energy, Conservation Laws.. Focus: Understand basic mechanics principles and problem-solving techniques.. Notes: Focus on free-body diagrams and applying Newton's laws to solve problems. Grasp the concepts of work, energy, and the conservation laws. Solve a variety of problems from the textbook and MIT OCW. Pay close attention to units and dimensions in problem-solving. Participate in online forums or discussion groups to clarify doubts and learn from others.Resources: Textbook, MIT OCW lectures"},{"time":"5:00 PM - 7:00 PM","type":"Introduction to Computer Science I: Programming Fundamentals.. Concepts and terminology: data types, control structures, functions. Examples to increase comprehension. Exercises to sharpen understanding.. Introduction to Programming Using Python by Liang, Introduction to Computation and Programming Using Python by Guttag.. Topics: Variables, Data Types, Control Flow, Functions, Basic I/O.. Focus: Learn basic programming concepts and syntax in Python.. Notes: Practice writing simple programs to reinforce your understanding of each concept. Pay attention to data types and control flow structures. Utilize online resources such as Stack Overflow and Python documentation. Complete coding exercises and projects to build practical skills. Participate in coding communities or forums to ask questions and learn from others.Resources: Textbook, Online Python documentation, Coding exercise platforms"}]},"2025-04-01 19:25:15.171 UTC","2025-04-01 19:25:15.171 UTC"]
2025-04-01T19:25:16.289Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["76c70ba9-2482-453a-a289-5bfdacea8479",1,0]
2025-04-01T19:25:16.543Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [14,0]
2025-04-01T19:25:16.789Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["9cdc48a6-8e83-4f3d-8e03-f10ba2ca0986",0]
2025-04-01T19:25:17.037Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:17.039Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:17.040Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 76c70ba9-2482-453a-a289-5bfdacea8479
2025-04-01T19:25:17.043Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:25:17.043Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:25:17.316Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["76c70ba9-2482-453a-a289-5bfdacea8479"]
2025-04-01T19:25:17.318Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:25:17.319Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 14
2025-04-01T19:25:19.202Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 14
2025-04-01T19:25:19.700Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:25:19.702Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:25:19.974Z info [C -> Context.<anonymous>]: Test user created: 818b388d-311c-4ef4-9f94-9905f0dc511e
2025-04-01T19:25:19.976Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:25:21.376Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:25:21.377Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 15
2025-04-01T19:25:22.330Z info [C -> Context.<anonymous>]: Study plan created: 15
2025-04-01T19:25:22.332Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:22.334Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:22.335Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:22.336Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:22.338Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:25.506Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:25.507Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:25.508Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:25.508Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:25.756Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:26.015Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["30c37231-c135-49fd-9ba0-e230b1620dd8",15,"818b388d-311c-4ef4-9f94-9905f0dc511e","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Lecture & Problem Solving"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Lecture"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Lecture & Problem Solving"}]},"2025-04-01 19:25:25.511 UTC","2025-04-01 19:25:25.511 UTC"]
2025-04-01T19:25:26.323Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["30c37231-c135-49fd-9ba0-e230b1620dd8",1,0]
2025-04-01T19:25:26.570Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [15,0]
2025-04-01T19:25:26.834Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["818b388d-311c-4ef4-9f94-9905f0dc511e",0]
2025-04-01T19:25:27.081Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:27.082Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:27.083Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 30c37231-c135-49fd-9ba0-e230b1620dd8
2025-04-01T19:25:27.083Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 15
2025-04-01T19:25:29.294Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:29.295Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:29.297Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:29.298Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:29.300Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:32.532Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:32.533Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:32.534Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:32.534Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:32.781Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:25:33.081Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:33.333Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["0041232e-3a86-44e5-9fa4-3e548d16a0fb",15,"818b388d-311c-4ef4-9f94-9905f0dc511e","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension and Note-Taking Session - Concept 1 and 2 Introduction and Detailed Explanation. Focus on understanding fundamental principles and terminology. Refer to chapter 1 and 2 of specified textbook . Create mindmaps or concept maps to visualize connections between different ideas and facts in this field of study. Include example real-world scenarios to each mindmap created to improve retention for real-world applications of these concepts. Attempt to write and rewrite concepts in own words for improved understanding and retention."},{"time":"1:00 PM - 3:00 PM","type":"Practice Problems/Application Focus Session - Solve practice problems related to concept 1 and 2. Emphasize problem-solving strategies and critical thinking. Practice applying concepts and principles to realistic situations. Begin practice with problems from end of chapter exercises. Also practice using resources that were discussed in lectures (e.g. reference website or textbooks). Continue application of mindmaps in this session to relate information together to apply concepts more easily in real-world case studies. Focus on working through each problem step-by-step to relate it to lecture and mindmap concepts."},{"time":"6:00 PM - 8:00 PM","type":"Review and Summarization/Active Recall Focus Session - Review concepts and notes from the day. Summarize key points and identify areas needing further clarification. Review mindmaps created for the day. Repeat writing and rewriting of concepts in own words for improved understanding and retention. Apply active recall techniques by challenging yourself with questions regarding the material covered during the day. Also challenge yourself to relate lecture concepts to real-world applications. Do this by listing example scenarios for each concept that may appear in reality."}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Comprehension and Note-Taking Session - Concept 1 and 2 Introduction and Detailed Explanation. Focus on understanding fundamental principles and terminology. Refer to chapter 1 and 2 of specified textbook . Create mindmaps or concept maps to visualize connections between different ideas and facts in this field of study. Include example real-world scenarios to each mindmap created to improve retention for real-world applications of these concepts. Attempt to write and rewrite concepts in own words for improved understanding and retention."},{"time":"1:00 PM - 3:00 PM","type":"Practice Problems/Application Focus Session - Solve practice problems related to concept 1 and 2. Emphasize problem-solving strategies and critical thinking. Practice applying concepts and principles to realistic situations. Begin practice with problems from end of chapter exercises. Also practice using resources that were discussed in lectures (e.g. reference website or textbooks). Continue application of mindmaps in this session to relate information together to apply concepts more easily in real-world case studies. Focus on working through each problem step-by-step to relate it to lecture and mindmap concepts."},{"time":"6:00 PM - 8:00 PM","type":"Review and Summarization/Active Recall Focus Session - Review concepts and notes from the day. Summarize key points and identify areas needing further clarification. Review mindmaps created for the day. Repeat writing and rewriting of concepts in own words for improved understanding and retention. Apply active recall techniques by challenging yourself with questions regarding the material covered during the day. Also challenge yourself to relate lecture concepts to real-world applications. Do this by listing example scenarios for each concept that may appear in reality."}]},"2025-04-01 19:25:32.537 UTC","2025-04-01 19:25:32.537 UTC"]
2025-04-01T19:25:33.595Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["0041232e-3a86-44e5-9fa4-3e548d16a0fb",1,0]
2025-04-01T19:25:33.843Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [15,0]
2025-04-01T19:25:34.105Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["818b388d-311c-4ef4-9f94-9905f0dc511e",0]
2025-04-01T19:25:34.352Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:34.354Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:34.355Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 0041232e-3a86-44e5-9fa4-3e548d16a0fb
2025-04-01T19:25:34.357Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:25:34.358Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:25:34.607Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["30c37231-c135-49fd-9ba0-e230b1620dd8"]
2025-04-01T19:25:34.608Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:25:34.609Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 15
2025-04-01T19:25:36.520Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 15
2025-04-01T19:25:37.075Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:25:37.076Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:25:37.315Z info [C -> Context.<anonymous>]: Test user created: 6090aac9-049f-41e2-bba7-e75f6a7bdef1
2025-04-01T19:25:37.315Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:25:38.713Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:25:38.714Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 16
2025-04-01T19:25:39.580Z info [C -> Context.<anonymous>]: Study plan created: 16
2025-04-01T19:25:39.582Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:39.583Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:39.584Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:39.585Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:39.586Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:45.019Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:45.021Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:45.021Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:45.022Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:45.369Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:45.617Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["0ea6afd9-33b8-448c-a2a9-ff76065521c4",16,"6090aac9-049f-41e2-bba7-e75f6a7bdef1","DAILY",1,"Introduction to Core Concepts",[],[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session: Foundational Concepts in the subject area chosen for 90 days of focus learning.  Establish a base level of knowledge. Introduction and Overview will be addressed here. Also why the subject matter is important and beneficial to the learning process. Establish a timeline for the 90 days of learning. Understand the basics of the subject matter chosen. Also, outline core objectives to be obtained at the end of the 90 day time period.  Create milestones to be achieved over 90 days with completion date goals to hit. The subject matter and topics chosen should be listed here as well. Finally, understand the need to learn the core principles of the subject matter chosen over the next 90 days of dedicated studies.  This session must include dedicated focus with limited to no interruptions as a best practice!  A successful session means you are prepared for the next steps required to achieve the overall learning goals.  Topics may include overview, history, key definitions and terminologies. For resources use textbooks and online articles from reputable organizations and educational institutions.  Create a list of areas where help may be needed to stay on track over the next 90 days.  This will allow for adjustments as life dictates outside of the learning goals.  List all resources being used. "},{"time":"2:00 PM - 4:00 PM","type":"Problem-Solving Session: Review and discuss any questions/topics in order to gain a better understanding. Then come up with real-life problems to solve using what has been learned.  Create a list of issues that may be encountered as you move forward over the next 90 days.  It is not important that these issues are resolved, but rather addressed and noted so that they may be revisited later and addressed. Create a support group for the learning that is being taken on.  This should include individuals with vast experience in the subject matter. Also, those that have just begun their learning journey so that new ideas can be formulated.  This can be done in person or remotely via forums and social media.  Use any resources available and document them.  Also, it is important that all resources are being used properly.  If there are time constraints, this should be addressed at this time and solutions sought out.  Understanding where you are is just as important as where you want to go.  So take time to reflect on progress and challenges.  Finally, stay organized.  This will give you a better picture of what is going on around you, not just in the learning process. "}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"time":"9:00 AM - 11:00 AM","type":"Lecture/Reading Session: Foundational Concepts in the subject area chosen for 90 days of focus learning.  Establish a base level of knowledge. Introduction and Overview will be addressed here. Also why the subject matter is important and beneficial to the learning process. Establish a timeline for the 90 days of learning. Understand the basics of the subject matter chosen. Also, outline core objectives to be obtained at the end of the 90 day time period.  Create milestones to be achieved over 90 days with completion date goals to hit. The subject matter and topics chosen should be listed here as well. Finally, understand the need to learn the core principles of the subject matter chosen over the next 90 days of dedicated studies.  This session must include dedicated focus with limited to no interruptions as a best practice!  A successful session means you are prepared for the next steps required to achieve the overall learning goals.  Topics may include overview, history, key definitions and terminologies. For resources use textbooks and online articles from reputable organizations and educational institutions.  Create a list of areas where help may be needed to stay on track over the next 90 days.  This will allow for adjustments as life dictates outside of the learning goals.  List all resources being used. "},{"time":"2:00 PM - 4:00 PM","type":"Problem-Solving Session: Review and discuss any questions/topics in order to gain a better understanding. Then come up with real-life problems to solve using what has been learned.  Create a list of issues that may be encountered as you move forward over the next 90 days.  It is not important that these issues are resolved, but rather addressed and noted so that they may be revisited later and addressed. Create a support group for the learning that is being taken on.  This should include individuals with vast experience in the subject matter. Also, those that have just begun their learning journey so that new ideas can be formulated.  This can be done in person or remotely via forums and social media.  Use any resources available and document them.  Also, it is important that all resources are being used properly.  If there are time constraints, this should be addressed at this time and solutions sought out.  Understanding where you are is just as important as where you want to go.  So take time to reflect on progress and challenges.  Finally, stay organized.  This will give you a better picture of what is going on around you, not just in the learning process. "}]},"2025-04-01 19:25:45.024 UTC","2025-04-01 19:25:45.024 UTC"]
2025-04-01T19:25:45.872Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["0ea6afd9-33b8-448c-a2a9-ff76065521c4",1,0]
2025-04-01T19:25:46.188Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [16,0]
2025-04-01T19:25:46.435Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["6090aac9-049f-41e2-bba7-e75f6a7bdef1",0]
2025-04-01T19:25:46.683Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:46.684Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:46.685Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: 0ea6afd9-33b8-448c-a2a9-ff76065521c4
2025-04-01T19:25:46.685Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 16
2025-04-01T19:25:49.116Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:49.117Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:49.118Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:49.119Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:49.119Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:25:52.293Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:25:52.295Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:25:52.296Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:25:52.297Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:25:52.647Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:25:52.903Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T19:25:53.255Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("id","studyPlanId","userId","type","dayNumber","focus","targets","sessions","breaks","revision","metadata","dailySchedule","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."ScheduleType"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."Schedule"."id", params: ["dfe57ee6-b28a-4543-8661-cc042af66f8a",16,"6090aac9-049f-41e2-bba7-e75f6a7bdef1","DAILY",1,"Introduction to Core Concepts",[],[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Reading & Problem Solving"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Theory & Examples"},{"subject":"English","time":"4:00 PM - 5:00 PM","topics":["Grammar Basics","Essay Writing"],"type":"Review & Exercises"}],{},{},{"currentDay":1,"totalDays":90,"remainingDays":89,"progress":"1.11","nextDay":2,"previousDay":null},{"dayNumber":1,"focus":"Introduction to Core Concepts","sessions":[{"subject":"Mathematics","time":"9:00 AM - 10:30 AM","topics":["Basic Algebra","Introduction to Calculus"],"type":"Lecture & Practice"},{"subject":"Computer Science","time":"11:00 AM - 12:30 PM","topics":["Data Structures","Algorithms"],"type":"Reading & Problem Solving"},{"subject":"Physics","time":"2:00 PM - 3:30 PM","topics":["Mechanics","Thermodynamics"],"type":"Theory & Examples"},{"subject":"English","time":"4:00 PM - 5:00 PM","topics":["Grammar Basics","Essay Writing"],"type":"Review & Exercises"}]},"2025-04-01 19:25:52.300 UTC","2025-04-01 19:25:52.300 UTC"]
2025-04-01T19:25:53.503Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: ["dfe57ee6-b28a-4543-8661-cc042af66f8a",1,0]
2025-04-01T19:25:53.754Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [16,0]
2025-04-01T19:25:54.009Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["6090aac9-049f-41e2-bba7-e75f6a7bdef1",0]
2025-04-01T19:25:54.255Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T19:25:54.256Z info [C -> ScheduleService.generateDaySchedule]: Saved Schedule:
2025-04-01T19:25:54.257Z info [C -> ScheduleService.generateDaySchedule]: Day 1 schedule saved with id: dfe57ee6-b28a-4543-8661-cc042af66f8a
2025-04-01T19:25:54.258Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:25:54.258Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:25:54.508Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ea6afd9-33b8-448c-a2a9-ff76065521c4"]
2025-04-01T19:25:54.509Z info [C -> ScheduleService.deleteSchedule]: Deleted Schedule:
2025-04-01T19:25:54.510Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 16
2025-04-01T19:25:56.374Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 16
2025-04-01T19:25:56.866Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:25:56.868Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:25:57.107Z info [C -> Context.<anonymous>]: Test user created: 0c2b5fe5-64d7-4585-9bad-5333920f3c06
2025-04-01T19:25:57.109Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:25:58.479Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:25:58.480Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 17
2025-04-01T19:25:59.349Z info [C -> Context.<anonymous>]: Study plan created: 17
2025-04-01T19:25:59.350Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:25:59.351Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:25:59.352Z info [C -> ScheduleService.generateDaySchedule]: Generated Metadata:
2025-04-01T19:25:59.353Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:25:59.354Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:26:03.301Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:26:03.302Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:26:03.303Z info [C -> ScheduleService.generateDaySchedule]: Generated Content:
2025-04-01T19:26:03.303Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:26:03.307Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 - 11:00 AM",
        type: "Lecture/Reading Session: Introduction to [Subject Area] Fundamentals. Core principles and foundational theories. Recommended reading: Chapter 1 of [Textbook]. Online resources: [Link to relevant website]. Topics: Basic terminology, historical context, key figures, overview of core concepts. Resources: Textbook Chapter 1, Online Resource [link]. Subject: Foundations"
      },
      {
        time: "11:15 AM - 12:45 PM",
        type: "Problem-Solving Session: Simple practice problems relating to the morning's material. Resources: Practice problem set #1. Topics: Application of basic formulas, initial problem-solving strategies. Subject: Practice Problems"
      },
      {
        time: "2:00 - 4:00 PM",
        type: "Concept Review Session: Revisit and reinforce core concepts. Resources: Lecture notes, textbook highlights. Topics: Deep dive into challenging concepts, Q&A session. Subject: Core Review"
      },
      {
        time: "4:15 - 5:15 PM",
        type: "Preview Session: Preparation for tomorrow's material. Resources: Chapter 2 preview, online tutorials. Topics: Skim upcoming topics, identify key questions. Subject: Preview"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 - 11:00 AM",
          type: "Lecture/Reading Session: Introduction to [Subject Area] Fundamentals. Core principles and foundational theories. Recommended reading: Chapter 1 of [Textbook]. Online resources: [Link to relevant website]. Topics: Basic terminology, historical context, key figures, overview of core concepts. Resources: Textbook Chapter 1, Online Resource [link]. Subject: Foundations"
        },
        {
          time: "11:15 AM - 12:45 PM",
          type: "Problem-Solving Session: Simple practice problems relating to the morning's material. Resources: Practice problem set #1. Topics: Application of basic formulas, initial problem-solving strategies. Subject: Practice Problems"
        },
        {
          time: "2:00 - 4:00 PM",
          type: "Concept Review Session: Revisit and reinforce core concepts. Resources: Lecture notes, textbook highlights. Topics: Deep dive into challenging concepts, Q&A session. Subject: Core Review"
        },
        {
          time: "4:15 - 5:15 PM",
          type: "Preview Session: Preparation for tomorrow's material. Resources: Chapter 2 preview, online tutorials. Topics: Skim upcoming topics, identify key questions. Subject: Preview"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 999999,
    userId: undefined,
    type: "DAILY",
    dayNumber: 1,
    focus: "Introduction to Core Concepts",
    targets: [],
    sessions: [
      {
        time: "9:00 - 11:00 AM",
        type: "Lecture/Reading Session: Introduction to [Subject Area] Fundamentals. Core principles and foundational theories. Recommended reading: Chapter 1 of [Textbook]. Online resources: [Link to relevant website]. Topics: Basic terminology, historical context, key figures, overview of core concepts. Resources: Textbook Chapter 1, Online Resource [link]. Subject: Foundations"
      },
      {
        time: "11:15 AM - 12:45 PM",
        type: "Problem-Solving Session: Simple practice problems relating to the morning's material. Resources: Practice problem set #1. Topics: Application of basic formulas, initial problem-solving strategies. Subject: Practice Problems"
      },
      {
        time: "2:00 - 4:00 PM",
        type: "Concept Review Session: Revisit and reinforce core concepts. Resources: Lecture notes, textbook highlights. Topics: Deep dive into challenging concepts, Q&A session. Subject: Core Review"
      },
      {
        time: "4:15 - 5:15 PM",
        type: "Preview Session: Preparation for tomorrow's material. Resources: Chapter 2 preview, online tutorials. Topics: Skim upcoming topics, identify key questions. Subject: Preview"
      }
    ],
    breaks: {},
    revision: {},
    metadata: {
      currentDay: 1,
      totalDays: 90,
      remainingDays: 89,
      progress: "1.11",
      nextDay: 2,
      previousDay: null
    },
    dailySchedule: {
      dayNumber: 1,
      focus: "Introduction to Core Concepts",
      sessions: [
        {
          time: "9:00 - 11:00 AM",
          type: "Lecture/Reading Session: Introduction to [Subject Area] Fundamentals. Core principles and foundational theories. Recommended reading: Chapter 1 of [Textbook]. Online resources: [Link to relevant website]. Topics: Basic terminology, historical context, key figures, overview of core concepts. Resources: Textbook Chapter 1, Online Resource [link]. Subject: Foundations"
        },
        {
          time: "11:15 AM - 12:45 PM",
          type: "Problem-Solving Session: Simple practice problems relating to the morning's material. Resources: Practice problem set #1. Topics: Application of basic formulas, initial problem-solving strategies. Subject: Practice Problems"
        },
        {
          time: "2:00 - 4:00 PM",
          type: "Concept Review Session: Revisit and reinforce core concepts. Resources: Lecture notes, textbook highlights. Topics: Deep dive into challenging concepts, Q&A session. Subject: Core Review"
        },
        {
          time: "4:15 - 5:15 PM",
          type: "Preview Session: Preparation for tomorrow's material. Resources: Chapter 2 preview, online tutorials. Topics: Skim upcoming topics, identify key questions. Subject: Preview"
        }
      ]
    },
+   studyPlan: {
+     create: StudyPlanCreateWithoutSchedulesInput | StudyPlanUncheckedCreateWithoutSchedulesInput,
+     connectOrCreate: StudyPlanCreateOrConnectWithoutSchedulesInput,
+     connect: StudyPlanWhereUniqueInput
+   }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `studyPlan` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:129:35)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:17)
2025-04-01T19:26:03.310Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:26:03.311Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:26:03.596Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ea6afd9-33b8-448c-a2a9-ff76065521c4"]
2025-04-01T19:26:03.599Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 0ea6afd9-33b8-448c-a2a9-ff76065521c4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:26:03.600Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:26:03.601Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:26:03.840Z info [C -> Context.<anonymous>]: Test user created: 2ce3397f-8a3a-4c92-a545-bb96b8c7e803
2025-04-01T19:26:03.841Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:26:05.145Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:26:05.146Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 18
2025-04-01T19:26:05.964Z info [C -> Context.<anonymous>]: Study plan created: 18
2025-04-01T19:26:05.966Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 18
2025-04-01T19:26:05.967Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 18
2025-04-01T19:26:10.821Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:26:10.821Z info [C -> ScheduleService.deleteSchedule]: Delete Schedule Request:
2025-04-01T19:26:11.068Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:26:11.380Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: ["0ea6afd9-33b8-448c-a2a9-ff76065521c4"]
2025-04-01T19:26:11.381Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 0ea6afd9-33b8-448c-a2a9-ff76065521c4: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:26:11.382Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:321:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T19:26:11.384Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:26:11.688Z info [C -> Context.<anonymous>]: Test user created: c011c05f-ff79-4a01-83b1-e597eb2012ec
2025-04-01T19:26:11.689Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:26:13.940Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:26:13.942Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 19
2025-04-01T19:26:15.317Z info [C -> Context.<anonymous>]: Study plan created: 19
2025-04-01T19:26:20.009Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:26:20.595Z info [C -> Context.<anonymous>]: Test user created: 932a46bb-eff1-4dfc-99f6-494657582314
2025-04-01T19:26:20.596Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:26:22.029Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:26:22.030Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 20
2025-04-01T19:26:22.833Z info [C -> Context.<anonymous>]: Study plan created: 20
2025-04-01T19:26:22.834Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 20
2025-04-01T19:26:30.148Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:26:30.409Z info [C -> Context.<anonymous>]: Test user created: 9abf41ec-dc1a-408a-b679-955993f4e26f
2025-04-01T19:26:30.410Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:26:32.046Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:26:32.047Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 21
2025-04-01T19:26:32.884Z info [C -> Context.<anonymous>]: Study plan created: 21
2025-04-01T19:26:32.885Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 21
2025-04-01T19:26:35.205Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 21
2025-04-01T19:26:35.206Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 21
2025-04-01T19:26:35.462Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 21: Study plan with id 21 not found
Error: Study plan with id 21 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T19:30:01.115Z info [C -> new]: Schedule Service initialized
2025-04-01T19:30:01.159Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:03.541Z info [C -> Context.<anonymous>]: Test user created with id: c5f7a64e-2ab1-47b7-9004-f0b591357378
2025-04-01T19:30:03.544Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:06.047Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:06.049Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 22
2025-04-01T19:30:07.210Z info [C -> Context.<anonymous>]: Test study plan created with id: 22
2025-04-01T19:30:07.213Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:30:07.215Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:30:07.216Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:30:07.217Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:30:12.039Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:30:12.040Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:30:12.040Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:30:14.033Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 22,
    userId: "c5f7a64e-2ab1-47b7-9004-f0b591357378",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session (Foundation Building): Begin with the foundational theories and principles underlying the subject of choice. For example (Maths, Physics, Chemistry, Engineering, Biology, Economics, Law, or Arts) (e.g., Calculus, Newtonian Mechanics, Organic Chemistry, etc.) This establishes a solid base for further learning. Focus on understanding the basic concepts rather than diving into complex problems or applications immediately. It's important to first get a good understanding of the fundamentals before moving to advanced concepts.)"
        },
        {
          time: "11:30 AM - 1:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Problem Solving/Application Session (Practical Application): Engage with basic problem-solving or application exercises that directly relate to the foundational concepts covered in the morning. This session solidifies understanding through practical application. Start with simpler problems that reinforce the core ideas. Focus on methods of approach, critical-thinking, and application of basic theories to real-world or hypothetical scenarios."
        },
        {
          time: "2:00 PM - 4:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Review and Revision (Reinforcement): Revisit the concepts and problems covered earlier in the day to reinforce learning. Identify areas of difficulty and clarify misunderstandings. Use this time to review notes, summaries, or key points from the day's study session. It helps in consolidating your understanding."
        },
        {
          time: "4:30 PM - 6:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Preview (Looking Ahead): Take a quick look at the material planned for the next day. It helps prepare for the coming topics and aids comprehension during the next study session. It's about familiarizing yourself with the topics rather than understanding them in detail."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 22,
    userId: "c5f7a64e-2ab1-47b7-9004-f0b591357378",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session (Foundation Building): Begin with the foundational theories and principles underlying the subject of choice. For example (Maths, Physics, Chemistry, Engineering, Biology, Economics, Law, or Arts) (e.g., Calculus, Newtonian Mechanics, Organic Chemistry, etc.) This establishes a solid base for further learning. Focus on understanding the basic concepts rather than diving into complex problems or applications immediately. It's important to first get a good understanding of the fundamentals before moving to advanced concepts.)"
        },
        {
          time: "11:30 AM - 1:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Problem Solving/Application Session (Practical Application): Engage with basic problem-solving or application exercises that directly relate to the foundational concepts covered in the morning. This session solidifies understanding through practical application. Start with simpler problems that reinforce the core ideas. Focus on methods of approach, critical-thinking, and application of basic theories to real-world or hypothetical scenarios."
        },
        {
          time: "2:00 PM - 4:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Review and Revision (Reinforcement): Revisit the concepts and problems covered earlier in the day to reinforce learning. Identify areas of difficulty and clarify misunderstandings. Use this time to review notes, summaries, or key points from the day's study session. It helps in consolidating your understanding."
        },
        {
          time: "4:30 PM - 6:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Preview (Looking Ahead): Take a quick look at the material planned for the next day. It helps prepare for the coming topics and aids comprehension during the next study session. It's about familiarizing yourself with the topics rather than understanding them in detail."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:240:28)
2025-04-01T19:30:14.036Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:14.037Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 22
2025-04-01T19:30:16.047Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 22
2025-04-01T19:30:16.544Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:16.545Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:16.770Z info [C -> Context.<anonymous>]: Test user created with id: 2acdf9fc-e866-4913-a87e-7704e3ebeb04
2025-04-01T19:30:16.771Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:17.014Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:17.015Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 23
2025-04-01T19:30:17.654Z info [C -> Context.<anonymous>]: Test study plan created with id: 23
2025-04-01T19:30:17.657Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:30:17.658Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:30:17.659Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:30:17.660Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:30:21.642Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:30:21.644Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:30:21.644Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:30:21.648Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 23,
    userId: "2acdf9fc-e866-4913-a87e-7704e3ebeb04",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 - 10:30 AM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 1: Fundamentals of [Subject Name, e.g., Calculus] and its applications on [Subject's Application e.g., Physics]. Quick Overview/Refresher of Pre-requisites on this Subject if needed. (1.5 hours Focus Time + 30 mins review of pre-requisites)) Topics to be covered include [List Topics to be Covered]. Resources to be used include [Add Resources such as Books and Course Materials]"
        },
        {
          time: "10:30 - 12:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 2: Practice of Problems on [Subject Name, e.g., Calculus] - Solve and study various examples using [list the resources used from the previous session].(1.5 hours Focus Time + 30 mins Break)"
        },
        {
          time: "2:00 - 3:30 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 3: [Subject name, e.g. Linear Algebra]. Introduction to Concepts such as Vectors, Matrices, and Linear Transformation and practice solving simple problems (1.5 Hours focus time + 30 Minutes solving and reviewing problems)."
        },
        {
          time: "3:30 - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 4: Free time and Review of all materials covered throughout the Day."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 23,
    userId: "2acdf9fc-e866-4913-a87e-7704e3ebeb04",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 - 10:30 AM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 1: Fundamentals of [Subject Name, e.g., Calculus] and its applications on [Subject's Application e.g., Physics]. Quick Overview/Refresher of Pre-requisites on this Subject if needed. (1.5 hours Focus Time + 30 mins review of pre-requisites)) Topics to be covered include [List Topics to be Covered]. Resources to be used include [Add Resources such as Books and Course Materials]"
        },
        {
          time: "10:30 - 12:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 2: Practice of Problems on [Subject Name, e.g., Calculus] - Solve and study various examples using [list the resources used from the previous session].(1.5 hours Focus Time + 30 mins Break)"
        },
        {
          time: "2:00 - 3:30 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 3: [Subject name, e.g. Linear Algebra]. Introduction to Concepts such as Vectors, Matrices, and Linear Transformation and practice solving simple problems (1.5 Hours focus time + 30 Minutes solving and reviewing problems)."
        },
        {
          time: "3:30 - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Study Session 4: Free time and Review of all materials covered throughout the Day."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T19:30:21.650Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:21.651Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 23
2025-04-01T19:30:23.649Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 23
2025-04-01T19:30:24.208Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:24.209Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:24.514Z info [C -> Context.<anonymous>]: Test user created with id: 43646ffb-a414-453c-83de-26fb2d64a6b5
2025-04-01T19:30:24.515Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:24.806Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:24.808Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 24
2025-04-01T19:30:25.437Z info [C -> Context.<anonymous>]: Test study plan created with id: 24
2025-04-01T19:30:25.440Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:30:25.441Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:30:25.442Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:30:25.444Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:30:40.451Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:40.452Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 24
2025-04-01T19:30:42.537Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 24
2025-04-01T19:30:43.048Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:43.050Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:43.356Z info [C -> Context.<anonymous>]: Test user created with id: 52883ecc-60b8-4830-9fd8-eb4acd9787c5
2025-04-01T19:30:43.357Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:43.655Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:43.656Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 25
2025-04-01T19:30:43.730Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:30:43.731Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:30:43.732Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:30:43.984Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:30:43.987Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 24,
    userId: "43646ffb-a414-453c-83de-26fb2d64a6b5",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1: Foundation Concepts and Definitions of the subject(e.g., Math, Physics, Programming, Language, Art, etc.) selected for study. Define all key terminologies related to the study subject selected.) Research foundational theories/techniques associated with your primary study subject. Summarize key definitions to reference later. Be prepared to answer all core 'what is' questions related to your selected subject. Take detailed notes on the topics. All definitions, theories, techniques, methodologies, and processes should be clearly understood and ready to be recalled for later application. A good command of definitions is essential for mastering the subject of interest. All concepts, theories, and definitions must be studied until an 80% recall accuracy is obtained through self-testing. Focus on understanding, not just memorization.) . [Use flashcards for later recall review]. Focus on long-term memory storage through mental-association techniques such as acronyms, mnemonic devices, concept diagrams, etc. Utilize memory improvement techniques in order to promote long-term recall, especially when preparing for examinations.) Focus on the most frequently tested theories/concepts, if preparing for an examination. The initial session is critical because the initial concepts will act as pillars to support complex topics later on in the study schedule. Be prepared to recall all basic definitions from memory, without the use of external resources. Write a brief personal summary of the information learned during the session to ensure long-term information storage through writing and recall. Summaries are not verbatim copying; instead, they focus on key concepts that act as triggers for the recall of comprehensive information. Note any open questions that you may have at the end of each session. Resolve these questions during dedicated research sessions or with the help of a mentor/instructor/teacher. This ensures continued topic clarity and prevents future misunderstanding of the subject. A brief study-break should be taken once every 30 minutes during lectures/readings, to promote subject retention (5 minutes). This will result in a more effective use of study time and the information will be more easily stored in the long-term memory. Don't study until you are tired. Rest and continue later, instead. This will make the material stick much better in your memory, resulting in faster, more effective learning. Also, it helps to avoid 'burning out' during intense study schedules. Review and recall the subject definitions prior to each study session. This will help reinforce the information learned and promote recall during the next session. Note: Study sessions should focus on active recall rather than passive reading. Active recall is a superior method of learning which results in more efficient learning overall. It is more effective than passive reading because the material is being mentally 'worked with'. Passive reading is simply 'glancing over' the text and hoping that something will stick in the brain. Use active learning techniques to maximize the return-on-investment (ROI) of the time investment made in each study session. Examples of active recall include flashcard memorization, question/answer sessions, verbal teaching, writing summaries from memory, etc. Review and recall all notes within 24 hours of the session to promote long-term memory storage. This also allows for a reduction in the forgetting curve (a.k.a., 'Ebbinghaus Forgetting Curve'). This prevents the information from being lost and promotes long-term understanding of the material. Actively seek to identify associations and connections within the material studied during each session. Learning should be an iterative process whereby new knowledge builds upon previous knowledge. Try to see the 'big picture'. In the event that certain theories or definitions are unclear, it is critical that you seek clarification from a teacher, mentor, or external study resources (e.g., the internet) as soon as possible. Unclear definitions can quickly degrade the efficiency of future study sessions. All ambiguities must be addressed immediately as they arise. Note: If preparing for an examination, seek to identify the key information that is most likely to appear on the exam. There is no use in focusing on obscure knowledge that will not be assessed during an examination. Prepare and review all study materials regularly (e.g., flashcards) until you obtain an 80% recall percentage. Regular study of flashcard definitions is highly recommended to promote long-term retention of the material. Review flashcards in a random order to ensure that you are actually memorizing the material, and not just memorizing the sequential order in which the material is presented. Flashcards are a fast and effective method of remembering facts and definitions, if used properly. Create a glossary of terms to allow for rapid review of terminologies at any time. Glossaries should be actively reviewed for 5-10 minutes prior to each study session to ensure that the information is clear in your mind. If you can remember key terms, theories, and definitions for each subject without the need for external resources, you will be able to learn at a far more rapid pace than individuals who do not take the time to memorize core terms. Memorization allows the mind to fully focus on synthesis, analysis, and application of the information. Without memorization, the mind is distracted by looking up definitions in external resources. All memorization should be completed using active-recall techniques for long-term retention. If possible, take study session notes by hand, instead of by computer. This technique will promote long-term memorization of the subject because you will be physically writing the information. By comparison, typing notes on a computer is simply an exercise in data entry and it does not necessarily mean that you are committing the information to memory. Handwritten notes result in greater subject retention and recall. This study technique is especially useful when preparing for university-level examinations. The information will be more deeply embedded in your mind and you will have a greater understanding of the subject overall. Create study aids from memory instead of simply copying information from a book. Memory-based study aids reinforce the concepts in the mind. Teach the subject to someone, instead of simply reciting the facts. This is the best method of determining whether you actually understand the subject. It also promotes the long-term storage of information because you must be able to verbalize the information. If you find yourself 'stuck', you will have a clear indication of what terms or concepts you do not fully understand. Review your study schedule at the end of each study session to prepare yourself for the next session. This will prime your brain for learning during the next session and will reduce the amount of time required to prepare. Review and recall the previous study session prior to each study session to ensure that the concepts remain clear in your mind. By reviewing the materials regularly, you will be able to recall them at any time in the future. It is also useful to keep a 'Notes' document on your computer to record ideas, insights, summaries, personal notes, questions, points of research, and all other useful information. This 'Notes' document becomes a comprehensive, easily-searchable record of everything you have learned during your study schedule. You can quickly reference anything you have studied in the past. This method is especially useful for university students and researchers. Always be wary of confusing correlation with causation. It is important that you fully understand why something is related to something else. Don't just assume that a causal connection exists. Instead, seek to clearly understand how the entities are connected. Also, always be aware of your personal biases and seek to minimize them when analyzing information. Remember that you can't solve problems using the same thinking that created them. The best solutions often arise from a fresh perspective or approach. Be open to new ideas and new ways of thinking about a problem. Keep asking 'why' until you obtain a clear understanding of the answer. Ask questions and seek out knowledge. Don't just accept things as being true without first considering the context and evidence. The best learners are those who have an insatiable curiosity and desire to learn more. Approach each problem with an open and inquisitive mind. Think critically about all new information. Make sure that new ideas are aligned with your existing understanding of the subject. Question new information that does not make sense and seek to find new information from external resources. Don't simply accept things as being true; verify that they are true using reliable external resources. A healthy amount of skepticism is useful during the learning process. Avoid 'group think' and focus on forming your own independent opinions based upon facts and data. Always seek to learn the truth, even if it conflicts with popular beliefs or opinion. Don't blindly trust 'experts' without verifying their statements and claims. Verify information by cross-referencing multiple independent sources to confirm accuracy. Be especially wary of accepting opinions presented on social media or Internet forums. The most accurate information will be typically presented in the form of scholarly articles or scientific papers. Use these sources to verify facts and data obtained elsewhere. It is critical that you develop the ability to distinguish facts from opinions. Opinions are usually based on feelings or emotions, whereas facts are based on observation or data. A statement of fact can be verified using external sources, whereas a statement of opinion cannot. You should base your conclusions on facts, not opinions. Avoid the use of logical fallacies and make sure that you fully understand the context of new information. A logical fallacy is a flaw in reasoning which results in an invalid argument. These fallacies are often used unintentionally. Be aware of the most common logical fallacies and avoid their use in your personal reasoning. Take time to understand the study schedule at the beginning of the day. Mentally prepare yourself for the topics that you will be covering during the day. Review your schedule, prepare your study area, and ensure that you have all of the external resources required to learn effectively. Make sure that you have a comfortable study environment, with minimal distractions. The goal is to focus your attention on learning for a specific period of time, so minimize anything that can detract from this. Keep the temperature moderate, the light bright, and the noise level low. Ensure that you have a comfortable chair, a stable desk, and all of the required external resources nearby. This will ensure that your learning environment is optimal, and that you are not distracted by minor issues. Always have a water bottle nearby to maintain hydration. Take the time to prepare your body and mind for an effective study session. It is far better to begin a study session with the ideal preparation. Prioritize sleep, nutrition, and exercise to promote effective learning. Get plenty of sleep prior to a study session so that you can perform at your best. Avoid junk foods and eat healthy snacks. Stay hydrated and exercise regularly to promote brain function. These are important components of a successful study schedule. It is important that you review all course material and syllabi, in advance, to ensure that you are familiar with all information that is expected of you during your study schedule. You should review the topics that will be covered in class and do some preliminary research in advance. This will prepare you for the topic and promote greater understanding during the course. This will also allow you to ask intelligent questions and gain a deeper understanding of the material. Make sure that you are familiar with all requirements and expectations for the course. Reviewing the course materials in advance is an excellent way to prepare for a new subject and to maximize your learning potential. Avoid multi-tasking. Instead, focus on one task at a time. Studies have shown that multi-tasking reduces productivity and can lead to mistakes. Instead, focus on the task at hand and complete it before moving on to the next task. This will help you to stay focused and to avoid distractions. Try to complete tasks one at a time and avoid jumping back and forth between tasks. The goal is to stay in the zone and to maintain concentration. Minimize interruptions from email, social media, and phone calls. Focus on the task at hand and dedicate your full attention to it. You will be more productive and you will be less likely to make mistakes. It is better to do one thing well than to do many things poorly. Always strive for excellence and focus on producing high-quality work. Take pride in your work and strive to do your best. This will help you to stay motivated and to achieve your goals. Focus on the quality of your work and not just the quantity. It is far better to produce a few high-quality pieces of work than to produce many low-quality pieces. Take the time to review your work and make sure that it is accurate and complete. You will be more satisfied with your work if you take the time to do it right. It is also useful to reward yourself upon completion of certain study goals. A small reward can help to maintain motivation and to promote a sense of accomplishment. The reward could be something as simple as taking a break, watching a movie, or eating a snack. Just make sure that the reward is something that you enjoy and that it is not detrimental to your health. Rewards can be a powerful tool to help you stay motivated and to achieve your goals. Set realistic expectations for yourself. Don't expect to be able to learn everything overnight. Learning takes time and effort. Be patient with yourself and don't get discouraged if you don't see results immediately. Just keep working at it and you will eventually achieve your goals. It is important to set realistic goals that you can actually achieve. This will help you to stay motivated and to avoid disappointment. Don't try to do too much too soon. Start with small goals and gradually increase the difficulty. You will be more likely to succeed if you take things one step at a time. Remember to celebrate your successes along the way. This will help you to stay motivated and to continue learning. Avoid trying to rush through material in order to save time. Instead, focus on learning the information as deeply as possible. This will help you to understand the material better and to retain it for longer. It is better to learn something well than to learn it quickly. Instead, focus on understanding and retention. This will help you to succeed in the long run. Take the time to learn the material properly and you will be rewarded with a deeper understanding and greater retention. Avoid distractions and focus on the task at hand. This will help you to learn the material more effectively. It is better to focus on one task at a time than to try to multi-task. Find a quiet place to study and minimize interruptions. Turn off your phone and close any unnecessary programs on your computer. The goal is to create a focused learning environment where you can concentrate on the material. By avoiding distractions, you will be able to learn more effectively and retain the information for longer."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 24,
    userId: "43646ffb-a414-453c-83de-26fb2d64a6b5",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1: Foundation Concepts and Definitions of the subject(e.g., Math, Physics, Programming, Language, Art, etc.) selected for study. Define all key terminologies related to the study subject selected.) Research foundational theories/techniques associated with your primary study subject. Summarize key definitions to reference later. Be prepared to answer all core 'what is' questions related to your selected subject. Take detailed notes on the topics. All definitions, theories, techniques, methodologies, and processes should be clearly understood and ready to be recalled for later application. A good command of definitions is essential for mastering the subject of interest. All concepts, theories, and definitions must be studied until an 80% recall accuracy is obtained through self-testing. Focus on understanding, not just memorization.) . [Use flashcards for later recall review]. Focus on long-term memory storage through mental-association techniques such as acronyms, mnemonic devices, concept diagrams, etc. Utilize memory improvement techniques in order to promote long-term recall, especially when preparing for examinations.) Focus on the most frequently tested theories/concepts, if preparing for an examination. The initial session is critical because the initial concepts will act as pillars to support complex topics later on in the study schedule. Be prepared to recall all basic definitions from memory, without the use of external resources. Write a brief personal summary of the information learned during the session to ensure long-term information storage through writing and recall. Summaries are not verbatim copying; instead, they focus on key concepts that act as triggers for the recall of comprehensive information. Note any open questions that you may have at the end of each session. Resolve these questions during dedicated research sessions or with the help of a mentor/instructor/teacher. This ensures continued topic clarity and prevents future misunderstanding of the subject. A brief study-break should be taken once every 30 minutes during lectures/readings, to promote subject retention (5 minutes). This will result in a more effective use of study time and the information will be more easily stored in the long-term memory. Don't study until you are tired. Rest and continue later, instead. This will make the material stick much better in your memory, resulting in faster, more effective learning. Also, it helps to avoid 'burning out' during intense study schedules. Review and recall the subject definitions prior to each study session. This will help reinforce the information learned and promote recall during the next session. Note: Study sessions should focus on active recall rather than passive reading. Active recall is a superior method of learning which results in more efficient learning overall. It is more effective than passive reading because the material is being mentally 'worked with'. Passive reading is simply 'glancing over' the text and hoping that something will stick in the brain. Use active learning techniques to maximize the return-on-investment (ROI) of the time investment made in each study session. Examples of active recall include flashcard memorization, question/answer sessions, verbal teaching, writing summaries from memory, etc. Review and recall all notes within 24 hours of the session to promote long-term memory storage. This also allows for a reduction in the forgetting curve (a.k.a., 'Ebbinghaus Forgetting Curve'). This prevents the information from being lost and promotes long-term understanding of the material. Actively seek to identify associations and connections within the material studied during each session. Learning should be an iterative process whereby new knowledge builds upon previous knowledge. Try to see the 'big picture'. In the event that certain theories or definitions are unclear, it is critical that you seek clarification from a teacher, mentor, or external study resources (e.g., the internet) as soon as possible. Unclear definitions can quickly degrade the efficiency of future study sessions. All ambiguities must be addressed immediately as they arise. Note: If preparing for an examination, seek to identify the key information that is most likely to appear on the exam. There is no use in focusing on obscure knowledge that will not be assessed during an examination. Prepare and review all study materials regularly (e.g., flashcards) until you obtain an 80% recall percentage. Regular study of flashcard definitions is highly recommended to promote long-term retention of the material. Review flashcards in a random order to ensure that you are actually memorizing the material, and not just memorizing the sequential order in which the material is presented. Flashcards are a fast and effective method of remembering facts and definitions, if used properly. Create a glossary of terms to allow for rapid review of terminologies at any time. Glossaries should be actively reviewed for 5-10 minutes prior to each study session to ensure that the information is clear in your mind. If you can remember key terms, theories, and definitions for each subject without the need for external resources, you will be able to learn at a far more rapid pace than individuals who do not take the time to memorize core terms. Memorization allows the mind to fully focus on synthesis, analysis, and application of the information. Without memorization, the mind is distracted by looking up definitions in external resources. All memorization should be completed using active-recall techniques for long-term retention. If possible, take study session notes by hand, instead of by computer. This technique will promote long-term memorization of the subject because you will be physically writing the information. By comparison, typing notes on a computer is simply an exercise in data entry and it does not necessarily mean that you are committing the information to memory. Handwritten notes result in greater subject retention and recall. This study technique is especially useful when preparing for university-level examinations. The information will be more deeply embedded in your mind and you will have a greater understanding of the subject overall. Create study aids from memory instead of simply copying information from a book. Memory-based study aids reinforce the concepts in the mind. Teach the subject to someone, instead of simply reciting the facts. This is the best method of determining whether you actually understand the subject. It also promotes the long-term storage of information because you must be able to verbalize the information. If you find yourself 'stuck', you will have a clear indication of what terms or concepts you do not fully understand. Review your study schedule at the end of each study session to prepare yourself for the next session. This will prime your brain for learning during the next session and will reduce the amount of time required to prepare. Review and recall the previous study session prior to each study session to ensure that the concepts remain clear in your mind. By reviewing the materials regularly, you will be able to recall them at any time in the future. It is also useful to keep a 'Notes' document on your computer to record ideas, insights, summaries, personal notes, questions, points of research, and all other useful information. This 'Notes' document becomes a comprehensive, easily-searchable record of everything you have learned during your study schedule. You can quickly reference anything you have studied in the past. This method is especially useful for university students and researchers. Always be wary of confusing correlation with causation. It is important that you fully understand why something is related to something else. Don't just assume that a causal connection exists. Instead, seek to clearly understand how the entities are connected. Also, always be aware of your personal biases and seek to minimize them when analyzing information. Remember that you can't solve problems using the same thinking that created them. The best solutions often arise from a fresh perspective or approach. Be open to new ideas and new ways of thinking about a problem. Keep asking 'why' until you obtain a clear understanding of the answer. Ask questions and seek out knowledge. Don't just accept things as being true without first considering the context and evidence. The best learners are those who have an insatiable curiosity and desire to learn more. Approach each problem with an open and inquisitive mind. Think critically about all new information. Make sure that new ideas are aligned with your existing understanding of the subject. Question new information that does not make sense and seek to find new information from external resources. Don't simply accept things as being true; verify that they are true using reliable external resources. A healthy amount of skepticism is useful during the learning process. Avoid 'group think' and focus on forming your own independent opinions based upon facts and data. Always seek to learn the truth, even if it conflicts with popular beliefs or opinion. Don't blindly trust 'experts' without verifying their statements and claims. Verify information by cross-referencing multiple independent sources to confirm accuracy. Be especially wary of accepting opinions presented on social media or Internet forums. The most accurate information will be typically presented in the form of scholarly articles or scientific papers. Use these sources to verify facts and data obtained elsewhere. It is critical that you develop the ability to distinguish facts from opinions. Opinions are usually based on feelings or emotions, whereas facts are based on observation or data. A statement of fact can be verified using external sources, whereas a statement of opinion cannot. You should base your conclusions on facts, not opinions. Avoid the use of logical fallacies and make sure that you fully understand the context of new information. A logical fallacy is a flaw in reasoning which results in an invalid argument. These fallacies are often used unintentionally. Be aware of the most common logical fallacies and avoid their use in your personal reasoning. Take time to understand the study schedule at the beginning of the day. Mentally prepare yourself for the topics that you will be covering during the day. Review your schedule, prepare your study area, and ensure that you have all of the external resources required to learn effectively. Make sure that you have a comfortable study environment, with minimal distractions. The goal is to focus your attention on learning for a specific period of time, so minimize anything that can detract from this. Keep the temperature moderate, the light bright, and the noise level low. Ensure that you have a comfortable chair, a stable desk, and all of the required external resources nearby. This will ensure that your learning environment is optimal, and that you are not distracted by minor issues. Always have a water bottle nearby to maintain hydration. Take the time to prepare your body and mind for an effective study session. It is far better to begin a study session with the ideal preparation. Prioritize sleep, nutrition, and exercise to promote effective learning. Get plenty of sleep prior to a study session so that you can perform at your best. Avoid junk foods and eat healthy snacks. Stay hydrated and exercise regularly to promote brain function. These are important components of a successful study schedule. It is important that you review all course material and syllabi, in advance, to ensure that you are familiar with all information that is expected of you during your study schedule. You should review the topics that will be covered in class and do some preliminary research in advance. This will prepare you for the topic and promote greater understanding during the course. This will also allow you to ask intelligent questions and gain a deeper understanding of the material. Make sure that you are familiar with all requirements and expectations for the course. Reviewing the course materials in advance is an excellent way to prepare for a new subject and to maximize your learning potential. Avoid multi-tasking. Instead, focus on one task at a time. Studies have shown that multi-tasking reduces productivity and can lead to mistakes. Instead, focus on the task at hand and complete it before moving on to the next task. This will help you to stay focused and to avoid distractions. Try to complete tasks one at a time and avoid jumping back and forth between tasks. The goal is to stay in the zone and to maintain concentration. Minimize interruptions from email, social media, and phone calls. Focus on the task at hand and dedicate your full attention to it. You will be more productive and you will be less likely to make mistakes. It is better to do one thing well than to do many things poorly. Always strive for excellence and focus on producing high-quality work. Take pride in your work and strive to do your best. This will help you to stay motivated and to achieve your goals. Focus on the quality of your work and not just the quantity. It is far better to produce a few high-quality pieces of work than to produce many low-quality pieces. Take the time to review your work and make sure that it is accurate and complete. You will be more satisfied with your work if you take the time to do it right. It is also useful to reward yourself upon completion of certain study goals. A small reward can help to maintain motivation and to promote a sense of accomplishment. The reward could be something as simple as taking a break, watching a movie, or eating a snack. Just make sure that the reward is something that you enjoy and that it is not detrimental to your health. Rewards can be a powerful tool to help you stay motivated and to achieve your goals. Set realistic expectations for yourself. Don't expect to be able to learn everything overnight. Learning takes time and effort. Be patient with yourself and don't get discouraged if you don't see results immediately. Just keep working at it and you will eventually achieve your goals. It is important to set realistic goals that you can actually achieve. This will help you to stay motivated and to avoid disappointment. Don't try to do too much too soon. Start with small goals and gradually increase the difficulty. You will be more likely to succeed if you take things one step at a time. Remember to celebrate your successes along the way. This will help you to stay motivated and to continue learning. Avoid trying to rush through material in order to save time. Instead, focus on learning the information as deeply as possible. This will help you to understand the material better and to retain it for longer. It is better to learn something well than to learn it quickly. Instead, focus on understanding and retention. This will help you to succeed in the long run. Take the time to learn the material properly and you will be rewarded with a deeper understanding and greater retention. Avoid distractions and focus on the task at hand. This will help you to learn the material more effectively. It is better to focus on one task at a time than to try to multi-task. Find a quiet place to study and minimize interruptions. Turn off your phone and close any unnecessary programs on your computer. The goal is to create a focused learning environment where you can concentrate on the material. By avoiding distractions, you will be able to learn more effectively and retain the information for longer."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:260:28)
2025-04-01T19:30:44.140Z info [C -> Context.<anonymous>]: Test study plan created with id: 25
2025-04-01T19:30:44.142Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:30:44.142Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:30:44.143Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:30:44.144Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:30:46.327Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:30:46.328Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:30:46.329Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:30:46.331Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 25,
    userId: "52883ecc-60b8-4830-9fd8-eb4acd9787c5",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: "Mathematics",
          topics: [
            "Basic Algebra",
            "Number Systems"
          ],
          type: "Lecture & Practice"
        },
        {
          time: "11:00 AM - 12:30 PM",
          subject: "Science",
          topics: [
            "Introduction to Physics",
            "Measurements and Units"
          ],
          type: "Reading and Note-Taking"
        },
        {
          time: "2:00 PM - 3:30 PM",
          subject: "English",
          topics: [
            "Grammar Basics",
            "Sentence Structure"
          ],
          type: "Exercises and Review"
        },
        {
          time: "4:00 PM - 5:30 PM",
          subject: "History",
          topics: [
            "Ancient Civilizations Overview"
          ],
          type: "Documentary and Discussion"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 25,
    userId: "52883ecc-60b8-4830-9fd8-eb4acd9787c5",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: "Mathematics",
          topics: [
            "Basic Algebra",
            "Number Systems"
          ],
          type: "Lecture & Practice"
        },
        {
          time: "11:00 AM - 12:30 PM",
          subject: "Science",
          topics: [
            "Introduction to Physics",
            "Measurements and Units"
          ],
          type: "Reading and Note-Taking"
        },
        {
          time: "2:00 PM - 3:30 PM",
          subject: "English",
          topics: [
            "Grammar Basics",
            "Sentence Structure"
          ],
          type: "Exercises and Review"
        },
        {
          time: "4:00 PM - 5:30 PM",
          subject: "History",
          topics: [
            "Ancient Civilizations Overview"
          ],
          type: "Documentary and Discussion"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:275:28)
2025-04-01T19:30:46.333Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:46.334Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 25
2025-04-01T19:30:47.965Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 25
2025-04-01T19:30:48.192Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:48.195Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:48.477Z info [C -> Context.<anonymous>]: Test user created with id: e5d23cb5-641c-45c2-b46b-c09f162e68f7
2025-04-01T19:30:48.478Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:48.722Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:48.724Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 26
2025-04-01T19:30:49.288Z info [C -> Context.<anonymous>]: Test study plan created with id: 26
2025-04-01T19:30:49.290Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:49.291Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 26
2025-04-01T19:30:50.868Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 26
2025-04-01T19:30:51.094Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:51.096Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:51.323Z info [C -> Context.<anonymous>]: Test user created with id: 58419184-53ec-48d7-add8-feca775fc4bd
2025-04-01T19:30:51.325Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:51.658Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:51.659Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 27
2025-04-01T19:30:52.163Z info [C -> Context.<anonymous>]: Test study plan created with id: 27
2025-04-01T19:30:52.165Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:30:52.725Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:30:52.726Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:30:52.727Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:312:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T19:30:52.728Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:52.729Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 27
2025-04-01T19:30:54.384Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 27
2025-04-01T19:30:54.622Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:54.624Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:54.850Z info [C -> Context.<anonymous>]: Test user created with id: 7d140c88-b9e1-4810-8b92-3620412df0b1
2025-04-01T19:30:54.852Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:55.133Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:55.134Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 28
2025-04-01T19:30:55.747Z info [C -> Context.<anonymous>]: Test study plan created with id: 28
2025-04-01T19:30:55.750Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T19:30:56.156Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:30:56.159Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:345:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T19:30:56.161Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:30:56.161Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 28
2025-04-01T19:30:57.962Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 28
2025-04-01T19:30:58.426Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:30:58.428Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:30:58.651Z info [C -> Context.<anonymous>]: Test user created with id: 07d880cd-da07-4c03-81a2-683d8980a4c7
2025-04-01T19:30:58.652Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:30:58.921Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:30:58.922Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 29
2025-04-01T19:30:59.465Z info [C -> Context.<anonymous>]: Test study plan created with id: 29
2025-04-01T19:30:59.466Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:30:59.466Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:31:02.410Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:31:02.412Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:31:02.413Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:31:02.414Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 29
2025-04-01T19:31:04.038Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 29
2025-04-01T19:31:04.271Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:31:04.273Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:31:04.496Z info [C -> Context.<anonymous>]: Test user created with id: 3aeb63be-2753-4ed0-81c0-c2231aab6655
2025-04-01T19:31:04.497Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:31:04.737Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:31:04.739Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 30
2025-04-01T19:31:05.270Z info [C -> Context.<anonymous>]: Test study plan created with id: 30
2025-04-01T19:31:05.274Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:31:05.275Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 30
2025-04-01T19:31:06.773Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 30
2025-04-01T19:31:06.999Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:31:07.001Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:31:09.571Z info [C -> Context.<anonymous>]: Test user created: 51cf4a84-eb8d-4c9b-a9ca-74850aa58bda
2025-04-01T19:31:09.573Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:31:11.376Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:31:11.377Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 31
2025-04-01T19:31:12.541Z info [C -> Context.<anonymous>]: Study plan created: 31
2025-04-01T19:31:12.547Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:31:12.549Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:31:12.550Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:31:12.550Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:31:18.687Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:31:18.688Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:31:18.689Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:31:18.991Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:31:18.994Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 31,
    userId: "51cf4a84-eb8d-4c9b-a9ca-74850aa58bda",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1: Foundations of [Subject Name, e.g., Computer Science] (e.g., Algorithms and Data Structures for Computer Science). Topics covered should be basic data structures and algorithms (arrays, linked lists, sorting). Focus should be on understanding the basic operations and time complexities. Resources: Textbook Chapters 1-3, Introductory Lecture Slides. Deliverable: Short summary of key concepts and time complexities for each data structure/algorithm covered. Should include: Array basics, Linked List types, Sorting algorithm descriptions and comparison. Time allocated: 2 hours. Break Included (15mins). Goal is to understand and be able to implement these basic data structures. Subject: [Subject Name, e.g., Computer Science]. Resources: Recommended textbook for this subject, plus optional external resources as needed (e.g., Khan Academy, MIT OpenCourseWare, GeeksforGeeks). Topics: Basic Data Structures and Algorithms (Arrays, Linked Lists, Sorting Algorithms). Notes: Focus on understanding fundamental concepts and implementation details. Resources: Introductory Textbook, Online Tutorials. Deliverable: Create notes of the key concepts."
        },
        {
          time: "1:00 PM - 3:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Problem Solving Session 1: Practice implementing basic data structures (e.g., implement a linked list or a simple sorting algorithm). Resources: Coding platform (e.g., HackerRank, LeetCode) problems. Subject: [Subject Name, e.g., Computer Science]. Resources: Online coding platforms, textbook examples. Topics: Implementations of data structures discussed during the lecture session. Deliverable: Working code for the assigned implementation tasks, along with comments explaining your approach. Notes: Focus on implementing basic operations (e.g., insertion, deletion, search) for each data structure. Resources: Implementation exercises online. Deliverable: working implementations and test cases. Should include: Implementation of sorting algorithm. Time allocated: 2 hours. Break Included (15mins). Goal is to practice implementing basic data structures. Subject: [Subject Name, e.g., Computer Science]. Resources: Coding platform (e.g., HackerRank, LeetCode) problems. Topics: Implementations of data structures discussed during the lecture session."
        },
        {
          time: "4:00 PM - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Review and Planning Session: Review key concepts and identify areas of weakness. Plan for Day 2. Resources: Lecture notes, problem sets. Subject: [Subject Name, e.g., Computer Science]. Resources: Lecture Notes, Practice Problems. Topics: Review the concepts learned today and plan for the next day. Deliverable: List of topics for further review. Notes: Self-assessment to identify areas of weakness. Resources: List of topics that need further review. Deliverable: Outline for Day 2 study sessions. Should include: Key topics from the introduction. Time allocated: 1 hour. Goal is to review the concepts learned today. Subject: [Subject Name, e.g., Computer Science]. Resources: Lecture Notes, Practice Problems. Topics: Review the concepts learned today and plan for the next day."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 31,
    userId: "51cf4a84-eb8d-4c9b-a9ca-74850aa58bda",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 11:00 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1: Foundations of [Subject Name, e.g., Computer Science] (e.g., Algorithms and Data Structures for Computer Science). Topics covered should be basic data structures and algorithms (arrays, linked lists, sorting). Focus should be on understanding the basic operations and time complexities. Resources: Textbook Chapters 1-3, Introductory Lecture Slides. Deliverable: Short summary of key concepts and time complexities for each data structure/algorithm covered. Should include: Array basics, Linked List types, Sorting algorithm descriptions and comparison. Time allocated: 2 hours. Break Included (15mins). Goal is to understand and be able to implement these basic data structures. Subject: [Subject Name, e.g., Computer Science]. Resources: Recommended textbook for this subject, plus optional external resources as needed (e.g., Khan Academy, MIT OpenCourseWare, GeeksforGeeks). Topics: Basic Data Structures and Algorithms (Arrays, Linked Lists, Sorting Algorithms). Notes: Focus on understanding fundamental concepts and implementation details. Resources: Introductory Textbook, Online Tutorials. Deliverable: Create notes of the key concepts."
        },
        {
          time: "1:00 PM - 3:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Problem Solving Session 1: Practice implementing basic data structures (e.g., implement a linked list or a simple sorting algorithm). Resources: Coding platform (e.g., HackerRank, LeetCode) problems. Subject: [Subject Name, e.g., Computer Science]. Resources: Online coding platforms, textbook examples. Topics: Implementations of data structures discussed during the lecture session. Deliverable: Working code for the assigned implementation tasks, along with comments explaining your approach. Notes: Focus on implementing basic operations (e.g., insertion, deletion, search) for each data structure. Resources: Implementation exercises online. Deliverable: working implementations and test cases. Should include: Implementation of sorting algorithm. Time allocated: 2 hours. Break Included (15mins). Goal is to practice implementing basic data structures. Subject: [Subject Name, e.g., Computer Science]. Resources: Coding platform (e.g., HackerRank, LeetCode) problems. Topics: Implementations of data structures discussed during the lecture session."
        },
        {
          time: "4:00 PM - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Review and Planning Session: Review key concepts and identify areas of weakness. Plan for Day 2. Resources: Lecture notes, problem sets. Subject: [Subject Name, e.g., Computer Science]. Resources: Lecture Notes, Practice Problems. Topics: Review the concepts learned today and plan for the next day. Deliverable: List of topics for further review. Notes: Self-assessment to identify areas of weakness. Resources: List of topics that need further review. Deliverable: Outline for Day 2 study sessions. Should include: Key topics from the introduction. Time allocated: 1 hour. Goal is to review the concepts learned today. Subject: [Subject Name, e.g., Computer Science]. Resources: Lecture Notes, Practice Problems. Topics: Review the concepts learned today and plan for the next day."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-01T19:31:18.997Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:31:18.998Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 31
2025-04-01T19:31:21.002Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 31
2025-04-01T19:31:21.653Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:31:21.654Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:31:21.903Z info [C -> Context.<anonymous>]: Test user created: 23a5b74f-876a-4792-ad2c-66413ef0de22
2025-04-01T19:31:21.904Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:31:23.292Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:31:23.293Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 32
2025-04-01T19:31:24.073Z info [C -> Context.<anonymous>]: Study plan created: 32
2025-04-01T19:31:24.075Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 32
2025-04-01T19:31:26.909Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:31:26.911Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:31:26.913Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:31:26.914Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:31:54.080Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:31:54.080Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 32
2025-04-01T19:31:56.266Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 32
2025-04-01T19:31:56.777Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:31:56.778Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:31:57.082Z info [C -> Context.<anonymous>]: Test user created: 5e77c10a-df90-4a29-bc0a-bb3b772d3252
2025-04-01T19:31:57.083Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:31:58.518Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:31:58.519Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 33
2025-04-01T19:31:59.341Z info [C -> Context.<anonymous>]: Study plan created: 33
2025-04-01T19:31:59.343Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:31:59.344Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:31:59.346Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:31:59.347Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:32:04.470Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:32:04.471Z error [C -> ScheduleService.generateDayContent]: Error generating day content: Unterminated string in JSON at position 51513 (line 7 column 51393)
SyntaxError: Unterminated string in JSON at position 51513 (line 7 column 51393)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:149:33)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T19:32:04.471Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: Unterminated string in JSON at position 51513 (line 7 column 51393)
SyntaxError: Unterminated string in JSON at position 51513 (line 7 column 51393)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:149:33)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T19:32:29.360Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:32:29.362Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 33
2025-04-01T19:32:31.183Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 33
2025-04-01T19:32:31.696Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:32:31.697Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:32:32.002Z info [C -> Context.<anonymous>]: Test user created: 2d828186-a7df-4ccf-ae01-74962aeafb96
2025-04-01T19:32:32.003Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:32:33.370Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:32:33.371Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 34
2025-04-01T19:32:34.257Z info [C -> Context.<anonymous>]: Study plan created: 34
2025-04-01T19:32:34.259Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:32:34.260Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:32:34.261Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:32:34.261Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:32:37.330Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:32:37.331Z error [C -> ScheduleService.generateDayContent]: Error generating day content: Unterminated string in JSON at position 46496 (line 7 column 46375)
SyntaxError: Unterminated string in JSON at position 46496 (line 7 column 46375)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:149:33)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:32:37.332Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: Unterminated string in JSON at position 46496 (line 7 column 46375)
SyntaxError: Unterminated string in JSON at position 46496 (line 7 column 46375)
    at JSON.parse (<anonymous>)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:149:33)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:32:38.056Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:32:38.057Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:32:38.058Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:32:38.315Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:32:38.317Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 34,
    userId: "2d828186-a7df-4ccf-ae01-74962aeafb96",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 12:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 1, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: Science fundamentals. Resources: 2023 study guide."
        },
        {
          time: "2:00 PM - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 2, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: Math fundamentals. Resources: 2023 study guide."
        },
        {
          time: "7:00 PM - 9:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 3, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: English fundamentals. Resources: 2023 study guide."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 34,
    userId: "2d828186-a7df-4ccf-ae01-74962aeafb96",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 12:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 1, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: Science fundamentals. Resources: 2023 study guide."
        },
        {
          time: "2:00 PM - 5:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 2, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: Math fundamentals. Resources: 2023 study guide."
        },
        {
          time: "7:00 PM - 9:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2/3 hours with 30min break in between to review notes. This session focuses on Core concepts. Resources: Textbook Ch. 3, Online Articles on subject matter. Topics: Introduction to subject matter and overview of core concepts with definitions and examples. Subject: English fundamentals. Resources: 2023 study guide."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-01T19:32:38.320Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:32:38.320Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 34
2025-04-01T19:32:39.991Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 34
2025-04-01T19:32:40.298Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:32:40.300Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:32:40.575Z info [C -> Context.<anonymous>]: Test user created: 091952ec-066e-4355-86ed-6691ff8c659d
2025-04-01T19:32:40.577Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:32:41.866Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:32:41.868Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 35
2025-04-01T19:32:42.691Z info [C -> Context.<anonymous>]: Study plan created: 35
2025-04-01T19:32:42.693Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:32:42.694Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:32:42.695Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:32:42.696Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:32:49.517Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:32:49.518Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:32:49.519Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:32:49.522Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 35,
    userId: "091952ec-066e-4355-86ed-6691ff8c659d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1 (Core Concepts: Variables and Data Types) - Begin with an introduction to the fundamental concepts of programming, including variables, data types (integer, float, string, boolean), and basic operators. Resources: Introductory textbook chapters, online tutorials from reputable websites like W3Schools or Codecademy. Topics: What is a Variable, Common Data Types, Operators (Arithmetic, Assignment, Comparison).Resources: Online tutorials on W3Schools or Codecademy, Documentation for your language of choice, e.g., Python documentation, Java documentation, etc.. Topics: Basics of variables, Common Datatypes,Arithmetic, Assignment, Comparison Operators, Input and Output Operations.. Resources: 'Automate the Boring Stuff with Python,' Chapter 1 and 2. Topics: Installation, Variables, Data Types, Basic Input/Output.. Resources: Relevant Sections of 'Clean Code' by Robert C. Martin, Style Guides. Topics: Importance of readability, Basic Code Formatting, Comments and Documentation.. Resources: Example code snippets, Interactive coding platforms. Topics: Debugging Syntax Errors, Identifying Logical Errors, Using Debugging Tools.. Resources: Online resources explaining algorithms and data structures. Topics: Basic Algorithm Concepts, Linear Search, Binary Search (Introduction), Arrays and Linked Lists (Introduction).Resources: Design Patterns Explained Simply by Alexander Shvets. Topics: Basics of Observer, Factory, and Singleton design patterns."
        },
        {
          time: "10:45 AM - 12:15 PM",
          subject: undefined,
          topics: undefined,
          type: "Practice Session 1 (Coding exercises: Implementing simple programs using variables and data types)- Hands-on practice where the student applies the knowledge gained from the lecture/reading session. Coding exercises involve creating small programs that use variables, perform calculations, and output results. Topics: Create Programs to Calculate Averages, Convert Units, Perform Basic String Manipulations. Resources: Online Coding Platforms like HackerRank or LeetCode, Textbook Coding Examples.. Topics: Data Structures: Arrays, Linked Lists (Introduction), Implementation of common algorithms using arrays and linked lists. Resources: Algorithm Design Manual by Steven S. Skiena. Topics: Time Complexity Analysis, Big-O Notation, Best Case, Worst Case, Average Case."
        },
        {
          time: "1:30 PM - 3:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2 (Control Structures: Conditional Statements and Loops) - Presentation and review of control structures like if-else statements, for loops, and while loops. Resources: Advanced online tutorials, Documentation for debugging tools. Topics: Using Debugging Tools, Setting Breakpoints, Inspecting Variables.Resources: 'Introduction to Algorithms' by Thomas H. Cormen, Chapter on Sorting Algorithms. Topics: Bubble Sort, Insertion Sort, Selection Sort, Merge Sort, Quick Sort.. Resources: Database Management System (DBMS) documentation, SQL tutorial sites. Topics: Basics of SQL, SELECT, INSERT, UPDATE, DELETE statements, JOIN operations.. Topics: Best Practices for Software Version Control."
        },
        {
          time: "3:15 PM - 4:45 PM",
          subject: undefined,
          topics: undefined,
          type: "Practice Session 2 (Coding exercises: Creating programs that use conditional statements and loops) - Practical session where the student writes programs that use control structures to solve problems. Topics: Create Programs That Check Conditions, Process Data, and Repeat Operations. Resources: Collaborative coding platforms, Team communication tools. Topics: Introduction to Agile Development, Scrum Framework, Kanban..Resources: Tutorials on Testing Frameworks (e.g., JUnit for Java, pytest for Python). Topics: Unit Testing Basics, Writing Test Cases, Test-Driven Development (TDD)."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 35,
    userId: "091952ec-066e-4355-86ed-6691ff8c659d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 1 (Core Concepts: Variables and Data Types) - Begin with an introduction to the fundamental concepts of programming, including variables, data types (integer, float, string, boolean), and basic operators. Resources: Introductory textbook chapters, online tutorials from reputable websites like W3Schools or Codecademy. Topics: What is a Variable, Common Data Types, Operators (Arithmetic, Assignment, Comparison).Resources: Online tutorials on W3Schools or Codecademy, Documentation for your language of choice, e.g., Python documentation, Java documentation, etc.. Topics: Basics of variables, Common Datatypes,Arithmetic, Assignment, Comparison Operators, Input and Output Operations.. Resources: 'Automate the Boring Stuff with Python,' Chapter 1 and 2. Topics: Installation, Variables, Data Types, Basic Input/Output.. Resources: Relevant Sections of 'Clean Code' by Robert C. Martin, Style Guides. Topics: Importance of readability, Basic Code Formatting, Comments and Documentation.. Resources: Example code snippets, Interactive coding platforms. Topics: Debugging Syntax Errors, Identifying Logical Errors, Using Debugging Tools.. Resources: Online resources explaining algorithms and data structures. Topics: Basic Algorithm Concepts, Linear Search, Binary Search (Introduction), Arrays and Linked Lists (Introduction).Resources: Design Patterns Explained Simply by Alexander Shvets. Topics: Basics of Observer, Factory, and Singleton design patterns."
        },
        {
          time: "10:45 AM - 12:15 PM",
          subject: undefined,
          topics: undefined,
          type: "Practice Session 1 (Coding exercises: Implementing simple programs using variables and data types)- Hands-on practice where the student applies the knowledge gained from the lecture/reading session. Coding exercises involve creating small programs that use variables, perform calculations, and output results. Topics: Create Programs to Calculate Averages, Convert Units, Perform Basic String Manipulations. Resources: Online Coding Platforms like HackerRank or LeetCode, Textbook Coding Examples.. Topics: Data Structures: Arrays, Linked Lists (Introduction), Implementation of common algorithms using arrays and linked lists. Resources: Algorithm Design Manual by Steven S. Skiena. Topics: Time Complexity Analysis, Big-O Notation, Best Case, Worst Case, Average Case."
        },
        {
          time: "1:30 PM - 3:00 PM",
          subject: undefined,
          topics: undefined,
          type: "Lecture/Reading Session 2 (Control Structures: Conditional Statements and Loops) - Presentation and review of control structures like if-else statements, for loops, and while loops. Resources: Advanced online tutorials, Documentation for debugging tools. Topics: Using Debugging Tools, Setting Breakpoints, Inspecting Variables.Resources: 'Introduction to Algorithms' by Thomas H. Cormen, Chapter on Sorting Algorithms. Topics: Bubble Sort, Insertion Sort, Selection Sort, Merge Sort, Quick Sort.. Resources: Database Management System (DBMS) documentation, SQL tutorial sites. Topics: Basics of SQL, SELECT, INSERT, UPDATE, DELETE statements, JOIN operations.. Topics: Best Practices for Software Version Control."
        },
        {
          time: "3:15 PM - 4:45 PM",
          subject: undefined,
          topics: undefined,
          type: "Practice Session 2 (Coding exercises: Creating programs that use conditional statements and loops) - Practical session where the student writes programs that use control structures to solve problems. Topics: Create Programs That Check Conditions, Process Data, and Repeat Operations. Resources: Collaborative coding platforms, Team communication tools. Topics: Introduction to Agile Development, Scrum Framework, Kanban..Resources: Tutorials on Testing Frameworks (e.g., JUnit for Java, pytest for Python). Topics: Unit Testing Basics, Writing Test Cases, Test-Driven Development (TDD)."
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-01T19:32:49.524Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:32:49.525Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 35
2025-04-01T19:32:51.373Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 35
2025-04-01T19:32:51.971Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:32:51.974Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:32:52.279Z info [C -> Context.<anonymous>]: Test user created: 4a96ead5-0b5f-4fd2-9108-f3a9ddf44b56
2025-04-01T19:32:52.281Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:32:53.744Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:32:53.745Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 36
2025-04-01T19:32:54.635Z info [C -> Context.<anonymous>]: Study plan created: 36
2025-04-01T19:32:54.637Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:32:54.638Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:32:54.640Z info [C -> ScheduleService.generateDayContent]: Generating day content:
2025-04-01T19:32:54.641Z info [C -> ScheduleService.generateDayContent]: AI Request:
2025-04-01T19:32:58.119Z info [C -> ScheduleService.generateDayContent]: AI Response:
2025-04-01T19:32:58.121Z info [C -> ScheduleService.generateDayContent]: Parsed Content:
2025-04-01T19:32:58.122Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:32:58.422Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:32:58.425Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 36,
    userId: "4a96ead5-0b5f-4fd2-9108-f3a9ddf44b56",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: "Mathematics",
          topics: [
            "Basic Algebra",
            "Geometry Fundamentals"
          ],
          type: "Lecture & Practice"
        },
        {
          time: "11:00 AM - 12:30 PM",
          subject: "Science",
          topics: [
            "Introduction to Biology",
            "Basic Chemistry Concepts"
          ],
          type: "Reading & Note-Taking"
        },
        {
          time: "2:00 PM - 3:30 PM",
          subject: "English",
          topics: [
            "Grammar Basics",
            "Vocabulary Building"
          ],
          type: "Exercises & Review"
        },
        {
          time: "4:00 PM - 5:30 PM",
          subject: "History",
          topics: [
            "Ancient Civilizations",
            "World History Overview"
          ],
          type: "Documentary & Discussion"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 36,
    userId: "4a96ead5-0b5f-4fd2-9108-f3a9ddf44b56",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: {
      set: [
        {
          time: "9:00 AM - 10:30 AM",
          subject: "Mathematics",
          topics: [
            "Basic Algebra",
            "Geometry Fundamentals"
          ],
          type: "Lecture & Practice"
        },
        {
          time: "11:00 AM - 12:30 PM",
          subject: "Science",
          topics: [
            "Introduction to Biology",
            "Basic Chemistry Concepts"
          ],
          type: "Reading & Note-Taking"
        },
        {
          time: "2:00 PM - 3:30 PM",
          subject: "English",
          topics: [
            "Grammar Basics",
            "Vocabulary Building"
          ],
          type: "Exercises & Review"
        },
        {
          time: "4:00 PM - 5:30 PM",
          subject: "History",
          topics: [
            "Ancient Civilizations",
            "World History Overview"
          ],
          type: "Documentary & Discussion"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        activity: "Short Break"
      },
      {
        time: "1:00 PM",
        activity: "Lunch Break"
      }
    ],
    dailyTargets: [
      "Complete core topics",
      "Practice problems"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-01T19:32:58.428Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:32:58.429Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 36
2025-04-01T19:32:59.993Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 36
2025-04-01T19:33:00.244Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:33:00.246Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:33:00.577Z info [C -> Context.<anonymous>]: Test user created: 75a1c6a9-6e87-48a3-af3e-78a95a52e517
2025-04-01T19:33:00.578Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:33:01.904Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:33:01.905Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 37
2025-04-01T19:33:02.724Z info [C -> Context.<anonymous>]: Study plan created: 37
2025-04-01T19:33:02.727Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:33:02.728Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 37
2025-04-01T19:33:04.410Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 37
2025-04-01T19:33:04.669Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:33:04.670Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:33:04.920Z info [C -> Context.<anonymous>]: Test user created: b170c1ac-da50-4b01-a7f1-125deefb64d9
2025-04-01T19:33:04.922Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:33:06.514Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:33:06.516Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 38
2025-04-01T19:33:07.434Z info [C -> Context.<anonymous>]: Study plan created: 38
2025-04-01T19:33:07.437Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 38
2025-04-01T19:33:07.438Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 38
2025-04-01T19:33:12.248Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:33:12.249Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 38
2025-04-01T19:33:14.904Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 38
2025-04-01T19:33:15.421Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:33:15.426Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:33:15.677Z info [C -> Context.<anonymous>]: Test user created: c786d00f-a8d1-4904-a970-67ab7276dcdf
2025-04-01T19:33:15.677Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:33:17.876Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:33:17.878Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 39
2025-04-01T19:33:19.107Z info [C -> Context.<anonymous>]: Study plan created: 39
2025-04-01T19:33:24.268Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:33:24.536Z info [C -> Context.<anonymous>]: Test user created: 5022ff33-f963-4d73-aa92-b7c526d7ae92
2025-04-01T19:33:24.537Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:33:26.114Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:33:26.115Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 40
2025-04-01T19:33:26.938Z info [C -> Context.<anonymous>]: Study plan created: 40
2025-04-01T19:33:26.939Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 40
2025-04-01T19:33:34.171Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:33:34.719Z info [C -> Context.<anonymous>]: Test user created: bfa651ce-fa8b-4752-b8ea-958af6582f8e
2025-04-01T19:33:34.721Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:33:36.106Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:33:36.107Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 41
2025-04-01T19:33:36.898Z info [C -> Context.<anonymous>]: Study plan created: 41
2025-04-01T19:33:36.899Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 41
2025-04-01T19:33:38.564Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 41
2025-04-01T19:33:38.566Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 41
2025-04-01T19:33:38.871Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 41: Study plan with id 41 not found
Error: Study plan with id 41 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T19:36:47.520Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:36:50.259Z info [C -> Context.<anonymous>]: Test user created with id: b9687b0f-9617-4cd8-8358-d00ca59f3280
2025-04-01T19:36:50.262Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:36:52.764Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:36:52.765Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 42
2025-04-01T19:36:53.780Z info [C -> Context.<anonymous>]: Test study plan created with id: 42
2025-04-01T19:36:53.782Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:36:53.783Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:36:53.783Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:36:55.800Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 42,
    userId: "b9687b0f-9617-4cd8-8358-d00ca59f3280",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 42,
    userId: "b9687b0f-9617-4cd8-8358-d00ca59f3280",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:240:28)
2025-04-01T19:36:55.802Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 42,
    userId: "b9687b0f-9617-4cd8-8358-d00ca59f3280",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 42,
    userId: "b9687b0f-9617-4cd8-8358-d00ca59f3280",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:240:28)
2025-04-01T19:36:55.804Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:36:55.805Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 42
2025-04-01T19:36:58.040Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 42
2025-04-01T19:36:58.600Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:36:58.601Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:36:58.961Z info [C -> Context.<anonymous>]: Test user created with id: 09b41b28-1d60-42e9-960e-e1bb5c0587bb
2025-04-01T19:36:58.962Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:36:59.269Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:36:59.270Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 43
2025-04-01T19:36:59.884Z info [C -> Context.<anonymous>]: Test study plan created with id: 43
2025-04-01T19:36:59.885Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:36:59.885Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:36:59.886Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:36:59.889Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 43,
    userId: "09b41b28-1d60-42e9-960e-e1bb5c0587bb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 43,
    userId: "09b41b28-1d60-42e9-960e-e1bb5c0587bb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T19:36:59.890Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 43,
    userId: "09b41b28-1d60-42e9-960e-e1bb5c0587bb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 43,
    userId: "09b41b28-1d60-42e9-960e-e1bb5c0587bb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T19:36:59.892Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:36:59.892Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 43
2025-04-01T19:37:01.521Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 43
2025-04-01T19:37:01.829Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:01.830Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:02.086Z info [C -> Context.<anonymous>]: Test user created with id: 613035cc-402e-4b6b-b7da-4176b06a4ec4
2025-04-01T19:37:02.087Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:02.340Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:02.341Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 44
2025-04-01T19:37:02.955Z info [C -> Context.<anonymous>]: Test study plan created with id: 44
2025-04-01T19:37:02.957Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:02.958Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:02.958Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:02.961Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 44,
    userId: "613035cc-402e-4b6b-b7da-4176b06a4ec4",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 44,
    userId: "613035cc-402e-4b6b-b7da-4176b06a4ec4",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:260:28)
2025-04-01T19:37:02.963Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 44,
    userId: "613035cc-402e-4b6b-b7da-4176b06a4ec4",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 44,
    userId: "613035cc-402e-4b6b-b7da-4176b06a4ec4",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:260:28)
2025-04-01T19:37:02.966Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:02.967Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 44
2025-04-01T19:37:04.746Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 44
2025-04-01T19:37:05.255Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:05.257Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:05.617Z info [C -> Context.<anonymous>]: Test user created with id: 67d81123-d0d5-428b-ad56-5b22b32ae830
2025-04-01T19:37:05.618Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:05.925Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:05.926Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 45
2025-04-01T19:37:06.539Z info [C -> Context.<anonymous>]: Test study plan created with id: 45
2025-04-01T19:37:06.540Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:06.541Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:06.542Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:06.545Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 45,
    userId: "67d81123-d0d5-428b-ad56-5b22b32ae830",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 45,
    userId: "67d81123-d0d5-428b-ad56-5b22b32ae830",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:275:28)
2025-04-01T19:37:06.546Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 45,
    userId: "67d81123-d0d5-428b-ad56-5b22b32ae830",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 45,
    userId: "67d81123-d0d5-428b-ad56-5b22b32ae830",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:275:28)
2025-04-01T19:37:06.548Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:06.549Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 45
2025-04-01T19:37:08.280Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 45
2025-04-01T19:37:08.537Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:08.539Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:08.794Z info [C -> Context.<anonymous>]: Test user created with id: 55095bfd-5d66-4b99-b8e5-31db9784dfe6
2025-04-01T19:37:08.796Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:09.327Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:09.328Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 46
2025-04-01T19:37:09.865Z info [C -> Context.<anonymous>]: Test study plan created with id: 46
2025-04-01T19:37:09.867Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T19:37:09.873Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:09.874Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 46
2025-04-01T19:37:11.432Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 46
2025-04-01T19:37:11.762Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:11.763Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:12.068Z info [C -> Context.<anonymous>]: Test user created with id: d8a98221-2211-4ec9-8b84-f9a71a3f8dcf
2025-04-01T19:37:12.069Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:12.322Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:12.323Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 47
2025-04-01T19:37:12.888Z info [C -> Context.<anonymous>]: Test study plan created with id: 47
2025-04-01T19:37:12.890Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T19:37:13.146Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:37:13.656Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:37:13.657Z info [C -> ScheduleService.getScheduleById]: Retrieved Schedule:
2025-04-01T19:37:13.658Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: Record to delete does not exist
Error: Record to delete does not exist
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:250:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T19:37:13.661Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:13.662Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 47
2025-04-01T19:37:15.291Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 47
2025-04-01T19:37:15.546Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:15.547Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:15.858Z info [C -> Context.<anonymous>]: Test user created with id: cbbb34f1-3bac-4e20-b72b-2cd5e841e3df
2025-04-01T19:37:15.859Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:16.165Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:16.166Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 48
2025-04-01T19:37:16.780Z info [C -> Context.<anonymous>]: Test study plan created with id: 48
2025-04-01T19:37:16.783Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T19:37:17.088Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."type"::text, "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."targets", "public"."Schedule"."tests", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."revision", "public"."Schedule"."metadata", "public"."Schedule"."dailySchedule", "public"."Schedule"."weeklySchedule", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: ["invalid-id",1,0]
2025-04-01T19:37:17.093Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:283:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T19:37:17.127Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:17.128Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 48
2025-04-01T19:37:18.771Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 48
2025-04-01T19:37:19.032Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:19.033Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:19.339Z info [C -> Context.<anonymous>]: Test user created with id: 63b39ad3-0311-4fd8-8571-638952a0baf7
2025-04-01T19:37:19.340Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:19.649Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:19.650Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 49
2025-04-01T19:37:20.159Z info [C -> Context.<anonymous>]: Test study plan created with id: 49
2025-04-01T19:37:20.162Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:20.162Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 49
2025-04-01T19:37:21.899Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 49
2025-04-01T19:37:22.513Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:22.515Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:22.820Z info [C -> Context.<anonymous>]: Test user created with id: 403f196a-5ef6-4d47-ba82-5d012cf13ea0
2025-04-01T19:37:22.821Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:23.074Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:23.075Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 50
2025-04-01T19:37:23.611Z info [C -> Context.<anonymous>]: Test study plan created with id: 50
2025-04-01T19:37:23.614Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot read properties of null (reading 'subjects')
TypeError: Cannot read properties of null (reading 'subjects')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:50:44)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:343:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T19:37:23.618Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:23.620Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 50
2025-04-01T19:37:25.254Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 50
2025-04-01T19:37:25.585Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:25.588Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:28.350Z info [C -> Context.<anonymous>]: Test user created: 3c5f596c-1112-4551-9fb8-2c646a63dd9b
2025-04-01T19:37:28.351Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:30.491Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:30.491Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 51
2025-04-01T19:37:31.525Z info [C -> Context.<anonymous>]: Study plan created: 51
2025-04-01T19:37:31.529Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:31.531Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:31.532Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:31.786Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:37:31.791Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 51,
    userId: "3c5f596c-1112-4551-9fb8-2c646a63dd9b",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 51,
    userId: "3c5f596c-1112-4551-9fb8-2c646a63dd9b",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-01T19:37:31.794Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 51,
    userId: "3c5f596c-1112-4551-9fb8-2c646a63dd9b",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 51,
    userId: "3c5f596c-1112-4551-9fb8-2c646a63dd9b",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-01T19:37:31.797Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:31.798Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 51
2025-04-01T19:37:33.470Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 51
2025-04-01T19:37:34.042Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:34.043Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:34.306Z info [C -> Context.<anonymous>]: Test user created: cd7b5d3c-4c67-46fa-bc4b-6cfbb2bd94fb
2025-04-01T19:37:34.307Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:35.668Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:35.669Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 52
2025-04-01T19:37:36.440Z info [C -> Context.<anonymous>]: Study plan created: 52
2025-04-01T19:37:36.441Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 52
2025-04-01T19:37:39.512Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:39.513Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:39.514Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:39.516Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 52,
    userId: "cd7b5d3c-4c67-46fa-bc4b-6cfbb2bd94fb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Updated DS",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 8
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 52,
    userId: "cd7b5d3c-4c67-46fa-bc4b-6cfbb2bd94fb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Updated DS",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 8
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T19:37:39.517Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 52,
    userId: "cd7b5d3c-4c67-46fa-bc4b-6cfbb2bd94fb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Updated DS",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 8
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 52,
    userId: "cd7b5d3c-4c67-46fa-bc4b-6cfbb2bd94fb",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Updated DS",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 8
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T19:37:39.519Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:39.519Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 52
2025-04-01T19:37:41.262Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 52
2025-04-01T19:37:41.560Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:41.563Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:41.824Z info [C -> Context.<anonymous>]: Test user created: c79cbe14-dc96-46da-a511-7c28be518f34
2025-04-01T19:37:41.826Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:43.302Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:43.304Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 53
2025-04-01T19:37:44.231Z info [C -> Context.<anonymous>]: Study plan created: 53
2025-04-01T19:37:44.233Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:44.233Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:44.234Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:44.238Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 53,
    userId: "c79cbe14-dc96-46da-a511-7c28be518f34",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 53,
    userId: "c79cbe14-dc96-46da-a511-7c28be518f34",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:37:44.239Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 53,
    userId: "c79cbe14-dc96-46da-a511-7c28be518f34",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 53,
    userId: "c79cbe14-dc96-46da-a511-7c28be518f34",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T19:37:44.242Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:44.242Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 53
2025-04-01T19:37:46.170Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 53
2025-04-01T19:37:46.739Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:46.740Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:47.001Z info [C -> Context.<anonymous>]: Test user created: 965d8bad-a9a0-4b7d-97aa-232ed2be6281
2025-04-01T19:37:47.002Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:48.364Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:48.366Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 54
2025-04-01T19:37:49.241Z info [C -> Context.<anonymous>]: Study plan created: 54
2025-04-01T19:37:49.242Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:49.243Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:49.244Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:49.547Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:37:49.551Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 54,
    userId: "965d8bad-a9a0-4b7d-97aa-232ed2be6281",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 54,
    userId: "965d8bad-a9a0-4b7d-97aa-232ed2be6281",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-01T19:37:49.553Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 54,
    userId: "965d8bad-a9a0-4b7d-97aa-232ed2be6281",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 54,
    userId: "965d8bad-a9a0-4b7d-97aa-232ed2be6281",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-01T19:37:49.555Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:49.556Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 54
2025-04-01T19:37:51.185Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 54
2025-04-01T19:37:51.493Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:51.494Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:51.801Z info [C -> Context.<anonymous>]: Test user created: e84f17d3-96a2-4ec5-a8ed-ac77d86b5a2d
2025-04-01T19:37:51.802Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:53.182Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:53.183Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 55
2025-04-01T19:37:53.952Z info [C -> Context.<anonymous>]: Study plan created: 55
2025-04-01T19:37:53.955Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:53.956Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:53.958Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:53.963Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 55,
    userId: "e84f17d3-96a2-4ec5-a8ed-ac77d86b5a2d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 55,
    userId: "e84f17d3-96a2-4ec5-a8ed-ac77d86b5a2d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-01T19:37:53.964Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 55,
    userId: "e84f17d3-96a2-4ec5-a8ed-ac77d86b5a2d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 55,
    userId: "e84f17d3-96a2-4ec5-a8ed-ac77d86b5a2d",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-01T19:37:53.966Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:53.967Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 55
2025-04-01T19:37:55.646Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 55
2025-04-01T19:37:55.954Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:37:55.955Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:37:56.306Z info [C -> Context.<anonymous>]: Test user created: 55e75af2-5160-4438-8b67-de0156b22002
2025-04-01T19:37:56.307Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:37:57.638Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:37:57.639Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 56
2025-04-01T19:37:58.447Z info [C -> Context.<anonymous>]: Study plan created: 56
2025-04-01T19:37:58.449Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:37:58.450Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:37:58.451Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:37:58.454Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 56,
    userId: "55e75af2-5160-4438-8b67-de0156b22002",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 56,
    userId: "55e75af2-5160-4438-8b67-de0156b22002",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-01T19:37:58.456Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 56,
    userId: "55e75af2-5160-4438-8b67-de0156b22002",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 56,
    userId: "55e75af2-5160-4438-8b67-de0156b22002",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-01T19:37:58.458Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:37:58.458Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 56
2025-04-01T19:38:00.040Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 56
2025-04-01T19:38:00.307Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:38:00.311Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:38:00.607Z info [C -> Context.<anonymous>]: Test user created: 6158024e-3f83-41e7-b803-d7dbc5d05a99
2025-04-01T19:38:00.607Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:02.154Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:02.155Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 57
2025-04-01T19:38:02.952Z info [C -> Context.<anonymous>]: Study plan created: 57
2025-04-01T19:38:02.954Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T19:38:02.955Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:38:02.956Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 57
2025-04-01T19:38:04.703Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 57
2025-04-01T19:38:05.317Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:38:05.318Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:38:05.628Z info [C -> Context.<anonymous>]: Test user created: ff76b4d7-33ff-45fe-8222-8f886bab62f6
2025-04-01T19:38:05.629Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:06.956Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:06.957Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 58
2025-04-01T19:38:07.718Z info [C -> Context.<anonymous>]: Study plan created: 58
2025-04-01T19:38:07.720Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 58
2025-04-01T19:38:07.722Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 58
2025-04-01T19:38:12.588Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T19:38:12.588Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 58
2025-04-01T19:38:15.098Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 58
2025-04-01T19:38:15.369Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T19:38:15.373Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:38:15.660Z info [C -> Context.<anonymous>]: Test user created: f4aad00e-403c-4711-8845-7a58e63d82a8
2025-04-01T19:38:15.660Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:18.117Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:18.119Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 59
2025-04-01T19:38:19.154Z info [C -> Context.<anonymous>]: Study plan created: 59
2025-04-01T19:38:22.638Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:38:25.080Z info [C -> Context.<anonymous>]: Test user created: 997e1657-24d6-47f2-9663-d35a8a44ccf4
2025-04-01T19:38:25.081Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:26.923Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:26.924Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 60
2025-04-01T19:38:27.696Z info [C -> Context.<anonymous>]: Study plan created: 60
2025-04-01T19:38:27.697Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 60
2025-04-01T19:38:33.807Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T19:38:36.243Z info [C -> Context.<anonymous>]: Test user created: 371c3bf2-2fc9-49fe-beef-cf58371d7175
2025-04-01T19:38:36.244Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:37.644Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:37.646Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 61
2025-04-01T19:38:38.599Z info [C -> Context.<anonymous>]: Study plan created: 61
2025-04-01T19:38:38.600Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 61
2025-04-01T19:38:40.441Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 61
2025-04-01T19:38:40.443Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 61
2025-04-01T19:38:41.004Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 61: Study plan with id 61 not found
Error: Study plan with id 61 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T19:38:46.688Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:48.127Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:48.128Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 62
2025-04-01T19:38:48.912Z info [C -> ScheduleService.generateDaySchedule]: Generate Day Schedule Request:
2025-04-01T19:38:48.913Z info [C -> ScheduleService.generateDaySchedule]: Generating schedule for day 1/90
2025-04-01T19:38:48.914Z info [C -> ScheduleService.generateDaySchedule]: Prepared Schedule Data:
2025-04-01T19:38:49.247Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T19:38:49.251Z error [C -> ScheduleService.generateDaySchedule]: Error in day 1 schedule: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 62,
    userId: "7533e0fe-852b-4649-8448-7baa50de1283",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 62,
    userId: "7533e0fe-852b-4649-8448-7baa50de1283",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-01T19:38:49.253Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 62,
    userId: "7533e0fe-852b-4649-8448-7baa50de1283",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    studyPlanId: 62,
    userId: "7533e0fe-852b-4649-8448-7baa50de1283",
    dayNumber: 1,
    focus: "Daily Focus",
    sessions: [
      {
        time: "09:00 AM",
        subject: "Data Structures",
        topics: [
          "Topic 1",
          "Topic 2"
        ],
        type: "STUDY"
      }
    ],
    breaks: [
      {
        time: "11:00 AM",
        duration: "15min"
      }
    ],
    dailyTargets: [
      "Complete core topics"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 90,
      progress: 1.1111111111111112,
      dailyHours: 6
    },
+   type: ScheduleType
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `type` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:102:39)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-01T19:38:49.554Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T19:38:50.953Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T19:38:50.954Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 63
2025-04-01T19:38:51.910Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:01:03.026Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:05.261Z info [C -> Context.<anonymous>]: Test user created with id: 2016a80f-f242-4840-a354-e112d95d9f94
2025-04-01T20:01:05.263Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:07.726Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:07.728Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 1
2025-04-01T20:01:08.902Z info [C -> Context.<anonymous>]: Test study plan created with id: 1
2025-04-01T20:01:08.904Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:240:28)
2025-04-01T20:01:08.906Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:08.906Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 1
2025-04-01T20:01:11.413Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 1
2025-04-01T20:01:11.924Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:11.926Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:12.162Z info [C -> Context.<anonymous>]: Test user created with id: 9f2bbbbe-37e2-4bb5-9374-18077750b9a0
2025-04-01T20:01:12.163Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:12.436Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:12.438Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 2
2025-04-01T20:01:12.961Z info [C -> Context.<anonymous>]: Test study plan created with id: 2
2025-04-01T20:01:12.963Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:250:28)
2025-04-01T20:01:12.964Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:12.965Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 2
2025-04-01T20:01:14.743Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 2
2025-04-01T20:01:14.996Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:14.999Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:15.304Z info [C -> Context.<anonymous>]: Test user created with id: 7e4ee65d-24b6-47da-b972-19659221bd0b
2025-04-01T20:01:15.306Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:15.569Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:15.571Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 3
2025-04-01T20:01:16.122Z info [C -> Context.<anonymous>]: Test study plan created with id: 3
2025-04-01T20:01:16.124Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:260:28)
2025-04-01T20:01:16.126Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:16.126Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 3
2025-04-01T20:01:17.869Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 3
2025-04-01T20:01:18.171Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:18.173Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:18.478Z info [C -> Context.<anonymous>]: Test user created with id: bdde7150-5b5b-4747-bb34-060b36894a2f
2025-04-01T20:01:18.479Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:18.785Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:18.787Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 4
2025-04-01T20:01:19.307Z info [C -> Context.<anonymous>]: Test study plan created with id: 4
2025-04-01T20:01:19.310Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:275:28)
2025-04-01T20:01:19.314Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:19.315Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 4
2025-04-01T20:01:21.037Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 4
2025-04-01T20:01:21.631Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:21.633Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:21.866Z info [C -> Context.<anonymous>]: Test user created with id: b7cd76d0-8620-4779-a1c9-62a044e533b2
2025-04-01T20:01:21.867Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:22.165Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:22.167Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 5
2025-04-01T20:01:23.086Z info [C -> Context.<anonymous>]: Test study plan created with id: 5
2025-04-01T20:01:23.088Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:01:23.096Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:23.097Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 5
2025-04-01T20:01:24.881Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 5
2025-04-01T20:01:25.134Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:25.135Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:25.440Z info [C -> Context.<anonymous>]: Test user created with id: fb653e94-bdd2-42aa-8865-eaed2a8689ce
2025-04-01T20:01:25.441Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:25.748Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:25.750Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 6
2025-04-01T20:01:26.269Z info [C -> Context.<anonymous>]: Test study plan created with id: 6
2025-04-01T20:01:26.270Z info [C -> ScheduleService.getScheduleById]: Get Schedule By ID Request:
2025-04-01T20:01:28.213Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  include: {
    studyPlan: true
  }
}

Argument `id`: Invalid value provided. Expected Int, provided String.
PrismaClientValidationError: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  include: {
    studyPlan: true
  }
}

Argument `id`: Invalid value provided. Expected Int, provided String.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:223:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T20:01:28.215Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:28.216Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 6
2025-04-01T20:01:29.804Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 6
2025-04-01T20:01:30.050Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:30.052Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:30.288Z info [C -> Context.<anonymous>]: Test user created with id: 8a98d1ae-7f7a-4361-a4ed-59150ec3d07d
2025-04-01T20:01:30.290Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:30.562Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:30.564Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 7
2025-04-01T20:01:31.130Z info [C -> Context.<anonymous>]: Test study plan created with id: 7
2025-04-01T20:01:31.132Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T20:01:31.134Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
PrismaClientValidationError: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:263:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T20:01:31.136Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:31.136Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 7
2025-04-01T20:01:32.936Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 7
2025-04-01T20:01:33.175Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:33.178Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:33.428Z info [C -> Context.<anonymous>]: Test user created with id: a4acf6d4-2983-44bc-9ee1-fb272808c482
2025-04-01T20:01:33.430Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:33.694Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:33.696Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 8
2025-04-01T20:01:34.247Z info [C -> Context.<anonymous>]: Test study plan created with id: 8
2025-04-01T20:01:34.250Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:34.250Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 8
2025-04-01T20:01:36.091Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 8
2025-04-01T20:01:36.399Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:36.401Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:36.937Z info [C -> Context.<anonymous>]: Test user created with id: 65235af3-f137-4453-87d2-97ba504276e1
2025-04-01T20:01:36.938Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:37.217Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:37.218Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 9
2025-04-01T20:01:37.784Z info [C -> Context.<anonymous>]: Test study plan created with id: 9
2025-04-01T20:01:37.786Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot read properties of null (reading 'subjects')
TypeError: Cannot read properties of null (reading 'subjects')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:50:44)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:343:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:01:37.788Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:37.788Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 9
2025-04-01T20:01:39.880Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 9
2025-04-01T20:01:40.186Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:40.189Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:42.642Z info [C -> Context.<anonymous>]: Test user created: 6c9592bc-f4ab-45d9-bf45-d56b995d1e80
2025-04-01T20:01:42.643Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:44.746Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:44.747Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 10
2025-04-01T20:01:45.822Z info [C -> Context.<anonymous>]: Study plan created: 10
2025-04-01T20:01:45.826Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-01T20:01:45.828Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:45.828Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 10
2025-04-01T20:01:47.576Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 10
2025-04-01T20:01:48.174Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:48.176Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:48.481Z info [C -> Context.<anonymous>]: Test user created: 1c2b99bd-258b-40e8-b5e0-f00c04c17c34
2025-04-01T20:01:48.483Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:50.077Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:50.078Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-01T20:01:50.939Z info [C -> Context.<anonymous>]: Study plan created: 11
2025-04-01T20:01:50.941Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 11
2025-04-01T20:01:54.114Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T20:01:54.116Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:54.117Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 11
2025-04-01T20:01:56.122Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 11
2025-04-01T20:01:56.439Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:01:56.441Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:01:56.692Z info [C -> Context.<anonymous>]: Test user created: 92569846-0b8c-4247-8c93-56830509bb86
2025-04-01T20:01:56.694Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:01:58.016Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:01:58.017Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-01T20:01:58.794Z info [C -> Context.<anonymous>]: Study plan created: 12
2025-04-01T20:01:58.795Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T20:01:58.797Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:01:58.798Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 12
2025-04-01T20:02:00.564Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 12
2025-04-01T20:02:01.122Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:01.123Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:01.383Z info [C -> Context.<anonymous>]: Test user created: 1d2765c6-96fb-431f-a202-d6ce7da662ad
2025-04-01T20:02:01.384Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:02.711Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:02.713Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 13
2025-04-01T20:02:03.534Z info [C -> Context.<anonymous>]: Study plan created: 13
2025-04-01T20:02:03.535Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-01T20:02:03.537Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:02:03.537Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 13
2025-04-01T20:02:05.233Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 13
2025-04-01T20:02:05.482Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:05.483Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:05.733Z info [C -> Context.<anonymous>]: Test user created: f16d276f-4a72-4848-b069-3889f6018c20
2025-04-01T20:02:05.735Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:07.219Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:07.220Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 14
2025-04-01T20:02:08.141Z info [C -> Context.<anonymous>]: Study plan created: 14
2025-04-01T20:02:08.142Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-01T20:02:08.146Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:02:08.147Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 14
2025-04-01T20:02:09.795Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 14
2025-04-01T20:02:10.086Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:10.088Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:10.337Z info [C -> Context.<anonymous>]: Test user created: 4b010488-2fed-4125-97a4-870ce59b7e3f
2025-04-01T20:02:10.338Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:12.033Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:12.035Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 15
2025-04-01T20:02:12.904Z info [C -> Context.<anonymous>]: Study plan created: 15
2025-04-01T20:02:12.906Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-01T20:02:12.909Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:02:12.910Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 15
2025-04-01T20:02:14.606Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 15
2025-04-01T20:02:14.859Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:14.862Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:15.120Z info [C -> Context.<anonymous>]: Test user created: 481c5f41-92dc-460f-843e-0972ad694bab
2025-04-01T20:02:15.122Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:16.640Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:16.641Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 16
2025-04-01T20:02:17.564Z info [C -> Context.<anonymous>]: Study plan created: 16
2025-04-01T20:02:17.565Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:02:17.568Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:02:17.569Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 16
2025-04-01T20:02:19.303Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 16
2025-04-01T20:02:19.815Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:19.817Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:20.123Z info [C -> Context.<anonymous>]: Test user created: e6545c92-a610-48ed-a9b7-8bc568ca1be1
2025-04-01T20:02:20.124Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:21.559Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:21.561Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 17
2025-04-01T20:02:22.477Z info [C -> Context.<anonymous>]: Study plan created: 17
2025-04-01T20:02:22.479Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 17
2025-04-01T20:02:22.480Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 17
2025-04-01T20:02:27.394Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:02:27.395Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 17
2025-04-01T20:02:29.953Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 17
2025-04-01T20:02:30.260Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:02:30.263Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:30.512Z info [C -> Context.<anonymous>]: Test user created: ae29eaf4-d0bf-4fdc-8035-949beac7f366
2025-04-01T20:02:30.513Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:32.661Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:32.662Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 18
2025-04-01T20:02:33.788Z info [C -> Context.<anonymous>]: Study plan created: 18
2025-04-01T20:02:37.254Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:39.656Z info [C -> Context.<anonymous>]: Test user created: 63b15889-ad6b-42d8-a210-23ffc1c9cfd3
2025-04-01T20:02:39.657Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:41.317Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:41.319Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 19
2025-04-01T20:02:42.127Z info [C -> Context.<anonymous>]: Study plan created: 19
2025-04-01T20:02:42.129Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 19
2025-04-01T20:02:47.717Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:02:50.052Z info [C -> Context.<anonymous>]: Test user created: 6e76cfd8-5cfb-498e-b3b0-5dee5f3d96ca
2025-04-01T20:02:50.053Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:02:51.354Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:02:51.355Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 20
2025-04-01T20:02:52.174Z info [C -> Context.<anonymous>]: Study plan created: 20
2025-04-01T20:02:52.176Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 20
2025-04-01T20:02:53.826Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 20
2025-04-01T20:02:53.827Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 20
2025-04-01T20:02:54.080Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 20: Study plan with id 20 not found
Error: Study plan with id 20 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T20:02:59.555Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:03:01.177Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:03:01.178Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 21
2025-04-01T20:03:02.005Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:79:48)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-01T20:03:02.311Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:03:03.852Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:03:03.854Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 22
2025-04-01T20:03:04.662Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:32:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:68:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:11:18.255Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:21.149Z info [C -> Context.<anonymous>]: Test user created with id: c544299a-8bfb-4389-b8b7-409df251d4b0
2025-04-01T20:11:21.151Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:23.564Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:23.566Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 23
2025-04-01T20:11:24.587Z info [C -> Context.<anonymous>]: Test study plan created with id: 23
2025-04-01T20:11:28.992Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:29.498Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 23
2025-04-01T20:11:31.448Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 23
2025-04-01T20:11:31.917Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:11:31.918Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:32.152Z info [C -> Context.<anonymous>]: Test user created with id: 0be18c3a-b493-41a2-8f77-c8f036462520
2025-04-01T20:11:32.154Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:32.398Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:32.399Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 24
2025-04-01T20:11:32.984Z info [C -> Context.<anonymous>]: Test study plan created with id: 24
2025-04-01T20:11:34.560Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:34.822Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 24
2025-04-01T20:11:36.467Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 24
2025-04-01T20:11:36.932Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:11:36.934Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:37.183Z info [C -> Context.<anonymous>]: Test user created with id: 7d0a31ca-887e-420e-8ddc-ca74400df35f
2025-04-01T20:11:37.184Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:37.427Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:37.429Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 25
2025-04-01T20:11:37.911Z info [C -> Context.<anonymous>]: Test study plan created with id: 25
2025-04-01T20:11:39.642Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:39.897Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 25
2025-04-01T20:11:41.593Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 25
2025-04-01T20:11:41.824Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:11:41.827Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:42.059Z info [C -> Context.<anonymous>]: Test user created with id: 14663b5a-627e-4caf-a026-6e0eca5a7606
2025-04-01T20:11:42.061Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:42.304Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:42.305Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 26
2025-04-01T20:11:42.854Z info [C -> Context.<anonymous>]: Test study plan created with id: 26
2025-04-01T20:11:45.599Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:45.851Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 26
2025-04-01T20:11:47.423Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 26
2025-04-01T20:11:47.731Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:11:47.733Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:48.037Z info [C -> Context.<anonymous>]: Test user created with id: bad1efc2-7f83-469f-9121-8e3775cb9515
2025-04-01T20:11:48.038Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:48.280Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:48.281Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 27
2025-04-01T20:11:48.856Z info [C -> Context.<anonymous>]: Test study plan created with id: 27
2025-04-01T20:11:50.401Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T20:11:52.214Z error [C -> ScheduleService.updateSchedule]: Error updating schedule 5: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: 5
  },
  data: {
    focus: "Updated Focus Area",
    targets: [
    ~~~~~~~
      "New Target 1",
      "New Target 2"
    ],
?   type?: ScheduleType | EnumScheduleTypeFieldUpdateOperationsInput,
?   dayNumber?: Int | IntFieldUpdateOperationsInput,
?   sessions?: JsonNullValueInput | Json,
?   breaks?: JsonNullValueInput | Json,
?   dailyTargets?: JsonNullValueInput | Json,
?   metadata?: JsonNullValueInput | Json,
?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   studyPlan?: StudyPlanUpdateOneRequiredWithoutSchedulesNestedInput,
?   user?: UserUpdateOneRequiredWithoutSchedulesNestedInput
  }
}

Unknown argument `targets`. Available options are marked with ?.
PrismaClientValidationError: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: 5
  },
  data: {
    focus: "Updated Focus Area",
    targets: [
    ~~~~~~~
      "New Target 1",
      "New Target 2"
    ],
?   type?: ScheduleType | EnumScheduleTypeFieldUpdateOperationsInput,
?   dayNumber?: Int | IntFieldUpdateOperationsInput,
?   sessions?: JsonNullValueInput | Json,
?   breaks?: JsonNullValueInput | Json,
?   dailyTargets?: JsonNullValueInput | Json,
?   metadata?: JsonNullValueInput | Json,
?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   studyPlan?: StudyPlanUpdateOneRequiredWithoutSchedulesNestedInput,
?   user?: UserUpdateOneRequiredWithoutSchedulesNestedInput
  }
}

Unknown argument `targets`. Available options are marked with ?.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:263:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:290:37)
2025-04-01T20:11:52.217Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:52.468Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 27
2025-04-01T20:11:53.917Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 27
2025-04-01T20:11:54.422Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:11:54.423Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:54.669Z info [C -> Context.<anonymous>]: Test user created with id: 8f60eb99-1571-4f68-bcb5-f5a224043500
2025-04-01T20:11:54.670Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:54.914Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:54.915Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 28
2025-04-01T20:11:55.405Z info [C -> Context.<anonymous>]: Test study plan created with id: 28
2025-04-01T20:11:57.525Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule 6: Schedule with id 6 not found
Error: Schedule with id 6 not found
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:230:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:297:37)
2025-04-01T20:11:57.528Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:57.780Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:11:57.782Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:11:57.783Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:58.014Z info [C -> Context.<anonymous>]: Test user created with id: 302a7422-99c4-49ee-8a7b-765918ceb4b9
2025-04-01T20:11:58.016Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:58.500Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:58.501Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 29
2025-04-01T20:11:58.997Z info [C -> Context.<anonymous>]: Test study plan created with id: 29
2025-04-01T20:11:58.998Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:11:59.002Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:11:59.520Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:11:59.521Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:11:59.522Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:11:59.754Z info [C -> Context.<anonymous>]: Test user created with id: 7866af2b-f416-481a-a357-1feaa130fbb1
2025-04-01T20:11:59.755Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:11:59.998Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:11:59.999Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 30
2025-04-01T20:12:00.482Z info [C -> Context.<anonymous>]: Test study plan created with id: 30
2025-04-01T20:12:00.486Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `id` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `id` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:221:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T20:12:00.488Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:00.746Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:00.747Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:00.748Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:00.986Z info [C -> Context.<anonymous>]: Test user created with id: 0c2f7e19-b236-47b6-85d3-a93fd3c57921
2025-04-01T20:12:00.987Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:01.236Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:01.238Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 31
2025-04-01T20:12:01.759Z info [C -> Context.<anonymous>]: Test study plan created with id: 31
2025-04-01T20:12:01.761Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T20:12:01.764Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
PrismaClientValidationError: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:263:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T20:12:01.766Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:02.068Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:02.069Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:02.070Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:02.304Z info [C -> Context.<anonymous>]: Test user created with id: 4c29cf38-b486-4cf8-b47c-1687eac773ff
2025-04-01T20:12:02.305Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:02.561Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:02.561Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 32
2025-04-01T20:12:03.043Z info [C -> Context.<anonymous>]: Test study plan created with id: 32
2025-04-01T20:12:03.045Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:03.297Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:03.299Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:03.301Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:03.539Z info [C -> Context.<anonymous>]: Test user created with id: 40ea743e-13d3-43f2-96be-d58a42b6253c
2025-04-01T20:12:03.540Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:03.782Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:03.783Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 33
2025-04-01T20:12:04.264Z info [C -> Context.<anonymous>]: Test study plan created with id: 33
2025-04-01T20:12:04.266Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot read properties of null (reading 'subjects')
TypeError: Cannot read properties of null (reading 'subjects')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:51:44)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:343:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:12:04.267Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:04.525Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 6: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:04.527Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:12:04.529Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:06.914Z info [C -> Context.<anonymous>]: Test user created: c4cf5f16-8bd6-4f7f-bf63-9af8ecd49253
2025-04-01T20:12:06.915Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:08.825Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:08.826Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 34
2025-04-01T20:12:09.890Z info [C -> Context.<anonymous>]: Study plan created: 34
2025-04-01T20:12:11.590Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:11.896Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 34
2025-04-01T20:12:13.535Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 34
2025-04-01T20:12:14.017Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:14.018Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:14.259Z info [C -> Context.<anonymous>]: Test user created: b6598404-b0db-4680-8bcf-a6541c8b6238
2025-04-01T20:12:14.260Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:15.889Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:15.890Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 35
2025-04-01T20:12:16.736Z info [C -> Context.<anonymous>]: Study plan created: 35
2025-04-01T20:12:16.737Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 35
2025-04-01T20:12:21.577Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:21.829Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 35
2025-04-01T20:12:23.467Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 35
2025-04-01T20:12:23.980Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:23.982Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:24.287Z info [C -> Context.<anonymous>]: Test user created: 279f32de-35c2-4e88-a387-b451dfe82916
2025-04-01T20:12:24.288Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:25.721Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:25.722Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 36
2025-04-01T20:12:26.472Z info [C -> Context.<anonymous>]: Study plan created: 36
2025-04-01T20:12:27.974Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:28.238Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 36
2025-04-01T20:12:29.918Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 36
2025-04-01T20:12:30.226Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:30.227Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:30.469Z info [C -> Context.<anonymous>]: Test user created: ae84d69b-6008-4166-aa74-822dcef2c838
2025-04-01T20:12:30.470Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:32.041Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:32.042Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 37
2025-04-01T20:12:32.888Z info [C -> Context.<anonymous>]: Study plan created: 37
2025-04-01T20:12:34.518Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:34.771Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 37
2025-04-01T20:12:36.473Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 37
2025-04-01T20:12:36.715Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:36.716Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:36.956Z info [C -> Context.<anonymous>]: Test user created: 09f2fe12-148f-4ce6-8f79-f315139c74ed
2025-04-01T20:12:36.957Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:38.418Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:38.419Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 38
2025-04-01T20:12:39.204Z info [C -> Context.<anonymous>]: Study plan created: 38
2025-04-01T20:12:41.183Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 38
2025-04-01T20:12:45.178Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:45.477Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 38
2025-04-01T20:12:47.262Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 38
2025-04-01T20:12:47.773Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:47.802Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:48.045Z info [C -> Context.<anonymous>]: Test user created: 33df0472-356b-4c5b-bf88-95cf2d946a68
2025-04-01T20:12:48.046Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:49.279Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:49.280Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 39
2025-04-01T20:12:50.024Z info [C -> Context.<anonymous>]: Study plan created: 39
2025-04-01T20:12:51.577Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 39
2025-04-01T20:12:55.507Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:12:56.008Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 39
2025-04-01T20:12:57.478Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 39
2025-04-01T20:12:57.760Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:12:57.762Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:12:58.014Z info [C -> Context.<anonymous>]: Test user created: 343306df-5bad-436a-9382-d7d00132bf1e
2025-04-01T20:12:58.015Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:12:59.338Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:12:59.339Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 40
2025-04-01T20:13:00.154Z info [C -> Context.<anonymous>]: Study plan created: 40
2025-04-01T20:13:00.155Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:13:00.158Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:13:00.429Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 13: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:13:00.431Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:13:00.432Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:13:00.714Z info [C -> Context.<anonymous>]: Test user created: 0b1cc17a-de58-4f85-95bb-5d5a3b876d0f
2025-04-01T20:13:00.715Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:02.076Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:02.077Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 41
2025-04-01T20:13:03.123Z info [C -> Context.<anonymous>]: Study plan created: 41
2025-04-01T20:13:03.124Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 41
2025-04-01T20:13:03.124Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 41
2025-04-01T20:13:07.334Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:13:07.586Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 13: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:13:07.587Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:277:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:13:07.591Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:13:08.073Z info [C -> Context.<anonymous>]: Test user created: 941b5f9b-b265-4a19-9393-2055155ab89e
2025-04-01T20:13:08.074Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:10.165Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:10.166Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 42
2025-04-01T20:13:11.426Z info [C -> Context.<anonymous>]: Study plan created: 42
2025-04-01T20:13:14.425Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:13:16.755Z info [C -> Context.<anonymous>]: Test user created: 1e94234d-db3e-4691-8765-7e1673b2495e
2025-04-01T20:13:16.756Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:18.149Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:18.150Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 43
2025-04-01T20:13:18.936Z info [C -> Context.<anonymous>]: Study plan created: 43
2025-04-01T20:13:18.937Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 43
2025-04-01T20:13:24.653Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:13:27.160Z info [C -> Context.<anonymous>]: Test user created: cc3e2e42-401f-4558-b945-6fd6752d8120
2025-04-01T20:13:27.162Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:28.901Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:28.902Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 44
2025-04-01T20:13:29.690Z info [C -> Context.<anonymous>]: Study plan created: 44
2025-04-01T20:13:29.693Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 44
2025-04-01T20:13:31.943Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 44
2025-04-01T20:13:31.945Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 44
2025-04-01T20:13:32.189Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 44: Study plan with id 44 not found
Error: Study plan with id 44 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T20:13:37.912Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:39.346Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:39.348Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 45
2025-04-01T20:13:42.419Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:13:44.057Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:13:44.058Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 46
2025-04-01T20:13:44.876Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:18:23.405Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:25.863Z info [C -> Context.<anonymous>]: Test user created with id: eb49667a-725d-4040-9e27-39d6fe907054
2025-04-01T20:18:25.865Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:18:28.180Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:18:28.182Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 47
2025-04-01T20:18:29.173Z info [C -> Context.<anonymous>]: Test study plan created with id: 47
2025-04-01T20:18:31.394Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:18:31.957Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",47,"eb49667a-725d-4040-9e27-39d6fe907054",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:18:31.084 UTC","2025-04-01 20:18:31.084 UTC"]
2025-04-01T20:18:32.519Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [16,1,0]
2025-04-01T20:18:33.092Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [47,0]
2025-04-01T20:18:33.707Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["eb49667a-725d-4040-9e27-39d6fe907054",0]
2025-04-01T20:18:33.978Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:18:33.985Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:18:34.525Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [16]
2025-04-01T20:18:34.528Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 47
2025-04-01T20:18:36.649Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 47
2025-04-01T20:18:37.199Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:18:37.200Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:37.538Z info [C -> Context.<anonymous>]: Test user created with id: 61ea1ef0-37ae-43bd-a9c0-a9cb8ab299d8
2025-04-01T20:18:37.540Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:18:37.851Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:18:37.852Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 48
2025-04-01T20:18:38.356Z info [C -> Context.<anonymous>]: Test study plan created with id: 48
2025-04-01T20:18:38.624Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:18:38.890Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",48,"61ea1ef0-37ae-43bd-a9c0-a9cb8ab299d8",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:18:38.359 UTC","2025-04-01 20:18:38.359 UTC"]
2025-04-01T20:18:39.155Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [17,1,0]
2025-04-01T20:18:39.420Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [48,0]
2025-04-01T20:18:39.684Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["61ea1ef0-37ae-43bd-a9c0-a9cb8ab299d8",0]
2025-04-01T20:18:39.949Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:18:39.951Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:18:40.219Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [17]
2025-04-01T20:18:40.220Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 48
2025-04-01T20:18:41.940Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 48
2025-04-01T20:18:42.408Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:18:42.409Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:42.639Z info [C -> Context.<anonymous>]: Test user created with id: 5c843e53-c1e5-4b8c-8a18-df04d49de6bf
2025-04-01T20:18:42.640Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:18:42.880Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:18:42.881Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 49
2025-04-01T20:18:43.644Z info [C -> Context.<anonymous>]: Test study plan created with id: 49
2025-04-01T20:18:43.988Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:18:44.253Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",49,"5c843e53-c1e5-4b8c-8a18-df04d49de6bf",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:18:43.647 UTC","2025-04-01 20:18:43.647 UTC"]
2025-04-01T20:18:44.517Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [18,1,0]
2025-04-01T20:18:44.807Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [49,0]
2025-04-01T20:18:45.073Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["5c843e53-c1e5-4b8c-8a18-df04d49de6bf",0]
2025-04-01T20:18:45.338Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:18:45.341Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:18:45.609Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [18]
2025-04-01T20:18:45.611Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 49
2025-04-01T20:18:47.163Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 49
2025-04-01T20:18:47.394Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:18:47.400Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:47.674Z info [C -> Context.<anonymous>]: Test user created with id: 934bdda4-4b8a-4485-ab68-4be40d78d289
2025-04-01T20:18:47.675Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:18:47.915Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:18:47.916Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 50
2025-04-01T20:18:48.404Z info [C -> Context.<anonymous>]: Test study plan created with id: 50
2025-04-01T20:18:48.673Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:18:48.939Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:18:49.210Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",50,"934bdda4-4b8a-4485-ab68-4be40d78d289",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:18:48.409 UTC","2025-04-01 20:18:48.409 UTC"]
2025-04-01T20:18:49.477Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [19,1,0]
2025-04-01T20:18:49.742Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [50,0]
2025-04-01T20:18:50.016Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["934bdda4-4b8a-4485-ab68-4be40d78d289",0]
2025-04-01T20:18:50.337Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:18:50.951Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: [19,1,0]
2025-04-01T20:18:51.258Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [50,0]
2025-04-01T20:18:51.566Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["934bdda4-4b8a-4485-ab68-4be40d78d289",0]
2025-04-01T20:18:51.569Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:18:51.836Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [19]
2025-04-01T20:18:51.837Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 50
2025-04-01T20:18:53.544Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 50
2025-04-01T20:18:53.786Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:18:53.787Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:54.126Z info [C -> Context.<anonymous>]: Test user created with id: 49839561-f780-43f5-915f-10c50837ba80
2025-04-01T20:18:54.127Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:18:54.434Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:18:54.435Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 51
2025-04-01T20:18:54.915Z info [C -> Context.<anonymous>]: Test study plan created with id: 51
2025-04-01T20:18:55.252Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:18:55.518Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",51,"49839561-f780-43f5-915f-10c50837ba80",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:18:54.918 UTC","2025-04-01 20:18:54.918 UTC"]
2025-04-01T20:18:55.784Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [20,1,0]
2025-04-01T20:18:56.073Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [51,0]
2025-04-01T20:18:56.378Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["49839561-f780-43f5-915f-10c50837ba80",0]
2025-04-01T20:18:56.645Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:18:56.647Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T20:18:56.653Z error [C -> ScheduleService.updateSchedule]: Error updating schedule 20: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: 20
  },
  data: {
    focus: "Updated Focus Area",
    targets: [
    ~~~~~~~
      "New Target 1",
      "New Target 2"
    ],
?   type?: ScheduleType | EnumScheduleTypeFieldUpdateOperationsInput,
?   dayNumber?: Int | IntFieldUpdateOperationsInput,
?   sessions?: JsonNullValueInput | Json,
?   breaks?: JsonNullValueInput | Json,
?   dailyTargets?: JsonNullValueInput | Json,
?   metadata?: JsonNullValueInput | Json,
?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   studyPlan?: StudyPlanUpdateOneRequiredWithoutSchedulesNestedInput,
?   user?: UserUpdateOneRequiredWithoutSchedulesNestedInput
  }
}

Unknown argument `targets`. Available options are marked with ?.
PrismaClientValidationError: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: 20
  },
  data: {
    focus: "Updated Focus Area",
    targets: [
    ~~~~~~~
      "New Target 1",
      "New Target 2"
    ],
?   type?: ScheduleType | EnumScheduleTypeFieldUpdateOperationsInput,
?   dayNumber?: Int | IntFieldUpdateOperationsInput,
?   sessions?: JsonNullValueInput | Json,
?   breaks?: JsonNullValueInput | Json,
?   dailyTargets?: JsonNullValueInput | Json,
?   metadata?: JsonNullValueInput | Json,
?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,
?   studyPlan?: StudyPlanUpdateOneRequiredWithoutSchedulesNestedInput,
?   user?: UserUpdateOneRequiredWithoutSchedulesNestedInput
  }
}

Unknown argument `targets`. Available options are marked with ?.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:261:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:290:37)
2025-04-01T20:18:56.655Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:18:56.923Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [20]
2025-04-01T20:18:56.924Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 51
2025-04-01T20:18:58.733Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 51
2025-04-01T20:18:59.247Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:18:59.249Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:18:59.554Z info [C -> Context.<anonymous>]: Test user created with id: ee2eae84-e455-4d74-abc9-a6da97967d81
2025-04-01T20:18:59.555Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:00.144Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:00.144Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 52
2025-04-01T20:19:00.716Z info [C -> Context.<anonymous>]: Test study plan created with id: 52
2025-04-01T20:19:00.981Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:01.296Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",52,"ee2eae84-e455-4d74-abc9-a6da97967d81",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:00.719 UTC","2025-04-01 20:19:00.719 UTC"]
2025-04-01T20:19:01.600Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [21,1,0]
2025-04-01T20:19:01.865Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [52,0]
2025-04-01T20:19:02.129Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["ee2eae84-e455-4d74-abc9-a6da97967d81",0]
2025-04-01T20:19:02.395Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:02.728Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:03.006Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3, params: [21,1,0]
2025-04-01T20:19:03.009Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule 21: Schedule with id 21 not found
Error: Schedule with id 21 not found
    at ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:228:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:297:37)
2025-04-01T20:19:03.012Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:03.283Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:03.288Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:03.289Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:03.293Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:03.523Z info [C -> Context.<anonymous>]: Test user created with id: 4a92997f-a8e4-4075-a531-08283fa54058
2025-04-01T20:19:03.525Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:03.855Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:03.856Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 53
2025-04-01T20:19:04.332Z info [C -> Context.<anonymous>]: Test study plan created with id: 53
2025-04-01T20:19:04.333Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:305:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:19:04.335Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:04.601Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:19:04.909Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:04.912Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:04.913Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:04.914Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:05.145Z info [C -> Context.<anonymous>]: Test user created with id: 59ef8131-9b8b-43c3-a31e-359cbf7e8208
2025-04-01T20:19:05.146Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:05.492Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:05.493Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 54
2025-04-01T20:19:05.979Z info [C -> Context.<anonymous>]: Test study plan created with id: 54
2025-04-01T20:19:05.983Z error [C -> ScheduleService.getScheduleById]: Error fetching schedule invalid-id: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `id` is missing.
PrismaClientValidationError: 
Invalid `prisma.schedule.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `id` is missing.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.getScheduleById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:219:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:314:17)
2025-04-01T20:19:05.985Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:06.312Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:06.315Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:06.317Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:06.319Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:06.551Z info [C -> Context.<anonymous>]: Test user created with id: 095a1688-3ca0-44c4-ad7e-a181fb4da220
2025-04-01T20:19:06.552Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:06.794Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:06.795Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 55
2025-04-01T20:19:07.336Z info [C -> Context.<anonymous>]: Test study plan created with id: 55
2025-04-01T20:19:07.338Z info [C -> ScheduleService.updateSchedule]: Update Schedule Request:
2025-04-01T20:19:07.343Z error [C -> ScheduleService.updateSchedule]: Error updating schedule invalid-id: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
PrismaClientValidationError: 
Invalid `prisma.schedule.update()` invocation:

{
  where: {
    id: "invalid-id"
        ~~~~~~~~~~~~
  },
  data: {}
}

Argument `id`: Invalid value provided. Expected Int, provided String.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.updateSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:261:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:323:17)
2025-04-01T20:19:07.347Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:07.641Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:07.643Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:07.644Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:07.645Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:07.949Z info [C -> Context.<anonymous>]: Test user created with id: 3a0ed398-ebcd-4a88-8e81-4bf0b5a9beff
2025-04-01T20:19:07.950Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:08.189Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:08.190Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 56
2025-04-01T20:19:08.700Z info [C -> Context.<anonymous>]: Test study plan created with id: 56
2025-04-01T20:19:08.702Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:08.974Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:08.978Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:08.979Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:08.981Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:09.281Z info [C -> Context.<anonymous>]: Test user created with id: d68e252a-4605-4b3d-a3d6-42230bc2f75a
2025-04-01T20:19:09.283Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:09.588Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:09.589Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 57
2025-04-01T20:19:10.107Z info [C -> Context.<anonymous>]: Test study plan created with id: 57
2025-04-01T20:19:10.110Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot read properties of null (reading 'subjects')
TypeError: Cannot read properties of null (reading 'subjects')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:51:44)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:343:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:19:10.113Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:10.402Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [21]
2025-04-01T20:19:10.406Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 21: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:10.408Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:224:17)
2025-04-01T20:19:10.412Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:12.741Z info [C -> Context.<anonymous>]: Test user created: ff4ffd40-63b1-4f16-af14-c9f013e88be3
2025-04-01T20:19:12.742Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:14.679Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:14.680Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 58
2025-04-01T20:19:15.700Z info [C -> Context.<anonymous>]: Study plan created: 58
2025-04-01T20:19:15.976Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:16.241Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",58,"ff4ffd40-63b1-4f16-af14-c9f013e88be3",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:15.704 UTC","2025-04-01 20:19:15.704 UTC"]
2025-04-01T20:19:16.590Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [22,1,0]
2025-04-01T20:19:16.853Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [58,0]
2025-04-01T20:19:17.121Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["ff4ffd40-63b1-4f16-af14-c9f013e88be3",0]
2025-04-01T20:19:17.396Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:17.399Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:17.670Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [22]
2025-04-01T20:19:17.671Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 58
2025-04-01T20:19:19.661Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 58
2025-04-01T20:19:20.202Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:19:20.203Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:20.469Z info [C -> Context.<anonymous>]: Test user created: a940cc48-b325-4422-8321-81622235fa72
2025-04-01T20:19:20.470Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:21.732Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:21.733Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 59
2025-04-01T20:19:22.626Z info [C -> Context.<anonymous>]: Study plan created: 59
2025-04-01T20:19:22.627Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 59
2025-04-01T20:19:25.648Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:19:25.917Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:26.184Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",59,"a940cc48-b325-4422-8321-81622235fa72",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Updated DS","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:25.337 UTC","2025-04-01 20:19:25.337 UTC"]
2025-04-01T20:19:26.485Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [23,1,0]
2025-04-01T20:19:26.796Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [59,0]
2025-04-01T20:19:27.207Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["a940cc48-b325-4422-8321-81622235fa72",0]
2025-04-01T20:19:27.473Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:27.477Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:27.816Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [23]
2025-04-01T20:19:27.818Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 59
2025-04-01T20:19:29.343Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 59
2025-04-01T20:19:29.863Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:19:29.866Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:30.171Z info [C -> Context.<anonymous>]: Test user created: 4a0aecd7-82ea-4fd1-bc08-8a14383fa02b
2025-04-01T20:19:30.172Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:31.605Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:31.606Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 60
2025-04-01T20:19:32.356Z info [C -> Context.<anonymous>]: Study plan created: 60
2025-04-01T20:19:32.731Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:33.038Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",60,"4a0aecd7-82ea-4fd1-bc08-8a14383fa02b",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:32.360 UTC","2025-04-01 20:19:32.360 UTC"]
2025-04-01T20:19:33.304Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [24,1,0]
2025-04-01T20:19:33.569Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [60,0]
2025-04-01T20:19:33.852Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["4a0aecd7-82ea-4fd1-bc08-8a14383fa02b",0]
2025-04-01T20:19:34.122Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:34.125Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:34.393Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [24]
2025-04-01T20:19:34.395Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 60
2025-04-01T20:19:36.520Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 60
2025-04-01T20:19:36.768Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:19:36.769Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:37.014Z info [C -> Context.<anonymous>]: Test user created: 07fff88e-dcba-4631-81b0-4d0ea01154a1
2025-04-01T20:19:37.015Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:38.281Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:38.282Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 61
2025-04-01T20:19:39.046Z info [C -> Context.<anonymous>]: Study plan created: 61
2025-04-01T20:19:39.367Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:39.633Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",61,"07fff88e-dcba-4631-81b0-4d0ea01154a1",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:39.049 UTC","2025-04-01 20:19:39.049 UTC"]
2025-04-01T20:19:40.002Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [25,1,0]
2025-04-01T20:19:40.308Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [61,0]
2025-04-01T20:19:40.573Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["07fff88e-dcba-4631-81b0-4d0ea01154a1",0]
2025-04-01T20:19:40.924Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:40.927Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:41.230Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:19:41.537Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [25]
2025-04-01T20:19:41.538Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 61
2025-04-01T20:19:43.212Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 61
2025-04-01T20:19:43.463Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:19:43.465Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:43.715Z info [C -> Context.<anonymous>]: Test user created: d52e2615-4e9a-4fb8-9366-9719a6947fdb
2025-04-01T20:19:43.717Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:45.121Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:45.122Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 62
2025-04-01T20:19:45.837Z info [C -> Context.<anonymous>]: Study plan created: 62
2025-04-01T20:19:46.145Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:46.452Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",62,"d52e2615-4e9a-4fb8-9366-9719a6947fdb",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:45.840 UTC","2025-04-01 20:19:45.840 UTC"]
2025-04-01T20:19:46.743Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [26,1,0]
2025-04-01T20:19:47.068Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [62,0]
2025-04-01T20:19:47.374Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d52e2615-4e9a-4fb8-9366-9719a6947fdb",0]
2025-04-01T20:19:47.755Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:47.756Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 62
2025-04-01T20:19:50.140Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:50.413Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",62,"d52e2615-4e9a-4fb8-9366-9719a6947fdb",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:49.835 UTC","2025-04-01 20:19:49.835 UTC"]
2025-04-01T20:19:50.683Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [27,1,0]
2025-04-01T20:19:51.060Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [62,0]
2025-04-01T20:19:51.368Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d52e2615-4e9a-4fb8-9366-9719a6947fdb",0]
2025-04-01T20:19:51.642Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:51.644Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:19:51.982Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [26]
2025-04-01T20:19:51.983Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 62
2025-04-01T20:19:53.924Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 62
2025-04-01T20:19:54.440Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:19:54.441Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:19:54.747Z info [C -> Context.<anonymous>]: Test user created: 6a247fb9-fdf3-4d02-85de-e3485f7d68ac
2025-04-01T20:19:54.748Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:19:56.048Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:19:56.049Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 63
2025-04-01T20:19:56.764Z info [C -> Context.<anonymous>]: Study plan created: 63
2025-04-01T20:19:57.030Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:19:57.307Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:19:57.574Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",63,"6a247fb9-fdf3-4d02-85de-e3485f7d68ac",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:19:56.767 UTC","2025-04-01 20:19:56.767 UTC"]
2025-04-01T20:19:57.838Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [28,1,0]
2025-04-01T20:19:58.138Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [63,0]
2025-04-01T20:19:58.433Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["6a247fb9-fdf3-4d02-85de-e3485f7d68ac",0]
2025-04-01T20:19:58.741Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:19:58.742Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 63
2025-04-01T20:20:01.329Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:20:01.608Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",63,"6a247fb9-fdf3-4d02-85de-e3485f7d68ac",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"New Subject","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:20:01.061 UTC","2025-04-01 20:20:01.061 UTC"]
2025-04-01T20:20:01.914Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [29,1,0]
2025-04-01T20:20:02.207Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [63,0]
2025-04-01T20:20:02.529Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["6a247fb9-fdf3-4d02-85de-e3485f7d68ac",0]
2025-04-01T20:20:02.808Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-01T20:20:02.810Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:20:03.144Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [28]
2025-04-01T20:20:03.146Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 63
2025-04-01T20:20:04.884Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 63
2025-04-01T20:20:05.132Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:20:05.134Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:20:05.385Z info [C -> Context.<anonymous>]: Test user created: 7849cab1-d12b-4dfe-be08-d6f65aab7379
2025-04-01T20:20:05.386Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:20:06.807Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:20:06.809Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 64
2025-04-01T20:20:07.547Z info [C -> Context.<anonymous>]: Study plan created: 64
2025-04-01T20:20:07.548Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:20:07.550Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:20:07.817Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [28]
2025-04-01T20:20:07.819Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 28: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:20:07.820Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:20:07.821Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:20:08.067Z info [C -> Context.<anonymous>]: Test user created: 35efb8a4-6047-4693-bf99-002c1e8a526f
2025-04-01T20:20:08.068Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:20:09.629Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:20:09.630Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 65
2025-04-01T20:20:10.516Z info [C -> Context.<anonymous>]: Study plan created: 65
2025-04-01T20:20:10.517Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 65
2025-04-01T20:20:10.518Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 65
2025-04-01T20:20:14.949Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:20:15.227Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:20:15.493Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [28]
2025-04-01T20:20:15.495Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 28: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:20:15.496Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-01T20:20:15.498Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:20:16.048Z info [C -> Context.<anonymous>]: Test user created: 22e91a39-d758-4b45-9ca4-bc1f89ee4b02
2025-04-01T20:20:16.049Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:20:18.307Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:20:18.308Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 66
2025-04-01T20:20:19.568Z info [C -> Context.<anonymous>]: Study plan created: 66
2025-04-01T20:22:51.990Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:22:52.617Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",1,"066a03fc-105a-4665-9ff5-ed9cc68c420e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:22:51.745 UTC","2025-04-01 20:22:51.745 UTC"]
2025-04-01T20:22:52.866Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [1,1,0]
2025-04-01T20:22:53.110Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:22:53.118Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:212:28)
2025-04-01T20:22:53.123Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:22:55.791Z info [C -> Context.<anonymous>]: Test user created: 5be83c9f-d1df-4f5c-a8ae-309b8d5d8a3c
2025-04-01T20:22:55.793Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:22:59.730Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:22:59.733Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 2
2025-04-01T20:23:01.217Z info [C -> Context.<anonymous>]: Study plan created: 2
2025-04-01T20:23:01.527Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:01.834Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",2,"5be83c9f-d1df-4f5c-a8ae-309b8d5d8a3c",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:01.221 UTC","2025-04-01 20:23:01.221 UTC"]
2025-04-01T20:23:02.076Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [2,1,0]
2025-04-01T20:23:02.320Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:02.322Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-01T20:23:02.324Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:02.325Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 2
2025-04-01T20:23:04.495Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 2
2025-04-01T20:23:05.109Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:05.110Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:05.386Z info [C -> Context.<anonymous>]: Test user created: 3e538827-4b18-4a82-88d5-969fcb2193f5
2025-04-01T20:23:05.387Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:06.850Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:06.851Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 3
2025-04-01T20:23:07.684Z info [C -> Context.<anonymous>]: Study plan created: 3
2025-04-01T20:23:07.686Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 3
2025-04-01T20:23:10.641Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:23:10.884Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:11.152Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",3,"3e538827-4b18-4a82-88d5-969fcb2193f5",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Updated DS","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:10.334 UTC","2025-04-01 20:23:10.334 UTC"]
2025-04-01T20:23:11.459Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [3,1,0]
2025-04-01T20:23:11.700Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:11.702Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-01T20:23:11.704Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:11.704Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 3
2025-04-01T20:23:13.507Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 3
2025-04-01T20:23:14.122Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:14.125Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:14.429Z info [C -> Context.<anonymous>]: Test user created: dde49bd7-5311-423d-bcc0-4820adba6a7e
2025-04-01T20:23:14.431Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:15.906Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:15.907Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 4
2025-04-01T20:23:16.592Z info [C -> Context.<anonymous>]: Study plan created: 4
2025-04-01T20:23:16.886Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:17.134Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",4,"dde49bd7-5311-423d-bcc0-4820adba6a7e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:16.595 UTC","2025-04-01 20:23:16.595 UTC"]
2025-04-01T20:23:17.376Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [4,1,0]
2025-04-01T20:23:17.707Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:17.710Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-01T20:23:17.711Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:17.712Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 4
2025-04-01T20:23:19.155Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 4
2025-04-01T20:23:19.420Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:19.422Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:19.753Z info [C -> Context.<anonymous>]: Test user created: 8b241e22-712c-44e0-88ce-5a39edbbaf1e
2025-04-01T20:23:19.753Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:20.914Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:20.915Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 5
2025-04-01T20:23:21.596Z info [C -> Context.<anonymous>]: Study plan created: 5
2025-04-01T20:23:21.840Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:22.085Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",5,"8b241e22-712c-44e0-88ce-5a39edbbaf1e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:21.599 UTC","2025-04-01 20:23:21.599 UTC"]
2025-04-01T20:23:22.328Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [5,1,0]
2025-04-01T20:23:22.569Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:22.571Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-01T20:23:22.572Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:22.573Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 5
2025-04-01T20:23:24.068Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 5
2025-04-01T20:23:24.360Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:24.363Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:24.655Z info [C -> Context.<anonymous>]: Test user created: 34ee233d-5446-4a23-aab9-faccc8584e0c
2025-04-01T20:23:24.656Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:26.015Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:26.016Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 6
2025-04-01T20:23:26.819Z info [C -> Context.<anonymous>]: Study plan created: 6
2025-04-01T20:23:27.126Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:23:27.433Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:27.676Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",6,"34ee233d-5446-4a23-aab9-faccc8584e0c",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:26.823 UTC","2025-04-01 20:23:26.823 UTC"]
2025-04-01T20:23:27.924Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [6,1,0]
2025-04-01T20:23:28.253Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:28.256Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-01T20:23:28.258Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:28.259Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 6
2025-04-01T20:23:29.993Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 6
2025-04-01T20:23:30.608Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:30.610Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:30.877Z info [C -> Context.<anonymous>]: Test user created: 2889c3cd-6aa0-4dc6-a4b2-6c684e827ba3
2025-04-01T20:23:30.879Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:32.452Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:32.454Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 7
2025-04-01T20:23:33.167Z info [C -> Context.<anonymous>]: Study plan created: 7
2025-04-01T20:23:33.410Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:23:33.652Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",7,"2889c3cd-6aa0-4dc6-a4b2-6c684e827ba3",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:23:33.170 UTC","2025-04-01 20:23:33.170 UTC"]
2025-04-01T20:23:33.947Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [7,1,0]
2025-04-01T20:23:34.293Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:23:34.296Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-01T20:23:34.298Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:34.298Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 7
2025-04-01T20:23:35.728Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 7
2025-04-01T20:23:35.997Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:35.998Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:36.267Z info [C -> Context.<anonymous>]: Test user created: 20f4c511-aa31-4846-ae88-377da84f72d2
2025-04-01T20:23:36.269Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:37.399Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:37.400Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 8
2025-04-01T20:23:38.082Z info [C -> Context.<anonymous>]: Study plan created: 8
2025-04-01T20:23:38.083Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-01T20:23:38.085Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:38.085Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 8
2025-04-01T20:23:39.447Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 8
2025-04-01T20:23:39.716Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:39.717Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:40.028Z info [C -> Context.<anonymous>]: Test user created: 1da489e1-511c-45e3-9890-45dbfd5514b9
2025-04-01T20:23:40.029Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:41.156Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:41.163Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 9
2025-04-01T20:23:41.826Z info [C -> Context.<anonymous>]: Study plan created: 9
2025-04-01T20:23:41.829Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 9
2025-04-01T20:23:41.831Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 9
2025-04-01T20:23:46.127Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-01T20:23:46.129Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 9
2025-04-01T20:23:48.559Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 9
2025-04-01T20:23:49.143Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-01T20:23:49.147Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:49.449Z info [C -> Context.<anonymous>]: Test user created: 17f2f48f-1dde-4f0e-a3cd-c86a745cea26
2025-04-01T20:23:49.451Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:51.460Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:51.461Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 10
2025-04-01T20:23:52.522Z info [C -> Context.<anonymous>]: Study plan created: 10
2025-04-01T20:23:56.037Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:23:58.390Z info [C -> Context.<anonymous>]: Test user created: b439f532-97af-4ade-b64c-dac0f5b32fe6
2025-04-01T20:23:58.391Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:23:59.792Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:23:59.794Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-01T20:24:00.851Z info [C -> Context.<anonymous>]: Study plan created: 11
2025-04-01T20:24:00.853Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 11
2025-04-01T20:24:06.172Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-01T20:24:08.484Z info [C -> Context.<anonymous>]: Test user created: e1d48695-abd4-49a7-8a55-2e548b78df1c
2025-04-01T20:24:08.487Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:24:09.822Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:24:09.822Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-01T20:24:10.531Z info [C -> Context.<anonymous>]: Study plan created: 12
2025-04-01T20:24:10.532Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 12
2025-04-01T20:24:11.977Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 12
2025-04-01T20:24:11.978Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-01T20:24:12.284Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 12: Study plan with id 12 not found
Error: Study plan with id 12 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-01T20:24:17.738Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:24:19.382Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:24:19.383Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 13
2025-04-01T20:24:20.414Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-01T20:24:20.680Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-01T20:24:20.974Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",13,"66f9ee25-fb7e-4ccf-b42e-f0d4c4c07d6a",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-01 20:24:20.171 UTC","2025-04-01 20:24:20.171 UTC"]
2025-04-01T20:24:21.221Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."weekNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [8,1,0]
2025-04-01T20:24:21.465Z info [C -> EventEmitter.<anonymous>]: Prisma Query: ROLLBACK, params: []
2025-04-01T20:24:21.468Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


The column `Schedule.weekNumber` does not exist in the current database.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-01T20:24:21.703Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-01T20:24:23.141Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-01T20:24:23.142Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 14
2025-04-01T20:24:24.163Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T17:28:50.643Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
PrismaClientInitializationError: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7835)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:201:24)
2025-04-05T17:28:54.778Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:28:57.052Z info [C -> Context.<anonymous>]: Test user created: 8ca539bc-ac2c-4bc3-8b68-16180d6dc47e
2025-04-05T17:28:57.054Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:00.465Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:00.467Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 1
2025-04-05T17:29:01.831Z info [C -> Context.<anonymous>]: Study plan created: 1
2025-04-05T17:29:03.692Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:04.163Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",1,"8ca539bc-ac2c-4bc3-8b68-16180d6dc47e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:03.462 UTC","2025-04-05 17:29:03.462 UTC"]
2025-04-05T17:29:04.627Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [1,1,0]
2025-04-05T17:29:05.089Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [1,0]
2025-04-05T17:29:05.547Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["8ca539bc-ac2c-4bc3-8b68-16180d6dc47e",0]
2025-04-05T17:29:05.776Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:05.778Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:06.239Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [1]
2025-04-05T17:29:06.240Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 1
2025-04-05T17:29:08.082Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 1
2025-04-05T17:29:08.582Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:08.583Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:08.837Z info [C -> Context.<anonymous>]: Test user created: 065721b5-703f-4c0f-b037-ff364c91fad7
2025-04-05T17:29:08.837Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:09.966Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:09.967Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 2
2025-04-05T17:29:10.642Z info [C -> Context.<anonymous>]: Study plan created: 2
2025-04-05T17:29:10.643Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 2
2025-04-05T17:29:13.360Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:13.589Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",2,"065721b5-703f-4c0f-b037-ff364c91fad7",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Updated DS","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:13.129 UTC","2025-04-05 17:29:13.129 UTC"]
2025-04-05T17:29:13.826Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [2,1,0]
2025-04-05T17:29:14.055Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [2,0]
2025-04-05T17:29:14.285Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["065721b5-703f-4c0f-b037-ff364c91fad7",0]
2025-04-05T17:29:14.523Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:14.527Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:14.759Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [2]
2025-04-05T17:29:14.760Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 2
2025-04-05T17:29:16.336Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 2
2025-04-05T17:29:16.842Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:16.844Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:17.097Z info [C -> Context.<anonymous>]: Test user created: 32346d00-9832-4396-88e1-c08c660411b1
2025-04-05T17:29:17.098Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:18.237Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:18.239Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 3
2025-04-05T17:29:18.917Z info [C -> Context.<anonymous>]: Study plan created: 3
2025-04-05T17:29:19.147Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-05T17:29:19.377Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:19.606Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",3,"32346d00-9832-4396-88e1-c08c660411b1",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:18.919 UTC","2025-04-05 17:29:18.919 UTC"]
2025-04-05T17:29:19.839Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [3,1,0]
2025-04-05T17:29:20.068Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [3,0]
2025-04-05T17:29:20.300Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["32346d00-9832-4396-88e1-c08c660411b1",0]
2025-04-05T17:29:20.529Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:20.531Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:20.763Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [3]
2025-04-05T17:29:20.764Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 3
2025-04-05T17:29:22.109Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 3
2025-04-05T17:29:22.360Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:22.361Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:22.612Z info [C -> Context.<anonymous>]: Test user created: 2645e4dc-566d-4c7b-b90d-a3456310b62e
2025-04-05T17:29:22.612Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:23.748Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:23.748Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 4
2025-04-05T17:29:24.427Z info [C -> Context.<anonymous>]: Study plan created: 4
2025-04-05T17:29:24.657Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:24.888Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",4,"2645e4dc-566d-4c7b-b90d-a3456310b62e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:24.429 UTC","2025-04-05 17:29:24.429 UTC"]
2025-04-05T17:29:25.119Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [4,1,0]
2025-04-05T17:29:25.348Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [4,0]
2025-04-05T17:29:25.577Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["2645e4dc-566d-4c7b-b90d-a3456310b62e",0]
2025-04-05T17:29:25.806Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:25.808Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:26.042Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [4]
2025-04-05T17:29:26.043Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 4
2025-04-05T17:29:27.409Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 4
2025-04-05T17:29:27.660Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:27.661Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:27.913Z info [C -> Context.<anonymous>]: Test user created: a3237ab9-0dd2-4ba0-9c4a-a29135aac87e
2025-04-05T17:29:27.914Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:29.046Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:29.047Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 5
2025-04-05T17:29:29.731Z info [C -> Context.<anonymous>]: Study plan created: 5
2025-04-05T17:29:29.961Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:30.190Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",5,"a3237ab9-0dd2-4ba0-9c4a-a29135aac87e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:29.733 UTC","2025-04-05 17:29:29.733 UTC"]
2025-04-05T17:29:30.421Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [5,1,0]
2025-04-05T17:29:30.649Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [5,0]
2025-04-05T17:29:30.878Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["a3237ab9-0dd2-4ba0-9c4a-a29135aac87e",0]
2025-04-05T17:29:31.108Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:31.109Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 5
2025-04-05T17:29:33.364Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:33.599Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",5,"a3237ab9-0dd2-4ba0-9c4a-a29135aac87e",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:33.135 UTC","2025-04-05 17:29:33.135 UTC"]
2025-04-05T17:29:33.829Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [6,1,0]
2025-04-05T17:29:34.068Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [5,0]
2025-04-05T17:29:34.300Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["a3237ab9-0dd2-4ba0-9c4a-a29135aac87e",0]
2025-04-05T17:29:34.531Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:34.535Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:34.766Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-05T17:29:34.998Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [5]
2025-04-05T17:29:35.000Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 5
2025-04-05T17:29:36.356Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 5
2025-04-05T17:29:36.860Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:36.863Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:37.114Z info [C -> Context.<anonymous>]: Test user created: 389b22c9-cc2b-45d5-83fe-b5308a509a0a
2025-04-05T17:29:37.115Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:38.248Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:38.250Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 6
2025-04-05T17:29:38.963Z info [C -> Context.<anonymous>]: Study plan created: 6
2025-04-05T17:29:39.200Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:39.438Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",6,"389b22c9-cc2b-45d5-83fe-b5308a509a0a",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:38.967 UTC","2025-04-05 17:29:38.967 UTC"]
2025-04-05T17:29:39.668Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [7,1,0]
2025-04-05T17:29:39.897Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [6,0]
2025-04-05T17:29:40.127Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["389b22c9-cc2b-45d5-83fe-b5308a509a0a",0]
2025-04-05T17:29:40.359Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:40.360Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 6
2025-04-05T17:29:42.617Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:29:42.845Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",6,"389b22c9-cc2b-45d5-83fe-b5308a509a0a",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"New Subject","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:29:42.389 UTC","2025-04-05 17:29:42.389 UTC"]
2025-04-05T17:29:43.076Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [8,1,0]
2025-04-05T17:29:43.305Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [6,0]
2025-04-05T17:29:43.533Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["389b22c9-cc2b-45d5-83fe-b5308a509a0a",0]
2025-04-05T17:29:43.762Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:29:43.764Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:43.995Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [7]
2025-04-05T17:29:43.996Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 6
2025-04-05T17:29:45.350Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 6
2025-04-05T17:29:45.606Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T17:29:45.608Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:45.858Z info [C -> Context.<anonymous>]: Test user created: 7e355a6f-8815-46a1-bd80-3d0d2b822031
2025-04-05T17:29:45.860Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:46.988Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:46.989Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 7
2025-04-05T17:29:47.888Z info [C -> Context.<anonymous>]: Study plan created: 7
2025-04-05T17:29:47.890Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T17:29:47.894Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:48.124Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [7]
2025-04-05T17:29:48.128Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 7: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T17:29:48.129Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T17:29:48.129Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:48.382Z info [C -> Context.<anonymous>]: Test user created: 18dadb70-842a-45e9-ac00-d234a538bc29
2025-04-05T17:29:48.383Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:49.573Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:49.575Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 8
2025-04-05T17:29:50.255Z info [C -> Context.<anonymous>]: Study plan created: 8
2025-04-05T17:29:50.257Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 8
2025-04-05T17:29:50.258Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 8
2025-04-05T17:29:54.176Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T17:29:54.409Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-05T17:29:54.651Z info [C -> EventEmitter.<anonymous>]: Prisma Query: DELETE FROM "public"."Schedule" WHERE ("public"."Schedule"."id" = $1 AND 1=1) RETURNING "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt", params: [7]
2025-04-05T17:29:54.653Z error [C -> ScheduleService.deleteSchedule]: Error deleting schedule 7: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T17:29:54.653Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:275:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T17:29:54.656Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:29:55.154Z info [C -> Context.<anonymous>]: Test user created: 17d8a6f2-47dd-4ca0-a638-601053ff02f4
2025-04-05T17:29:55.156Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:29:56.983Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:29:56.984Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 9
2025-04-05T17:29:58.139Z info [C -> Context.<anonymous>]: Study plan created: 9
2025-04-05T17:30:01.149Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:30:03.307Z info [C -> Context.<anonymous>]: Test user created: d3b12fe1-f71e-4253-8e67-cceae334d880
2025-04-05T17:30:03.309Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:30:04.465Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:30:04.466Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 10
2025-04-05T17:30:05.153Z info [C -> Context.<anonymous>]: Study plan created: 10
2025-04-05T17:30:05.154Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 10
2025-04-05T17:30:10.204Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T17:30:12.454Z info [C -> Context.<anonymous>]: Test user created: aeb09151-f5a1-413f-b403-96bcbfecaf8f
2025-04-05T17:30:12.455Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:30:13.926Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:30:13.927Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-05T17:30:14.650Z info [C -> Context.<anonymous>]: Study plan created: 11
2025-04-05T17:30:14.651Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 11
2025-04-05T17:30:16.584Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 11
2025-04-05T17:30:16.585Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 11
2025-04-05T17:30:16.830Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 11: Study plan with id 11 not found
Error: Study plan with id 11 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T17:30:21.989Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:30:23.193Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:30:23.194Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 12
2025-04-05T17:30:24.148Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT 1, params: []
2025-04-05T17:30:24.376Z info [C -> EventEmitter.<anonymous>]: Prisma Query: BEGIN, params: []
2025-04-05T17:30:24.603Z info [C -> EventEmitter.<anonymous>]: Prisma Query: INSERT INTO "public"."Schedule" ("type","studyPlanId","userId","dayNumber","focus","sessions","breaks","dailyTargets","metadata","createdAt","updatedAt") VALUES (CAST($1::text AS "public"."ScheduleType"),$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "public"."Schedule"."id", params: ["DAILY",12,"d81fac92-6abe-4a95-a332-90655be12b43",1,"Daily Focus",{"set":[{"time":"09:00 AM","subject":"Data Structures","topics":["Topic 1","Topic 2"],"type":"STUDY"}]},[{"time":"11:00 AM","duration":"15min"}],["Complete core topics"],{"currentDay":1,"totalDays":90,"progress":1.111111111111111,"status":"PENDING"},"2025-04-05 17:30:23.922 UTC","2025-04-05 17:30:23.922 UTC"]
2025-04-05T17:30:24.829Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."Schedule"."id", "public"."Schedule"."type"::text, "public"."Schedule"."studyPlanId", "public"."Schedule"."userId", "public"."Schedule"."dayNumber", "public"."Schedule"."focus", "public"."Schedule"."sessions", "public"."Schedule"."breaks", "public"."Schedule"."dailyTargets", "public"."Schedule"."metadata", "public"."Schedule"."createdAt", "public"."Schedule"."updatedAt" FROM "public"."Schedule" WHERE "public"."Schedule"."id" = $1 LIMIT $2 OFFSET $3, params: [9,1,0]
2025-04-05T17:30:25.055Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."StudyPlan"."id", "public"."StudyPlan"."userId", "public"."StudyPlan"."exam", "public"."StudyPlan"."studyDuration", "public"."StudyPlan"."dailyHours", "public"."StudyPlan"."subjects", "public"."StudyPlan"."optionals", "public"."StudyPlan"."studyStyle", "public"."StudyPlan"."numberOfAttempts", "public"."StudyPlan"."createdAt", "public"."StudyPlan"."updatedAt" FROM "public"."StudyPlan" WHERE "public"."StudyPlan"."id" IN ($1) OFFSET $2, params: [12,0]
2025-04-05T17:30:25.282Z info [C -> EventEmitter.<anonymous>]: Prisma Query: SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2, params: ["d81fac92-6abe-4a95-a332-90655be12b43",0]
2025-04-05T17:30:25.510Z info [C -> EventEmitter.<anonymous>]: Prisma Query: COMMIT, params: []
2025-04-05T17:30:25.755Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T17:30:26.954Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T17:30:26.955Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 13
2025-04-05T17:30:27.694Z error [C -> ScheduleService.generateDaySchedule]: Error generating schedule: Invalid study plan data
Error: Invalid study plan data
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:33:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:69:18)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:14:11.611Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:13.960Z info [C -> Context.<anonymous>]: Test user created: 16f64809-d5fa-4af2-b4a7-4e3bb1fa6bd8
2025-04-05T21:14:13.961Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:17.575Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:17.577Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 15
2025-04-05T21:14:19.030Z info [C -> Context.<anonymous>]: Study plan created: 15
2025-04-05T21:14:19.035Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:19.036Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 15
2025-04-05T21:14:20.927Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 15
2025-04-05T21:14:21.425Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:21.427Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:21.682Z info [C -> Context.<anonymous>]: Test user created: 01c86b12-ab08-443b-9958-6cf2afda2d79
2025-04-05T21:14:21.683Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:22.866Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:22.868Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 16
2025-04-05T21:14:23.608Z info [C -> Context.<anonymous>]: Study plan created: 16
2025-04-05T21:14:23.608Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 16
2025-04-05T21:14:26.203Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:26.204Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 16
2025-04-05T21:14:27.630Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 16
2025-04-05T21:14:27.882Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:27.883Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:28.129Z info [C -> Context.<anonymous>]: Test user created: d056bc05-91fe-4269-a462-814cce33b159
2025-04-05T21:14:28.130Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:29.311Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:29.312Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 17
2025-04-05T21:14:30.017Z info [C -> Context.<anonymous>]: Study plan created: 17
2025-04-05T21:14:30.019Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:30.020Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 17
2025-04-05T21:14:31.438Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 17
2025-04-05T21:14:31.933Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:31.934Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:32.181Z info [C -> Context.<anonymous>]: Test user created: 189faf23-8cf8-486c-9147-edc516897023
2025-04-05T21:14:32.182Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:33.599Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:33.600Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 18
2025-04-05T21:14:34.314Z info [C -> Context.<anonymous>]: Study plan created: 18
2025-04-05T21:14:34.316Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:34.317Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 18
2025-04-05T21:14:35.736Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 18
2025-04-05T21:14:35.984Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:35.986Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:36.234Z info [C -> Context.<anonymous>]: Test user created: 0e3da8fa-e4b4-4e2a-9149-510ccdcb6079
2025-04-05T21:14:36.236Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:37.428Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:37.429Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 19
2025-04-05T21:14:38.136Z info [C -> Context.<anonymous>]: Study plan created: 19
2025-04-05T21:14:38.139Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:38.140Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 19
2025-04-05T21:14:39.569Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 19
2025-04-05T21:14:39.825Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:39.827Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:40.077Z info [C -> Context.<anonymous>]: Test user created: 8d2da3b0-dd81-4b20-8a8f-f386132ea45c
2025-04-05T21:14:40.078Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:41.263Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:41.264Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 20
2025-04-05T21:14:41.973Z info [C -> Context.<anonymous>]: Study plan created: 20
2025-04-05T21:14:41.976Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:41.977Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 20
2025-04-05T21:14:43.408Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 20
2025-04-05T21:14:43.658Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:43.661Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:43.908Z info [C -> Context.<anonymous>]: Test user created: 2a3f7438-fba4-4dd4-899e-7ddec8ec68cb
2025-04-05T21:14:43.909Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:45.092Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:45.093Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 21
2025-04-05T21:14:45.801Z info [C -> Context.<anonymous>]: Study plan created: 21
2025-04-05T21:14:45.803Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:45.805Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 21
2025-04-05T21:14:47.233Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 21
2025-04-05T21:14:47.732Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:47.734Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:47.981Z info [C -> Context.<anonymous>]: Test user created: 17299cdd-ca82-450b-86f1-35c44d5d272c
2025-04-05T21:14:47.983Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:49.402Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:49.403Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 22
2025-04-05T21:14:50.113Z info [C -> Context.<anonymous>]: Study plan created: 22
2025-04-05T21:14:50.115Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 22
2025-04-05T21:14:50.117Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 22
2025-04-05T21:14:54.564Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:14:54.566Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 22
2025-04-05T21:14:56.900Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 22
2025-04-05T21:14:57.153Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:14:57.158Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:14:57.406Z info [C -> Context.<anonymous>]: Test user created: d34b9086-f96d-4d0d-9ad5-e0fc7c363959
2025-04-05T21:14:57.407Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:14:59.496Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:14:59.497Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 23
2025-04-05T21:15:00.534Z info [C -> Context.<anonymous>]: Study plan created: 23
2025-04-05T21:15:03.547Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:15:05.658Z info [C -> Context.<anonymous>]: Test user created: 58efe0f6-8ca6-422f-bce3-42d60047e7f1
2025-04-05T21:15:05.659Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:15:06.957Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:15:06.958Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 24
2025-04-05T21:15:07.998Z info [C -> Context.<anonymous>]: Study plan created: 24
2025-04-05T21:15:08.000Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 24
2025-04-05T21:15:13.120Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:15:15.275Z info [C -> Context.<anonymous>]: Test user created: e308f47f-b1f9-43e8-8534-fb5ff8bfa150
2025-04-05T21:15:15.276Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:15:16.576Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:15:16.576Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 25
2025-04-05T21:15:17.352Z info [C -> Context.<anonymous>]: Study plan created: 25
2025-04-05T21:15:17.355Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 25
2025-04-05T21:15:18.908Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 25
2025-04-05T21:15:18.909Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 25
2025-04-05T21:15:19.170Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 25: Study plan with id 25 not found
Error: Study plan with id 25 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:78:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:15:24.151Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:15:25.702Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:15:25.703Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 26
2025-04-05T21:15:26.732Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:15:28.028Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:15:28.029Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 27
2025-04-05T21:16:33.179Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:16:35.301Z info [C -> Context.<anonymous>]: Test user created: 6eb1751f-aa20-405c-96da-9b50b30f6217
2025-04-05T21:16:35.303Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:16:39.048Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:16:39.049Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 29
2025-04-05T21:16:40.531Z info [C -> Context.<anonymous>]: Study plan created: 29
2025-04-05T21:16:40.535Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:16:40.535Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 29
2025-04-05T21:16:42.524Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 29
2025-04-05T21:16:42.994Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:16:42.995Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:16:43.230Z info [C -> Context.<anonymous>]: Test user created: 1680ad6f-8d0b-4853-a7e2-8f0308800580
2025-04-05T21:16:43.231Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:16:44.479Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:16:44.480Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 30
2025-04-05T21:16:45.223Z info [C -> Context.<anonymous>]: Study plan created: 30
2025-04-05T21:16:45.225Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 30
2025-04-05T21:16:47.971Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:16:47.972Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 30
2025-04-05T21:16:49.558Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 30
2025-04-05T21:16:49.792Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:16:49.795Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:16:50.028Z info [C -> Context.<anonymous>]: Test user created: 2f5d23b8-2c71-4f11-984e-bb5b513e9866
2025-04-05T21:16:50.028Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:16:51.319Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:16:51.321Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 31
2025-04-05T21:16:52.071Z info [C -> Context.<anonymous>]: Study plan created: 31
2025-04-05T21:16:52.075Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:16:52.076Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 31
2025-04-05T21:16:53.828Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 31
2025-04-05T21:16:54.294Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:16:54.295Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:16:54.528Z info [C -> Context.<anonymous>]: Test user created: 5d8dc2d3-d114-4c5c-ba93-30822d275e64
2025-04-05T21:16:54.529Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:16:55.773Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:16:55.774Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 32
2025-04-05T21:16:56.517Z info [C -> Context.<anonymous>]: Study plan created: 32
2025-04-05T21:16:56.521Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:16:56.523Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 32
2025-04-05T21:16:58.015Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 32
2025-04-05T21:16:58.250Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:16:58.252Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:16:58.488Z info [C -> Context.<anonymous>]: Test user created: 2408b880-8b3e-46b6-a1bd-4bf141c7ff55
2025-04-05T21:16:58.489Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:16:59.790Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:16:59.792Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 33
2025-04-05T21:17:00.536Z info [C -> Context.<anonymous>]: Study plan created: 33
2025-04-05T21:17:00.538Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:17:00.539Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 33
2025-04-05T21:17:02.026Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 33
2025-04-05T21:17:02.263Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:17:02.265Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:02.501Z info [C -> Context.<anonymous>]: Test user created: 407e388b-dc83-496d-9720-b7df79136962
2025-04-05T21:17:02.502Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:03.746Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:03.747Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 34
2025-04-05T21:17:04.495Z info [C -> Context.<anonymous>]: Study plan created: 34
2025-04-05T21:17:04.497Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:17:04.497Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 34
2025-04-05T21:17:05.994Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 34
2025-04-05T21:17:06.226Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:17:06.228Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:06.459Z info [C -> Context.<anonymous>]: Test user created: bd964699-5951-4569-bc6a-e3bce3464e56
2025-04-05T21:17:06.460Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:07.702Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:07.703Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 35
2025-04-05T21:17:08.692Z info [C -> Context.<anonymous>]: Study plan created: 35
2025-04-05T21:17:08.694Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:17:08.695Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 35
2025-04-05T21:17:10.178Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 35
2025-04-05T21:17:10.656Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:17:10.657Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:10.902Z info [C -> Context.<anonymous>]: Test user created: 6d7eff99-f812-46b7-b752-50d474653753
2025-04-05T21:17:10.904Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:12.162Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:12.163Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 36
2025-04-05T21:17:12.906Z info [C -> Context.<anonymous>]: Study plan created: 36
2025-04-05T21:17:12.908Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 36
2025-04-05T21:17:12.909Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 36
2025-04-05T21:17:17.082Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:17:17.083Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 36
2025-04-05T21:17:19.260Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 36
2025-04-05T21:17:19.501Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:17:19.503Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:19.743Z info [C -> Context.<anonymous>]: Test user created: 3c1f6e13-e9f1-4414-88dd-868d8a6b7554
2025-04-05T21:17:19.745Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:21.691Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:21.692Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 37
2025-04-05T21:17:22.672Z info [C -> Context.<anonymous>]: Study plan created: 37
2025-04-05T21:17:25.468Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:27.657Z info [C -> Context.<anonymous>]: Test user created: 82f4ad81-9b53-4ef8-8b6d-43e804f7aa19
2025-04-05T21:17:27.657Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:28.872Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:28.873Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 38
2025-04-05T21:17:29.606Z info [C -> Context.<anonymous>]: Study plan created: 38
2025-04-05T21:17:29.607Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 38
2025-04-05T21:17:34.730Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:17:36.792Z info [C -> Context.<anonymous>]: Test user created: 26724622-4a03-447b-ba38-97ff27d702c9
2025-04-05T21:17:36.793Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:38.331Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:38.332Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 39
2025-04-05T21:17:39.060Z info [C -> Context.<anonymous>]: Study plan created: 39
2025-04-05T21:17:39.061Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 39
2025-04-05T21:17:40.552Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 39
2025-04-05T21:17:40.555Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 39
2025-04-05T21:17:40.802Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 39: Study plan with id 39 not found
Error: Study plan with id 39 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:17:45.722Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:46.939Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:46.941Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 40
2025-04-05T21:17:47.914Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:17:49.139Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:17:49.140Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 41
2025-04-05T21:25:46.272Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:231:28)
2025-04-05T21:25:46.276Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:231:28)
2025-04-05T21:25:48.725Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:25:50.894Z info [C -> Context.<anonymous>]: Test user created: 5646931a-90cc-43db-8536-9bf96e3adffa
2025-04-05T21:25:50.895Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:25:54.408Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:25:54.411Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 43
2025-04-05T21:25:55.788Z info [C -> Context.<anonymous>]: Study plan created: 43
2025-04-05T21:25:55.794Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-05T21:25:55.795Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-05T21:25:55.798Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:25:55.799Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 43
2025-04-05T21:25:57.636Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 43
2025-04-05T21:25:58.111Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:25:58.113Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:25:58.352Z info [C -> Context.<anonymous>]: Test user created: a5d793f9-d9a8-43e3-b1ca-db0f17569441
2025-04-05T21:25:58.354Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:25:59.509Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:25:59.511Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 44
2025-04-05T21:26:00.205Z info [C -> Context.<anonymous>]: Study plan created: 44
2025-04-05T21:26:00.206Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 44
2025-04-05T21:26:02.732Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-05T21:26:02.733Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-05T21:26:02.734Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:02.735Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 44
2025-04-05T21:26:04.126Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 44
2025-04-05T21:26:04.364Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:04.366Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:04.605Z info [C -> Context.<anonymous>]: Test user created: 3f04d428-6fcd-4598-96ac-aa886c4dabdc
2025-04-05T21:26:04.606Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:05.755Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:05.757Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 45
2025-04-05T21:26:06.446Z info [C -> Context.<anonymous>]: Study plan created: 45
2025-04-05T21:26:06.449Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-05T21:26:06.450Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-05T21:26:06.453Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:06.455Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 45
2025-04-05T21:26:07.829Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 45
2025-04-05T21:26:08.302Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:08.304Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:08.541Z info [C -> Context.<anonymous>]: Test user created: 3a0d5cb4-deec-4f98-b419-6f208a39bafa
2025-04-05T21:26:08.542Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:09.921Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:09.923Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 46
2025-04-05T21:26:10.614Z info [C -> Context.<anonymous>]: Study plan created: 46
2025-04-05T21:26:10.617Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-05T21:26:10.618Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-05T21:26:10.622Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:10.623Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 46
2025-04-05T21:26:12.000Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 46
2025-04-05T21:26:12.247Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:12.248Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:12.485Z info [C -> Context.<anonymous>]: Test user created: 64ef14ca-0121-4bb3-bd85-884811704e46
2025-04-05T21:26:12.488Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:13.639Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:13.640Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 47
2025-04-05T21:26:14.327Z info [C -> Context.<anonymous>]: Study plan created: 47
2025-04-05T21:26:14.328Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-05T21:26:14.329Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-05T21:26:14.331Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:14.331Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 47
2025-04-05T21:26:15.705Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 47
2025-04-05T21:26:15.944Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:15.946Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:16.186Z info [C -> Context.<anonymous>]: Test user created: 50380005-1c86-424e-8d6a-51a090a23bae
2025-04-05T21:26:16.189Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:17.342Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:17.344Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 48
2025-04-05T21:26:18.035Z info [C -> Context.<anonymous>]: Study plan created: 48
2025-04-05T21:26:18.036Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-05T21:26:18.037Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-05T21:26:18.039Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:18.039Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 48
2025-04-05T21:26:19.414Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 48
2025-04-05T21:26:19.654Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:19.655Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:19.893Z info [C -> Context.<anonymous>]: Test user created: 3f34fb8b-05c1-4e9f-aab1-71e3079e67a5
2025-04-05T21:26:19.895Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:21.049Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:21.050Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 49
2025-04-05T21:26:21.748Z info [C -> Context.<anonymous>]: Study plan created: 49
2025-04-05T21:26:21.749Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan: missing required fields
Error: Invalid study plan: missing required fields
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:47:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:117:24)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:26:21.751Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:21.751Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 49
2025-04-05T21:26:23.141Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 49
2025-04-05T21:26:23.615Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:23.616Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:23.859Z info [C -> Context.<anonymous>]: Test user created: 734f0536-7801-4515-95a2-b42d845ba472
2025-04-05T21:26:23.860Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:25.235Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:25.237Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 50
2025-04-05T21:26:25.925Z info [C -> Context.<anonymous>]: Study plan created: 50
2025-04-05T21:26:25.926Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 50
2025-04-05T21:26:25.927Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 50
2025-04-05T21:26:30.025Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:26:30.026Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 50
2025-04-05T21:26:32.177Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 50
2025-04-05T21:26:32.415Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:26:32.418Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:32.656Z info [C -> Context.<anonymous>]: Test user created: cabb8a13-acc1-45e0-904e-1ee291b2724d
2025-04-05T21:26:32.657Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:34.570Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:34.572Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 51
2025-04-05T21:26:35.530Z info [C -> Context.<anonymous>]: Study plan created: 51
2025-04-05T21:26:38.396Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:40.485Z info [C -> Context.<anonymous>]: Test user created: 485fe4ed-e733-4276-b254-24efbe5870aa
2025-04-05T21:26:40.487Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:41.695Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:41.697Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 52
2025-04-05T21:26:42.415Z info [C -> Context.<anonymous>]: Study plan created: 52
2025-04-05T21:26:42.417Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 52
2025-04-05T21:26:47.360Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:26:49.584Z info [C -> Context.<anonymous>]: Test user created: eccf8385-e93a-4760-8940-2fa256a45d6a
2025-04-05T21:26:49.585Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:51.018Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:51.019Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 53
2025-04-05T21:26:51.736Z info [C -> Context.<anonymous>]: Study plan created: 53
2025-04-05T21:26:51.738Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 53
2025-04-05T21:26:53.173Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 53
2025-04-05T21:26:53.175Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 53
2025-04-05T21:26:53.419Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 53: Study plan with id 53 not found
Error: Study plan with id 53 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:26:58.537Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:26:59.736Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:26:59.737Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 54
2025-04-05T21:27:00.454Z error [C -> ScheduleService.generateDayContent]: Error generating content: dayNumber is not defined
ReferenceError: dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:83:31)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-05T21:27:00.458Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - dayNumber is not defined
Error: error: Failed to generate content - dayNumber is not defined
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:40)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-05T21:27:00.701Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:27:01.895Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:27:01.896Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 55
2025-04-05T21:27:02.612Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Missing required parameters
Error: Missing required parameters
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:114:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:29:35.548Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:29:37.775Z info [C -> Context.<anonymous>]: Test user created: 76a9899a-1361-4556-83b8-fc026d9b608c
2025-04-05T21:29:37.776Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:29:41.324Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:29:41.325Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 57
2025-04-05T21:29:42.714Z info [C -> Context.<anonymous>]: Study plan created: 57
2025-04-05T21:29:44.184Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:29:44.673Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 57
2025-04-05T21:29:46.527Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 57
2025-04-05T21:29:47.015Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:29:47.016Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:29:47.261Z info [C -> Context.<anonymous>]: Test user created: 42a3651a-1b49-4b2c-9dea-33e0d54c968b
2025-04-05T21:29:47.262Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:29:48.474Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:29:48.475Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 58
2025-04-05T21:29:49.174Z info [C -> Context.<anonymous>]: Study plan created: 58
2025-04-05T21:29:49.175Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 58
2025-04-05T21:29:53.467Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:29:53.717Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 58
2025-04-05T21:29:55.113Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 58
2025-04-05T21:29:55.604Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:29:55.607Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:29:55.852Z info [C -> Context.<anonymous>]: Test user created: 31b2cd20-eb7a-4c35-b9e6-854cf54d350f
2025-04-05T21:29:55.854Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:29:57.313Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:29:57.314Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 59
2025-04-05T21:29:58.011Z info [C -> Context.<anonymous>]: Study plan created: 59
2025-04-05T21:29:59.480Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:29:59.727Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 59
2025-04-05T21:30:01.137Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 59
2025-04-05T21:30:01.381Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:30:01.382Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:01.627Z info [C -> Context.<anonymous>]: Test user created: cd602c14-95d5-4fd7-a318-142a110c094e
2025-04-05T21:30:01.629Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:02.790Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:02.791Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 60
2025-04-05T21:30:03.490Z info [C -> Context.<anonymous>]: Study plan created: 60
2025-04-05T21:30:04.960Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:30:05.207Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 60
2025-04-05T21:30:06.606Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 60
2025-04-05T21:30:06.852Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:30:06.855Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:07.098Z info [C -> Context.<anonymous>]: Test user created: 7cb5b116-d698-401f-9352-1c27868ebb0a
2025-04-05T21:30:07.099Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:08.272Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:08.273Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 61
2025-04-05T21:30:09.008Z info [C -> Context.<anonymous>]: Study plan created: 61
2025-04-05T21:30:10.734Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 61
2025-04-05T21:30:14.068Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:30:14.315Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 61
2025-04-05T21:30:15.943Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 61
2025-04-05T21:30:16.433Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:30:16.435Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:16.685Z info [C -> Context.<anonymous>]: Test user created: 052378f9-8e33-4052-b243-fe59d9ce1e62
2025-04-05T21:30:16.686Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:17.847Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:17.848Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 62
2025-04-05T21:30:18.547Z info [C -> Context.<anonymous>]: Study plan created: 62
2025-04-05T21:30:20.013Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 62
2025-04-05T21:30:23.571Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:30:23.820Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 62
2025-04-05T21:30:25.226Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 62
2025-04-05T21:30:25.470Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:30:25.472Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:25.715Z info [C -> Context.<anonymous>]: Test user created: 08468676-f830-417b-bb7e-e1ed5ef67458
2025-04-05T21:30:25.717Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:26.882Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:26.883Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 63
2025-04-05T21:30:27.582Z info [C -> Context.<anonymous>]: Study plan created: 63
2025-04-05T21:30:27.584Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan: missing required fields
Error: Invalid study plan: missing required fields
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:47:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:122:24)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:30:27.589Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:30:28.099Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:480:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:30:28.101Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:28.356Z info [C -> Context.<anonymous>]: Test user created: 84cd9c91-e51b-4e52-aa7d-c1673b8b6e78
2025-04-05T21:30:28.358Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:29.528Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:29.529Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 64
2025-04-05T21:30:30.238Z info [C -> Context.<anonymous>]: Study plan created: 64
2025-04-05T21:30:30.240Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 64
2025-04-05T21:30:30.241Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 64
2025-04-05T21:30:34.370Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:30:34.621Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:480:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:30:34.626Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:35.128Z info [C -> Context.<anonymous>]: Test user created: 2a564572-333d-4169-a2c6-ae394d71a562
2025-04-05T21:30:35.129Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:37.035Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:37.037Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 65
2025-04-05T21:30:38.229Z info [C -> Context.<anonymous>]: Study plan created: 65
2025-04-05T21:30:41.145Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:43.389Z info [C -> Context.<anonymous>]: Test user created: 998b640f-ed87-48c1-beee-add901f0d4d4
2025-04-05T21:30:43.390Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:44.574Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:44.575Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 66
2025-04-05T21:30:45.286Z info [C -> Context.<anonymous>]: Study plan created: 66
2025-04-05T21:30:45.289Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 66
2025-04-05T21:30:50.425Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:30:52.602Z info [C -> Context.<anonymous>]: Test user created: fbd4576c-20f8-44ae-b54e-e05fa3a1b80e
2025-04-05T21:30:52.604Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:30:54.033Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:30:54.034Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 67
2025-04-05T21:30:54.773Z info [C -> Context.<anonymous>]: Study plan created: 67
2025-04-05T21:30:54.774Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 67
2025-04-05T21:30:56.666Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 67
2025-04-05T21:30:56.668Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 67
2025-04-05T21:30:56.906Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 67: Study plan with id 67 not found
Error: Study plan with id 67 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:31:01.988Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:31:03.170Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:31:03.171Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 68
2025-04-05T21:31:05.834Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:31:07.016Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:31:07.018Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 69
2025-04-05T21:31:07.737Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Missing required parameters
Error: Missing required parameters
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:35:06.081Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:08.279Z info [C -> Context.<anonymous>]: Test user created: 19d43762-88e0-4dbe-8560-947ca3312717
2025-04-05T21:35:08.280Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:11.806Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:11.808Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 72
2025-04-05T21:35:13.217Z info [C -> Context.<anonymous>]: Study plan created: 72
2025-04-05T21:35:14.686Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:15.165Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 72
2025-04-05T21:35:17.038Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 72
2025-04-05T21:35:17.523Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:17.525Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:17.769Z info [C -> Context.<anonymous>]: Test user created: 3c1441f0-7d49-4550-9f4c-9cbd96751c6e
2025-04-05T21:35:17.770Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:18.945Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:18.946Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 73
2025-04-05T21:35:19.644Z info [C -> Context.<anonymous>]: Study plan created: 73
2025-04-05T21:35:19.645Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 73
2025-04-05T21:35:23.980Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:24.225Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 73
2025-04-05T21:35:25.637Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 73
2025-04-05T21:35:26.119Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:26.121Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:26.363Z info [C -> Context.<anonymous>]: Test user created: 6366b1b4-5ed8-434a-b3c3-b3171180bc7b
2025-04-05T21:35:26.364Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:27.779Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:27.780Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 74
2025-04-05T21:35:28.484Z info [C -> Context.<anonymous>]: Study plan created: 74
2025-04-05T21:35:29.914Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:30.154Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 74
2025-04-05T21:35:31.554Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 74
2025-04-05T21:35:31.796Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:31.798Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:32.062Z info [C -> Context.<anonymous>]: Test user created: adc58644-10c8-4d73-ba66-c93bbe2ad58c
2025-04-05T21:35:32.063Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:33.348Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:33.350Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 75
2025-04-05T21:35:34.052Z info [C -> Context.<anonymous>]: Study plan created: 75
2025-04-05T21:35:35.542Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:35.782Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 75
2025-04-05T21:35:37.235Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 75
2025-04-05T21:35:37.520Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:37.521Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:37.762Z info [C -> Context.<anonymous>]: Test user created: 11f11345-9945-49a3-afa9-07492c311bd8
2025-04-05T21:35:37.763Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:38.980Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:38.982Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 76
2025-04-05T21:35:39.684Z info [C -> Context.<anonymous>]: Study plan created: 76
2025-04-05T21:35:41.353Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 76
2025-04-05T21:35:44.658Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:44.899Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 76
2025-04-05T21:35:46.590Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 76
2025-04-05T21:35:47.069Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:47.071Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:47.312Z info [C -> Context.<anonymous>]: Test user created: 30a46690-ede4-4708-8352-13d2e32233a5
2025-04-05T21:35:47.313Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:48.478Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:48.480Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 77
2025-04-05T21:35:49.183Z info [C -> Context.<anonymous>]: Study plan created: 77
2025-04-05T21:35:50.618Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 77
2025-04-05T21:35:54.213Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:54.454Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 77
2025-04-05T21:35:55.854Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 77
2025-04-05T21:35:56.095Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:35:56.098Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:56.339Z info [C -> Context.<anonymous>]: Test user created: ab265050-1bd8-47c3-a844-fab0228ff2a8
2025-04-05T21:35:56.341Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:35:57.512Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:35:57.514Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 78
2025-04-05T21:35:58.225Z info [C -> Context.<anonymous>]: Study plan created: 78
2025-04-05T21:35:58.228Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Invalid study plan: missing required fields
Error: Invalid study plan: missing required fields
    at ScheduleService.validateStudyPlan (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:47:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:122:24)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:35:58.230Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:35:58.717Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:480:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:35:58.718Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:35:58.960Z info [C -> Context.<anonymous>]: Test user created: a63c2154-c23d-4616-b2fa-2a0fd9189108
2025-04-05T21:35:58.961Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:00.129Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:00.130Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 79
2025-04-05T21:36:00.833Z info [C -> Context.<anonymous>]: Study plan created: 79
2025-04-05T21:36:00.835Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 79
2025-04-05T21:36:00.836Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 79
2025-04-05T21:36:05.290Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:36:05.531Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:480:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:36:05.534Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:36:06.014Z info [C -> Context.<anonymous>]: Test user created: 596a9242-a0e9-4f43-b448-093a3bc04c2f
2025-04-05T21:36:06.015Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:08.091Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:08.092Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 80
2025-04-05T21:36:09.392Z info [C -> Context.<anonymous>]: Study plan created: 80
2025-04-05T21:36:12.294Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:36:14.590Z info [C -> Context.<anonymous>]: Test user created: 81dfe1ba-4d29-4741-b7d9-e206f9caff7e
2025-04-05T21:36:14.591Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:15.887Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:15.888Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 81
2025-04-05T21:36:16.674Z info [C -> Context.<anonymous>]: Study plan created: 81
2025-04-05T21:36:16.675Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 81
2025-04-05T21:36:21.963Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:36:24.144Z info [C -> Context.<anonymous>]: Test user created: 8f151574-7e50-4723-9d84-49550bc67114
2025-04-05T21:36:24.145Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:25.704Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:25.706Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 82
2025-04-05T21:36:26.488Z info [C -> Context.<anonymous>]: Study plan created: 82
2025-04-05T21:36:26.490Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 82
2025-04-05T21:36:28.558Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 82
2025-04-05T21:36:28.559Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 82
2025-04-05T21:36:28.818Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 82: Study plan with id 82 not found
Error: Study plan with id 82 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:36:33.914Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:35.222Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:35.224Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 83
2025-04-05T21:36:37.920Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:36:39.237Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:36:39.238Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 84
2025-04-05T21:36:40.012Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Missing required parameters
Error: Missing required parameters
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:43:31.225Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:43:33.449Z info [C -> Context.<anonymous>]: Test user created: dd0454ca-dec9-454c-93c3-fe1f362eab75
2025-04-05T21:43:33.451Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:43:36.917Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:43:36.919Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 87
2025-04-05T21:43:38.280Z info [C -> Context.<anonymous>]: Study plan created: 87
2025-04-05T21:43:39.791Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:43:40.292Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 87
2025-04-05T21:43:42.101Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 87
2025-04-05T21:43:42.579Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:43:42.581Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:43:42.821Z info [C -> Context.<anonymous>]: Test user created: 860cb429-4646-4205-a081-042370dc7721
2025-04-05T21:43:42.822Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:43:43.959Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:43:43.960Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 88
2025-04-05T21:43:44.637Z info [C -> Context.<anonymous>]: Study plan created: 88
2025-04-05T21:43:44.639Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 88
2025-04-05T21:43:48.889Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:43:49.143Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 88
2025-04-05T21:43:50.502Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 88
2025-04-05T21:43:50.980Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:43:50.982Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:43:51.220Z info [C -> Context.<anonymous>]: Test user created: 615e1a3e-8a90-487e-a410-a84cb2f5e0e4
2025-04-05T21:43:51.222Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:43:52.596Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:43:52.598Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 89
2025-04-05T21:43:53.279Z info [C -> Context.<anonymous>]: Study plan created: 89
2025-04-05T21:43:54.784Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:43:55.036Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 89
2025-04-05T21:43:56.396Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 89
2025-04-05T21:43:56.634Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:43:56.636Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:43:56.874Z info [C -> Context.<anonymous>]: Test user created: afcd8753-d914-4ad9-bdb6-24884eb028cf
2025-04-05T21:43:56.875Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:43:58.006Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:43:58.007Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 90
2025-04-05T21:43:58.686Z info [C -> Context.<anonymous>]: Study plan created: 90
2025-04-05T21:44:00.192Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:44:00.447Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 90
2025-04-05T21:44:01.806Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 90
2025-04-05T21:44:02.044Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:44:02.045Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:02.287Z info [C -> Context.<anonymous>]: Test user created: a0b9bc31-efe2-4a4b-b502-a3b93fc24e0f
2025-04-05T21:44:02.287Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:03.419Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:03.420Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 91
2025-04-05T21:44:04.099Z info [C -> Context.<anonymous>]: Study plan created: 91
2025-04-05T21:44:05.850Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 91
2025-04-05T21:44:09.229Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:44:09.480Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 91
2025-04-05T21:44:11.057Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 91
2025-04-05T21:44:11.537Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:44:11.538Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:11.776Z info [C -> Context.<anonymous>]: Test user created: eb57d4af-d5c6-43d2-b878-ae76faa2fce3
2025-04-05T21:44:11.777Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:12.913Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:12.914Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 92
2025-04-05T21:44:13.594Z info [C -> Context.<anonymous>]: Study plan created: 92
2025-04-05T21:44:15.147Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 92
2025-04-05T21:44:18.768Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:44:19.021Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 92
2025-04-05T21:44:20.454Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 92
2025-04-05T21:44:20.697Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:44:20.699Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:20.936Z info [C -> Context.<anonymous>]: Test user created: 85ca34a1-f0cd-4e61-9a6e-c8d898522141
2025-04-05T21:44:20.938Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:22.067Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:22.067Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 93
2025-04-05T21:44:22.746Z info [C -> Context.<anonymous>]: Study plan created: 93
2025-04-05T21:44:22.748Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot read properties of undefined (reading '0')
TypeError: Cannot read properties of undefined (reading '0')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:87:69)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:124:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:44:22.750Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot read properties of undefined (reading '0')
Error: error: Failed to generate content - Cannot read properties of undefined (reading '0')
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:103:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:124:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:44:22.753Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:44:23.262Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:483:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:44:23.264Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:23.502Z info [C -> Context.<anonymous>]: Test user created: 2e77fef8-e73a-44bd-8e3c-d457454f6a73
2025-04-05T21:44:23.503Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:24.634Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:24.635Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 94
2025-04-05T21:44:25.316Z info [C -> Context.<anonymous>]: Study plan created: 94
2025-04-05T21:44:25.318Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 94
2025-04-05T21:44:25.319Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 94
2025-04-05T21:44:29.226Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:44:29.481Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:483:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-05T21:44:29.483Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:29.956Z info [C -> Context.<anonymous>]: Test user created: d02f33eb-7f9f-44ce-aac6-eb2f61c8caf0
2025-04-05T21:44:29.957Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:31.786Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:31.788Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 95
2025-04-05T21:44:32.937Z info [C -> Context.<anonymous>]: Study plan created: 95
2025-04-05T21:44:35.783Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:37.983Z info [C -> Context.<anonymous>]: Test user created: 8f8e2d67-dd1f-42d6-b294-7dbdbd962262
2025-04-05T21:44:37.984Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:39.127Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:39.127Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 96
2025-04-05T21:44:39.810Z info [C -> Context.<anonymous>]: Study plan created: 96
2025-04-05T21:44:39.812Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 96
2025-04-05T21:44:44.786Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:44:46.876Z info [C -> Context.<anonymous>]: Test user created: cb10aa85-6265-4889-86ce-dcd36f9ffd5e
2025-04-05T21:44:46.877Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:48.253Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:48.255Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 97
2025-04-05T21:44:48.945Z info [C -> Context.<anonymous>]: Study plan created: 97
2025-04-05T21:44:48.947Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 97
2025-04-05T21:44:50.778Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 97
2025-04-05T21:44:50.779Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 97
2025-04-05T21:44:51.008Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 97: Study plan with id 97 not found
Error: Study plan with id 97 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T21:44:56.031Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:44:57.172Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:44:57.174Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 98
2025-04-05T21:44:59.900Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:45:01.045Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:45:01.046Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 99
2025-04-05T21:45:01.735Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Study plan is required
Error: Study plan is required
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:120:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:53:40.743Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T21:53:40.747Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T21:53:43.097Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:53:45.331Z info [C -> Context.<anonymous>]: Test user created: 1fe15c16-4610-421c-950c-5c7845443cc2
2025-04-05T21:53:45.333Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:53:48.926Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:53:48.929Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 102
2025-04-05T21:53:50.358Z info [C -> Context.<anonymous>]: Study plan created: 102
2025-04-05T21:53:50.361Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:53:50.362Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:53:50.364Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:53:50.364Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 102
2025-04-05T21:53:52.251Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 102
2025-04-05T21:53:52.737Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:53:52.739Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:53:52.983Z info [C -> Context.<anonymous>]: Test user created: e4310d41-32e3-42ca-adb8-f764331b7cc3
2025-04-05T21:53:52.984Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:53:54.165Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:53:54.166Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 103
2025-04-05T21:53:54.881Z info [C -> Context.<anonymous>]: Study plan created: 103
2025-04-05T21:53:54.884Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 103
2025-04-05T21:53:57.489Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T21:53:57.490Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T21:53:57.493Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:53:57.494Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 103
2025-04-05T21:53:58.913Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 103
2025-04-05T21:53:59.160Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:53:59.163Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:53:59.409Z info [C -> Context.<anonymous>]: Test user created: 9a1c3a5e-3e74-4661-96df-220927435db9
2025-04-05T21:53:59.410Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:00.595Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:00.596Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 104
2025-04-05T21:54:01.303Z info [C -> Context.<anonymous>]: Study plan created: 104
2025-04-05T21:54:01.304Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:01.305Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:01.306Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:01.307Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 104
2025-04-05T21:54:02.728Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 104
2025-04-05T21:54:03.223Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:03.225Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:03.470Z info [C -> Context.<anonymous>]: Test user created: 4a30011e-0025-479a-8380-93d6d83d9932
2025-04-05T21:54:03.471Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:04.896Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:04.898Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 105
2025-04-05T21:54:05.606Z info [C -> Context.<anonymous>]: Study plan created: 105
2025-04-05T21:54:05.608Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:05.610Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:05.612Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:05.612Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 105
2025-04-05T21:54:07.028Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 105
2025-04-05T21:54:07.271Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:07.273Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:07.516Z info [C -> Context.<anonymous>]: Test user created: 3899e58f-0691-4c97-ba25-2a459cc6a4b3
2025-04-05T21:54:07.516Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:08.698Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:08.699Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 106
2025-04-05T21:54:09.408Z info [C -> Context.<anonymous>]: Study plan created: 106
2025-04-05T21:54:09.409Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:09.411Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:09.412Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:09.413Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 106
2025-04-05T21:54:10.842Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 106
2025-04-05T21:54:11.087Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:11.089Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:11.332Z info [C -> Context.<anonymous>]: Test user created: c586f0d8-d6cb-438c-8979-66cc53264927
2025-04-05T21:54:11.333Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:12.517Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:12.518Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 107
2025-04-05T21:54:13.228Z info [C -> Context.<anonymous>]: Study plan created: 107
2025-04-05T21:54:13.229Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:13.230Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:13.231Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:13.232Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 107
2025-04-05T21:54:14.673Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 107
2025-04-05T21:54:14.917Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:14.919Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:15.163Z info [C -> Context.<anonymous>]: Test user created: 6380e446-c397-46ab-af92-d2a019c91171
2025-04-05T21:54:15.165Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:16.356Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:16.357Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 108
2025-04-05T21:54:17.075Z info [C -> Context.<anonymous>]: Study plan created: 108
2025-04-05T21:54:17.077Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.calculateDayStartTime is not a function
TypeError: this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:86:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:17.078Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.calculateDayStartTime is not a function
Error: error: Failed to generate content - this.calculateDayStartTime is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:54:17.079Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:17.080Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 108
2025-04-05T21:54:18.507Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 108
2025-04-05T21:54:18.991Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:18.993Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:19.236Z info [C -> Context.<anonymous>]: Test user created: 533a3866-a240-4c0e-9dc6-72a2226ac571
2025-04-05T21:54:19.237Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:20.653Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:20.654Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 109
2025-04-05T21:54:21.361Z info [C -> Context.<anonymous>]: Study plan created: 109
2025-04-05T21:54:21.362Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 109
2025-04-05T21:54:21.363Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 109
2025-04-05T21:54:25.573Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:54:25.574Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 109
2025-04-05T21:54:27.769Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 109
2025-04-05T21:54:28.013Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T21:54:28.015Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:28.257Z info [C -> Context.<anonymous>]: Test user created: 2a25b586-e73a-423f-9d1d-1d0be03729ad
2025-04-05T21:54:28.258Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:30.204Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:30.205Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 110
2025-04-05T21:54:31.177Z info [C -> Context.<anonymous>]: Study plan created: 110
2025-04-05T21:54:34.082Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:54:36.252Z info [C -> Context.<anonymous>]: Test user created: dbd47d15-e1ee-4f8f-8ad6-f726d8800e8a
2025-04-05T21:54:36.252Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:54:37.467Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:54:37.469Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 111
2025-04-05T21:54:38.196Z info [C -> Context.<anonymous>]: Study plan created: 111
2025-04-05T21:54:38.197Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 111
2025-04-05T21:55:51.401Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.generateTopicsForSubject is not a function
TypeError: this.generateTopicsForSubject is not a function
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:132:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:90:35)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T21:55:51.405Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.generateTopicsForSubject is not a function
Error: error: Failed to generate content - this.generateTopicsForSubject is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T21:55:53.815Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T21:55:55.918Z info [C -> Context.<anonymous>]: Test user created: 508e0d5d-c897-4fe5-8408-e9d1634c746a
2025-04-05T21:55:55.920Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T21:55:59.421Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T21:55:59.423Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 114
2025-04-05T21:56:00.825Z info [C -> Context.<anonymous>]: Study plan created: 114
2025-04-05T21:56:00.828Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.generateTopicsForSubject is not a function
TypeError: this.generateTopicsForSubject is not a function
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:132:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:90:35)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:56:00.829Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.generateTopicsForSubject is not a function
Error: error: Failed to generate content - this.generateTopicsForSubject is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T21:56:00.831Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T21:56:00.832Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 114
2025-04-05T22:04:42.786Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:621:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:132:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:90:35)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:04:42.789Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:621:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:132:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:90:35)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:04:42.790Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:621:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:132:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:90:35)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:04:42.792Z error [C -> ScheduleService.generateDayContent]: Error generating content: this.generateDailyTargets is not a function
TypeError: this.generateDailyTargets is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:103:36)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:04:42.792Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - this.generateDailyTargets is not a function
Error: error: Failed to generate content - this.generateDailyTargets is not a function
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:193:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:04:45.242Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:04:47.474Z info [C -> Context.<anonymous>]: Test user created: f9e240f0-37b5-43e7-916a-a5d0e70f6811
2025-04-05T22:04:47.475Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:04:51.255Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:04:51.257Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 117
2025-04-05T22:08:21.296Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:08:21.299Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:08:21.300Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:08:21.301Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:08:21.301Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:110:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:08:23.539Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:08:25.725Z info [C -> Context.<anonymous>]: Test user created: 60544664-d10f-415e-af3c-8ca34ba87860
2025-04-05T22:08:25.727Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:08:29.398Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:08:29.400Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 120
2025-04-05T22:08:30.859Z info [C -> Context.<anonymous>]: Study plan created: 120
2025-04-05T22:08:30.867Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:08:30.870Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:08:30.871Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:624:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:135:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:91:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:08:30.872Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:08:30.873Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:110:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:196:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:08:30.875Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:08:30.876Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 120
2025-04-05T22:08:32.823Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 120
2025-04-05T22:08:33.311Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:08:33.312Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:08:33.557Z info [C -> Context.<anonymous>]: Test user created: 3eb78aee-d3f0-4130-a72f-69f187c1ffb3
2025-04-05T22:08:33.558Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:08:34.771Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:08:34.772Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 121
2025-04-05T22:08:35.510Z info [C -> Context.<anonymous>]: Study plan created: 121
2025-04-05T22:08:35.512Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 121
2025-04-05T22:10:58.392Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:10:58.394Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:10:58.396Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:10:58.396Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:10:58.397Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:11:00.783Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:02.965Z info [C -> Context.<anonymous>]: Test user created: 9a3b9d1a-045b-497a-ac28-35bd765cdb41
2025-04-05T22:11:02.967Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:06.538Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:06.540Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 124
2025-04-05T22:11:07.958Z info [C -> Context.<anonymous>]: Study plan created: 124
2025-04-05T22:11:07.963Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:07.965Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:07.966Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:07.968Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:07.969Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:07.971Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:07.972Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 124
2025-04-05T22:11:09.872Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 124
2025-04-05T22:11:10.351Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:10.353Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:10.595Z info [C -> Context.<anonymous>]: Test user created: 88560956-2af4-4264-8234-11cabd6f8678
2025-04-05T22:11:10.597Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:11.790Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:11.791Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 125
2025-04-05T22:11:12.498Z info [C -> Context.<anonymous>]: Study plan created: 125
2025-04-05T22:11:12.500Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 125
2025-04-05T22:11:15.099Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Updated DS: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.101Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Updated Algo: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.102Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Updated DS: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.104Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Updated Algo: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.104Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.105Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:50)
2025-04-05T22:11:15.107Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:15.107Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 125
2025-04-05T22:11:16.517Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 125
2025-04-05T22:11:16.755Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:16.757Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:16.993Z info [C -> Context.<anonymous>]: Test user created: 5c5a1fb8-fbdc-4354-acb0-48f7ef7eead5
2025-04-05T22:11:16.994Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:18.198Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:18.199Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 126
2025-04-05T22:11:18.903Z info [C -> Context.<anonymous>]: Study plan created: 126
2025-04-05T22:11:18.905Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:18.907Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:18.908Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:18.909Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:18.910Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:18.912Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:18.912Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 126
2025-04-05T22:11:20.322Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 126
2025-04-05T22:11:20.797Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:20.799Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:21.038Z info [C -> Context.<anonymous>]: Test user created: 0c594516-5a6d-4363-bcc2-ad078ee0a20a
2025-04-05T22:11:21.040Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:22.459Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:22.461Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 127
2025-04-05T22:11:23.171Z info [C -> Context.<anonymous>]: Study plan created: 127
2025-04-05T22:11:23.172Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:23.173Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:23.174Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:23.174Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:23.175Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:23.176Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:23.177Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 127
2025-04-05T22:11:24.591Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 127
2025-04-05T22:11:24.828Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:24.829Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:25.066Z info [C -> Context.<anonymous>]: Test user created: 73a1d014-53c6-480d-ab49-68d44be5cf24
2025-04-05T22:11:25.068Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:26.246Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:26.248Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 128
2025-04-05T22:11:26.958Z info [C -> Context.<anonymous>]: Study plan created: 128
2025-04-05T22:11:26.960Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:26.961Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:26.963Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:26.964Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:26.965Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:26.967Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:26.968Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 128
2025-04-05T22:11:28.393Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 128
2025-04-05T22:11:28.633Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:28.635Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:28.876Z info [C -> Context.<anonymous>]: Test user created: 672e1b06-df0c-4b7c-8837-b3065ad74495
2025-04-05T22:11:28.877Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:30.053Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:30.054Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 129
2025-04-05T22:11:30.778Z info [C -> Context.<anonymous>]: Study plan created: 129
2025-04-05T22:11:30.781Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:30.783Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:30.785Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:30.785Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:30.786Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:50)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:30.789Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:30.789Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 129
2025-04-05T22:11:32.203Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 129
2025-04-05T22:11:32.440Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:32.442Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:32.680Z info [C -> Context.<anonymous>]: Test user created: f868bbe1-faa5-403c-9034-73e321f75a77
2025-04-05T22:11:32.681Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:33.952Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:33.953Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 130
2025-04-05T22:11:34.658Z info [C -> Context.<anonymous>]: Study plan created: 130
2025-04-05T22:11:34.660Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for undefined: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:34.661Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for undefined: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:34.662Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for undefined: Cannot read properties of undefined (reading 'id')
TypeError: Cannot read properties of undefined (reading 'id')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:633:44)
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:144:30)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:99:22)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:34.662Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:34.663Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:205:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-05T22:11:34.665Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:34.666Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 130
2025-04-05T22:11:36.088Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 130
2025-04-05T22:11:36.562Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:36.564Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:36.803Z info [C -> Context.<anonymous>]: Test user created: 3d71d1fc-f851-4f46-a14a-1155f78392e5
2025-04-05T22:11:36.804Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:38.240Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:38.241Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 131
2025-04-05T22:11:38.946Z info [C -> Context.<anonymous>]: Study plan created: 131
2025-04-05T22:11:38.947Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 131
2025-04-05T22:11:38.948Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 131
2025-04-05T22:11:42.972Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-05T22:11:42.973Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 131
2025-04-05T22:11:45.081Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 131
2025-04-05T22:11:45.318Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-05T22:11:45.320Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:45.558Z info [C -> Context.<anonymous>]: Test user created: f28b5e30-bbd6-4465-8056-275f9314ae89
2025-04-05T22:11:45.559Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:47.521Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:47.522Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 132
2025-04-05T22:11:48.453Z info [C -> Context.<anonymous>]: Study plan created: 132
2025-04-05T22:11:51.282Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:11:53.409Z info [C -> Context.<anonymous>]: Test user created: 9450f0fc-02a7-43b3-a84e-b26b90ef72a6
2025-04-05T22:11:53.410Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:11:54.583Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:11:54.585Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 133
2025-04-05T22:11:55.291Z info [C -> Context.<anonymous>]: Study plan created: 133
2025-04-05T22:11:55.292Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 133
2025-04-05T22:12:00.210Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-05T22:12:02.268Z info [C -> Context.<anonymous>]: Test user created: 39906cbb-8c2e-4f7b-9542-2ecedd3130c9
2025-04-05T22:12:02.269Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-05T22:12:03.665Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-05T22:12:03.667Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 134
2025-04-05T22:12:04.375Z info [C -> Context.<anonymous>]: Study plan created: 134
2025-04-05T22:12:04.376Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 134
2025-04-05T22:12:05.772Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 134
2025-04-05T22:12:05.773Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 134
2025-04-05T22:12:06.006Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 134: Study plan with id 134 not found
Error: Study plan with id 134 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-05T22:20:26.587Z error [C -> ScheduleService.generateDayContent]: Error generating content: Cannot access 'sessions' before initialization
ReferenceError: Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:106:40)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:247:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:20:26.590Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Cannot access 'sessions' before initialization
Error: error: Failed to generate content - Cannot access 'sessions' before initialization
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:119:19)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:247:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:52)
2025-04-05T22:22:28.471Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'models')
TypeError: Cannot read properties of undefined (reading 'models')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:716:42)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:249:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:22:28.711Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'models')
TypeError: Cannot read properties of undefined (reading 'models')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:716:42)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:249:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:22:28.946Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: Cannot read properties of undefined (reading 'models')
TypeError: Cannot read properties of undefined (reading 'models')
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:716:42)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:98:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:249:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:22:29.183Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: Cannot read properties of undefined (reading 'models')
TypeError: Cannot read properties of undefined (reading 'models')
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:864:42)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:107:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:249:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:33:44.538Z error [C -> ScheduleService.testAIService]: AI service initialization failed: AI model test failed - no response
Error: AI model test failed - no response
    at ScheduleService.testAIService (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:48:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-04-05T22:33:50.420Z error [C -> ScheduleService.generateAIContent]: AI generation failed: No response from AI model
Error: No response from AI model
    at ScheduleService.generateAIContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:735:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:651:20)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:181:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:128:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:279:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:33:50.421Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: No response from AI model
Error: No response from AI model
    at ScheduleService.generateAIContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:735:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:651:20)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:181:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:128:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:279:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:34:55.674Z error [C -> ScheduleService.testAIService]: AI service initialization failed: AI model test failed - no response
Error: AI model test failed - no response
    at ScheduleService.testAIService (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:48:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-04-05T22:34:58.689Z error [C -> ScheduleService.generateAIContent]: AI generation failed: Empty response from AI model
Error: Empty response from AI model
    at ScheduleService.generateAIContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:739:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:651:20)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:181:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:128:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:279:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:34:58.690Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: AI content generation failed: Empty response from AI model
Error: AI content generation failed: Empty response from AI model
    at ScheduleService.generateAIContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:762:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:651:20)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:181:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:128:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:279:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-05T22:41:36.787Z info [C -> new]: Initializing Schedule Service...
2025-04-05T22:41:39.529Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-05T22:43:17.759Z info [C -> new]: Initializing Schedule Service...
2025-04-05T22:43:18.746Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-05T22:47:46.476Z info [C -> new]: Initializing Schedule Service...
2025-04-05T22:47:48.706Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-06T01:44:46.673Z info [C -> new]: Initializing Schedule Service...
2025-04-06T01:44:48.973Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-06T01:45:43.827Z info [C -> new]: Initializing Schedule Service...
2025-04-06T01:45:47.091Z info [C -> ScheduleService.generateAIContent]: AI Request:
2025-04-06T01:45:47.106Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-06T01:48:44.703Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T01:48:44.708Z info [C -> new]: Initializing Schedule Service...
2025-04-06T01:48:46.862Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-06T09:04:49.651Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T09:04:49.658Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:04:50.701Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verificaxxxxxxltion failed - no response
2025-04-06T09:12:49.306Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T09:12:49.315Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:12:51.612Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:12:55.375Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:12:57.604Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:13:00.025Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:13:01.391Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:769:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:13:07.974Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:13:10.124Z info [C -> Context.<anonymous>]: Test user created: cdc78189-057f-41e2-ab5b-37be5a4839ff
2025-04-06T09:13:10.127Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:13:13.659Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:13:13.660Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 147
2025-04-06T09:13:15.055Z info [C -> Context.<anonymous>]: Study plan created: 147
2025-04-06T09:13:18.541Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:13:21.223Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Algorithms: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:13:23.381Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics for Data Structures: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:208:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:155:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:13:24.801Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: response.text is not a function
TypeError: response.text is not a function
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:769:40)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:164:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:306:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:18:42.723Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T09:18:42.730Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:18:45.555Z error [C -> ScheduleService.handleFatalError]: [FATAL ERROR] AI service verification failed - no response
2025-04-06T09:24:07.413Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T09:24:07.419Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:24:09.035Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:24:12.576Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
PrismaClientInitializationError: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7835)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:201:24)
2025-04-06T09:24:21.356Z info [C -> anonymous]: AIzaSyDg79OIZyOOUQnpCbHJTmGg3F-BLwHxKnI
2025-04-06T09:24:21.360Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:24:23.157Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:24:37.280Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:24:44.249Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:24:46.431Z info [C -> Context.<anonymous>]: Test user created: b87db6e9-8687-40d8-8fc5-821914c5e941
2025-04-06T09:24:46.433Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:24:49.783Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:24:49.785Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 150
2025-04-06T09:24:51.113Z info [C -> Context.<anonymous>]: Study plan created: 150
2025-04-06T09:25:06.974Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:25:08.705Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:25:09.200Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 150
2025-04-06T09:25:11.203Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 150
2025-04-06T09:25:11.926Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:25:11.927Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:25:12.170Z info [C -> Context.<anonymous>]: Test user created: 33c89677-e425-428c-9e07-8247a78e4bb7
2025-04-06T09:25:12.171Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:25:13.290Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:25:13.291Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 151
2025-04-06T09:25:13.961Z info [C -> Context.<anonymous>]: Study plan created: 151
2025-04-06T09:25:13.964Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 151
2025-04-06T09:25:30.929Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-06T09:25:32.665Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:25:32.918Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 151
2025-04-06T09:25:34.476Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 151
2025-04-06T09:25:34.956Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:25:34.958Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:25:35.200Z info [C -> Context.<anonymous>]: Test user created: caef4975-624a-4ee0-8cf2-187e68ed0345
2025-04-06T09:25:35.201Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:25:36.313Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:25:36.315Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 152
2025-04-06T09:25:36.984Z info [C -> Context.<anonymous>]: Study plan created: 152
2025-04-06T09:25:49.812Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-06T09:25:51.534Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:25:51.783Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 152
2025-04-06T09:25:53.332Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 152
2025-04-06T09:25:53.814Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:25:53.815Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:25:54.066Z info [C -> Context.<anonymous>]: Test user created: 2c8b57fa-e159-430c-8054-9001076d4636
2025-04-06T09:25:54.067Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:25:55.174Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:25:55.175Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 153
2025-04-06T09:25:55.835Z info [C -> Context.<anonymous>]: Study plan created: 153
2025-04-06T09:26:08.733Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-06T09:26:10.493Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:26:10.756Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 153
2025-04-06T09:26:12.308Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 153
2025-04-06T09:26:12.788Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:26:12.789Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:26:13.030Z info [C -> Context.<anonymous>]: Test user created: 454b7e7a-425b-4b89-915c-a421f80c9b18
2025-04-06T09:26:13.032Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:26:14.140Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:26:14.141Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 154
2025-04-06T09:26:14.803Z info [C -> Context.<anonymous>]: Study plan created: 154
2025-04-06T09:26:30.193Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-06T09:26:31.925Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 154
2025-04-06T09:26:44.814Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:26:45.067Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 154
2025-04-06T09:26:45.632Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:26:46.397Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 154
2025-04-06T09:26:46.677Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:


Foreign key constraint violated: `Schedule_studyPlanId_fkey (index)`
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.create()` invocation:


Foreign key constraint violated: `Schedule_studyPlanId_fkey (index)`
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:313:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:26:46.878Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:26:46.880Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:26:47.121Z info [C -> Context.<anonymous>]: Test user created: df476230-2371-451d-8d16-46f9286c4591
2025-04-06T09:26:47.122Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:26:48.460Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:26:48.462Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 155
2025-04-06T09:26:49.131Z info [C -> Context.<anonymous>]: Study plan created: 155
2025-04-06T09:27:03.010Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-06T09:27:04.743Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 155
2025-04-06T09:27:18.566Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:166:33)
2025-04-06T09:27:19.140Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:27:21.345Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 155
2025-04-06T09:27:22.902Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 155
2025-04-06T09:27:23.383Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:27:23.386Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:27:23.628Z info [C -> Context.<anonymous>]: Test user created: c6a16978-516c-4886-b9dd-34b970644529
2025-04-06T09:27:23.629Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:27:24.780Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:27:24.782Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 156
2025-04-06T09:27:25.470Z info [C -> Context.<anonymous>]: Study plan created: 156
2025-04-06T09:27:25.472Z error [C -> ScheduleService.generateDaySessions]: Error generating sessions: Invalid subjects array
Error: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:195:19)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:154:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:27:25.475Z error [C -> ScheduleService.generateDayContent]: Error generating content: Failed to generate sessions: Invalid subjects array
Error: Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:238:15)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:154:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:27:25.477Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
Error: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:177:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:17)
2025-04-06T09:27:25.481Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:27:25.728Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:612:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:27:25.730Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:27:25.972Z info [C -> Context.<anonymous>]: Test user created: 4a418e74-b4b6-4c0f-8ecb-c14b4ab75d18
2025-04-06T09:27:25.973Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:27:27.092Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:27:27.093Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 157
2025-04-06T09:27:27.762Z info [C -> Context.<anonymous>]: Study plan created: 157
2025-04-06T09:27:27.763Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 157
2025-04-06T09:27:27.764Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 157
2025-04-06T09:27:31.813Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:27:32.062Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:612:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:27:32.066Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:27:32.309Z info [C -> Context.<anonymous>]: Test user created: 740f15a0-c3f6-4f76-91d8-cc5da46e2b99
2025-04-06T09:27:32.311Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:27:34.212Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:27:34.214Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 158
2025-04-06T09:27:35.399Z info [C -> Context.<anonymous>]: Study plan created: 158
2025-04-06T09:27:38.285Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:27:40.392Z info [C -> Context.<anonymous>]: Test user created: 29dc9571-1b0a-4d04-b5cc-63eeeb561813
2025-04-06T09:27:40.394Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:27:41.577Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:27:41.578Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 159
2025-04-06T09:27:42.286Z info [C -> Context.<anonymous>]: Study plan created: 159
2025-04-06T09:27:42.287Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 159
2025-04-06T09:27:47.208Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:27:49.397Z info [C -> Context.<anonymous>]: Test user created: cac6163a-3785-4dde-9560-7df2099163b2
2025-04-06T09:27:49.398Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:27:50.821Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:27:50.822Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 160
2025-04-06T09:27:51.529Z info [C -> Context.<anonymous>]: Study plan created: 160
2025-04-06T09:27:51.530Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 160
2025-04-06T09:27:53.414Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 160
2025-04-06T09:27:53.415Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 160
2025-04-06T09:27:53.654Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 160: Study plan with id 160 not found
Error: Study plan with id 160 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-06T09:27:59.161Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:28:00.347Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:28:00.347Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 161
2025-04-06T09:28:16.870Z error [C -> ScheduleService.generateDailyTargets]: Error generating daily targets: No response from AI
Error: No response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:750:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:163:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-06T09:28:20.029Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:28:21.452Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:28:21.453Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 162
2025-04-06T09:28:22.168Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Study plan is required
Error: Study plan is required
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:301:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:36:42.177Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:36:44.873Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:36:50.603Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:243:30)
2025-04-06T09:36:53.099Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:36:55.258Z info [C -> Context.<anonymous>]: Test user created: e73161c5-ec20-471c-92e2-af8fe6fef740
2025-04-06T09:36:55.260Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:36:58.852Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:36:58.854Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 165
2025-04-06T09:37:00.281Z info [C -> Context.<anonymous>]: Study plan created: 165
2025-04-06T09:37:05.437Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Cannot read properties of undefined (reading 'schedule')
TypeError: Cannot read properties of undefined (reading 'schedule')
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:305:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:37:05.440Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:37:05.442Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 165
2025-04-06T09:37:07.337Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 165
2025-04-06T09:37:07.809Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:37:07.810Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:37:08.048Z info [C -> Context.<anonymous>]: Test user created: d2b7f017-a384-4b6e-95fe-0c5dcd37e8fa
2025-04-06T09:37:08.049Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:37:09.237Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:37:09.238Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 166
2025-04-06T09:37:09.943Z info [C -> Context.<anonymous>]: Study plan created: 166
2025-04-06T09:37:09.946Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 166
2025-04-06T09:39:39.600Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:39:42.295Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:39:54.337Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:39:56.496Z info [C -> Context.<anonymous>]: Test user created: 9fb378a1-a938-4e71-9c60-4e26356c2048
2025-04-06T09:39:56.498Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:40:00.014Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:40:00.015Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 169
2025-04-06T09:40:01.423Z info [C -> Context.<anonymous>]: Study plan created: 169
2025-04-06T09:40:09.331Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:40:09.805Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 169
2025-04-06T09:40:11.685Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 169
2025-04-06T09:40:12.403Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:40:12.405Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:40:12.647Z info [C -> Context.<anonymous>]: Test user created: ea7c92dc-b6be-4419-a258-db433253c9ab
2025-04-06T09:40:12.648Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:40:13.834Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:40:13.836Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 170
2025-04-06T09:40:14.779Z info [C -> Context.<anonymous>]: Study plan created: 170
2025-04-06T09:40:14.780Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 170
2025-04-06T09:40:27.008Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:40:27.247Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 170
2025-04-06T09:40:28.667Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 170
2025-04-06T09:40:29.148Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:40:29.150Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:40:29.387Z info [C -> Context.<anonymous>]: Test user created: f34d2e83-e854-4ccc-87e4-9f309db84382
2025-04-06T09:40:29.388Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:40:30.803Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:40:30.805Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 171
2025-04-06T09:40:31.514Z info [C -> Context.<anonymous>]: Study plan created: 171
2025-04-06T09:40:38.028Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:40:38.266Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 171
2025-04-06T09:40:39.689Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 171
2025-04-06T09:40:39.932Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:40:39.933Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:40:40.173Z info [C -> Context.<anonymous>]: Test user created: 3a7446bb-01e4-4b38-a923-c7cbfbe0d6c3
2025-04-06T09:40:40.173Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:40:41.357Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:40:41.359Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 172
2025-04-06T09:40:42.067Z info [C -> Context.<anonymous>]: Study plan created: 172
2025-04-06T09:40:50.339Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:40:50.606Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 172
2025-04-06T09:40:52.256Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 172
2025-04-06T09:40:52.734Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:40:52.736Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:40:52.976Z info [C -> Context.<anonymous>]: Test user created: 96be5f8c-4376-474a-a389-1b58f263c288
2025-04-06T09:40:52.978Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:40:54.170Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:40:54.171Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 173
2025-04-06T09:40:54.878Z info [C -> Context.<anonymous>]: Study plan created: 173
2025-04-06T09:41:00.867Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 173
2025-04-06T09:41:03.049Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"57s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"57s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:41:04.244Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:41:04.533Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:41:04.833Z error [C -> ScheduleService.generateDailyTargets]: Error generating targets: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"56s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:710:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:41:06.491Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:41:06.728Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 173
2025-04-06T09:41:08.376Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 173
2025-04-06T09:41:08.851Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:41:08.852Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:09.090Z info [C -> Context.<anonymous>]: Test user created: 8ace9016-150d-4988-a6bf-b5e39e5d348f
2025-04-06T09:41:09.091Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:10.270Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:10.272Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 174
2025-04-06T09:41:10.980Z info [C -> Context.<anonymous>]: Study plan created: 174
2025-04-06T09:41:17.320Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 174
2025-04-06T09:41:26.038Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:41:26.275Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 174
2025-04-06T09:41:27.920Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 174
2025-04-06T09:41:28.404Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:41:28.406Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:28.644Z info [C -> Context.<anonymous>]: Test user created: 6f31ebcb-1bf3-49db-979f-6c07d02ef9af
2025-04-06T09:41:28.645Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:29.826Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:29.827Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 175
2025-04-06T09:41:30.532Z info [C -> Context.<anonymous>]: Study plan created: 175
2025-04-06T09:41:30.534Z error [C -> ScheduleService.generateDaySessions]: Error generating sessions: Invalid subjects array
Error: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:192:19)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:41:30.535Z error [C -> ScheduleService.generateDayContent]: Error generating content: Failed to generate sessions: Invalid subjects array
Error: Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:235:15)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:41:30.536Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
Error: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:174:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:17)
2025-04-06T09:41:30.537Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:41:30.780Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:41:30.781Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:31.018Z info [C -> Context.<anonymous>]: Test user created: b4fd75bd-a9e9-4975-9095-ef38e9725118
2025-04-06T09:41:31.019Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:32.195Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:32.196Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 176
2025-04-06T09:41:32.916Z info [C -> Context.<anonymous>]: Study plan created: 176
2025-04-06T09:41:32.918Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 176
2025-04-06T09:41:32.920Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 176
2025-04-06T09:41:37.216Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:41:37.452Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:41:37.455Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:37.693Z info [C -> Context.<anonymous>]: Test user created: 86cce288-c0dd-42a2-a8da-c1c12df8a94e
2025-04-06T09:41:37.694Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:39.713Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:39.715Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 177
2025-04-06T09:41:41.038Z info [C -> Context.<anonymous>]: Study plan created: 177
2025-04-06T09:41:43.922Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:46.115Z info [C -> Context.<anonymous>]: Test user created: dbcb8c63-b1cc-46c0-bec2-528e3fd57517
2025-04-06T09:41:46.117Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:47.436Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:47.437Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 178
2025-04-06T09:41:48.190Z info [C -> Context.<anonymous>]: Study plan created: 178
2025-04-06T09:41:48.191Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 178
2025-04-06T09:41:53.375Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:41:55.550Z info [C -> Context.<anonymous>]: Test user created: 71275f97-08ac-41e8-8383-4acd9a0f6fa6
2025-04-06T09:41:55.551Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:41:57.059Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:41:57.060Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 179
2025-04-06T09:41:57.813Z info [C -> Context.<anonymous>]: Study plan created: 179
2025-04-06T09:41:57.815Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 179
2025-04-06T09:41:59.820Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 179
2025-04-06T09:41:59.821Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 179
2025-04-06T09:42:00.071Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 179: Study plan with id 179 not found
Error: Study plan with id 179 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-06T09:42:05.079Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:42:06.340Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:42:06.342Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 180
2025-04-06T09:42:15.606Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:42:17.325Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:42:17.327Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 181
2025-04-06T09:42:18.082Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Study plan is required
Error: Study plan is required
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:298:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:54:30.204Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:54:32.862Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:54:45.876Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Invalid AI response
Error: Invalid AI response
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:723:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-06T09:54:45.879Z error [C -> ScheduleService.generateDayContent]: Error generating content: Failed to generate daily targets: Invalid AI response
Error: Failed to generate daily targets: Invalid AI response
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:729:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-06T09:54:45.880Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Failed to generate daily targets: Invalid AI response
Error: error: Failed to generate content - Failed to generate daily targets: Invalid AI response
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:174:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-06T09:54:48.159Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:54:49.408Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:57:33.909Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:57:36.710Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:57:41.969Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-06T09:57:48.513Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:57:51.178Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:57:54.966Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-06T09:57:56.689Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic Operations",
              type: "Mathematics"
            },
            {
              name: "Number Systems (Integers, Rational Numbers)",
              type: "Mathematics"
            },
            {
              name: "Order of Operations (PEMDAS/BODMAS)",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "480min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "5:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Observation and Inference",
              type: "Scientific Thinking"
            },
            {
              name: "Formulating a Hypothesis",
              type: "Scientific Method"
            },
            {
              name: "Basic Measurement and Units (SI Units)",
              type: "Physics"
            },
            {
              name: "Introduction to Lab Safety",
              type: "General Science"
            }
          ],
          type: "STUDY",
          duration: "600min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic Operations",
              type: "Mathematics"
            },
            {
              name: "Number Systems",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "7:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic Operations",
              type: "Mathematics"
            },
            {
              name: "Number Systems (Integers, Rational Numbers)",
              type: "Mathematics"
            },
            {
              name: "Order of Operations (PEMDAS/BODMAS)",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "480min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "5:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Observation and Inference",
              type: "Scientific Thinking"
            },
            {
              name: "Formulating a Hypothesis",
              type: "Scientific Method"
            },
            {
              name: "Basic Measurement and Units (SI Units)",
              type: "Physics"
            },
            {
              name: "Introduction to Lab Safety",
              type: "General Science"
            }
          ],
          type: "STUDY",
          duration: "600min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic Operations",
              type: "Mathematics"
            },
            {
              name: "Number Systems",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "7:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:310:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-06T09:57:56.694Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:57:56.701Z info [C -> new]: Initializing Schedule Service...
2025-04-06T09:57:56.713Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:57:57.908Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:57:58.863Z info [C -> Context.<anonymous>]: Test user created: 361182f8-9d25-41ba-844c-cd6266097634
2025-04-06T09:57:58.865Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:57:59.339Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-06T09:58:02.895Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:58:02.896Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 186
2025-04-06T09:58:04.559Z info [C -> Context.<anonymous>]: Study plan created: 186
2025-04-06T09:58:10.655Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:100:28)
2025-04-06T09:58:12.368Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:58:12.859Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 186
2025-04-06T09:58:14.762Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 186
2025-04-06T09:58:15.476Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:58:15.478Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:58:15.719Z info [C -> Context.<anonymous>]: Test user created: 4f579364-8f0d-4e76-806d-ce21240d5187
2025-04-06T09:58:15.719Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:58:17.152Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:58:17.153Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 187
2025-04-06T09:58:17.869Z info [C -> Context.<anonymous>]: Study plan created: 187
2025-04-06T09:58:17.871Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 187
2025-04-06T09:58:22.176Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"38s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"38s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-06T09:58:23.208Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-06T09:58:23.764Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-06T09:58:24.804Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"36s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"36s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:114:28)
2025-04-06T09:58:26.276Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:58:26.768Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 187
2025-04-06T09:58:28.202Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 187
2025-04-06T09:58:28.443Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:58:28.446Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:58:28.686Z info [C -> Context.<anonymous>]: Test user created: 2c24bf4f-b20b-47fb-bdd5-f15145491a3d
2025-04-06T09:58:28.687Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:58:29.880Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:58:29.881Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 188
2025-04-06T09:58:30.600Z info [C -> Context.<anonymous>]: Study plan created: 188
2025-04-06T09:58:30.967Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"29s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"29s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-06T09:58:32.249Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"28s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"28s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-06T09:58:34.997Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:121:28)
2025-04-06T09:58:36.463Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:58:36.708Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 188
2025-04-06T09:58:38.388Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 188
2025-04-06T09:58:38.866Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:58:38.867Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:58:39.106Z info [C -> Context.<anonymous>]: Test user created: c3fed3ba-f150-4075-838d-13cf94c830dd
2025-04-06T09:58:39.107Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:58:40.303Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:58:40.305Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 189
2025-04-06T09:58:41.019Z info [C -> Context.<anonymous>]: Study plan created: 189
2025-04-06T09:58:47.294Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:129:28)
2025-04-06T09:58:49.009Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:58:49.259Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 189
2025-04-06T09:58:50.691Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 189
2025-04-06T09:58:50.930Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:58:50.932Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:58:51.170Z info [C -> Context.<anonymous>]: Test user created: 384b3ac4-c678-4432-b5dc-0a3410eb814d
2025-04-06T09:58:51.171Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:58:52.363Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:58:52.364Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 190
2025-04-06T09:58:53.317Z info [C -> Context.<anonymous>]: Study plan created: 190
2025-04-06T09:58:59.767Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-06T09:59:01.242Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 190
2025-04-06T09:59:08.498Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:147:33)
2025-04-06T09:59:10.212Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:59:10.461Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 190
2025-04-06T09:59:12.135Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 190
2025-04-06T09:59:12.612Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:59:12.614Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:12.858Z info [C -> Context.<anonymous>]: Test user created: 5e4ca20f-225d-4925-9b7b-8ae0608c7ef1
2025-04-06T09:59:12.859Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:14.052Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:14.053Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 191
2025-04-06T09:59:14.768Z info [C -> Context.<anonymous>]: Study plan created: 191
2025-04-06T09:59:17.790Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"43s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"43s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-06T09:59:19.065Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"41s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"41s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:153:28)
2025-04-06T09:59:20.533Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 191
2025-04-06T09:59:22.982Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"37s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:166:33)
2025-04-06T09:59:25.409Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"35s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"35s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:166:33)
2025-04-06T09:59:26.742Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"34s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-2.0-flash","location":"global"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"34s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:166:33)
2025-04-06T09:59:28.448Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:59:28.694Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 191
2025-04-06T09:59:30.365Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 191
2025-04-06T09:59:30.841Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-06T09:59:30.843Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:31.086Z info [C -> Context.<anonymous>]: Test user created: 09b81d2c-ba81-4c10-8c57-bedfdc5e2bf0
2025-04-06T09:59:31.087Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:32.283Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:32.284Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 192
2025-04-06T09:59:33.001Z info [C -> Context.<anonymous>]: Study plan created: 192
2025-04-06T09:59:33.003Z error [C -> ScheduleService.generateDaySessions]: Error generating sessions: Invalid subjects array
Error: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:192:19)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:59:33.004Z error [C -> ScheduleService.generateDayContent]: Error generating content: Failed to generate sessions: Invalid subjects array
Error: Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:235:15)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-06T09:59:33.005Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
Error: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:174:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:174:17)
2025-04-06T09:59:33.007Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:59:33.253Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:59:33.254Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:33.494Z info [C -> Context.<anonymous>]: Test user created: bf474184-57a8-4152-b202-18a2e3f09f5a
2025-04-06T09:59:33.496Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:34.691Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:34.692Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 193
2025-04-06T09:59:35.410Z info [C -> Context.<anonymous>]: Study plan created: 193
2025-04-06T09:59:35.411Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 193
2025-04-06T09:59:35.412Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 193
2025-04-06T09:59:39.699Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-06T09:59:39.946Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:78:17)
2025-04-06T09:59:39.951Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:40.193Z info [C -> Context.<anonymous>]: Test user created: 98a32406-7a91-4a63-8239-f6ebc3c0d751
2025-04-06T09:59:40.194Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:42.183Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:42.184Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 194
2025-04-06T09:59:43.424Z info [C -> Context.<anonymous>]: Study plan created: 194
2025-04-06T09:59:46.287Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:48.530Z info [C -> Context.<anonymous>]: Test user created: fc90c7c3-f5f9-4b88-b713-9b6280e3b9f0
2025-04-06T09:59:48.531Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:49.788Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:49.790Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 195
2025-04-06T09:59:50.539Z info [C -> Context.<anonymous>]: Study plan created: 195
2025-04-06T09:59:50.541Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 195
2025-04-06T09:59:55.730Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-06T09:59:57.884Z info [C -> Context.<anonymous>]: Test user created: 13378979-654d-4ec0-a24d-c27c9d9a95ab
2025-04-06T09:59:57.885Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T09:59:59.372Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T09:59:59.373Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 196
2025-04-06T10:00:00.121Z info [C -> Context.<anonymous>]: Study plan created: 196
2025-04-06T10:00:00.122Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 196
2025-04-06T10:00:02.105Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 196
2025-04-06T10:00:02.107Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 196
2025-04-06T10:00:02.364Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 196: Study plan with id 196 not found
Error: Study plan with id 196 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:258:17)
2025-04-06T10:00:07.585Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T10:00:08.849Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T10:00:08.850Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 197
2025-04-06T10:00:15.867Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:299:28)
2025-04-06T10:00:17.842Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-06T10:00:19.337Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-06T10:00:19.338Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 198
2025-04-06T10:00:20.100Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Study plan is required
Error: Study plan is required
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:298:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:310:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-08T12:26:46.308Z info [unknown -> unknown]: Initializing Schedule Service...
2025-04-08T12:26:50.144Z info [unknown -> unknown]: AI service verified successfully
2025-04-08T12:27:03.489Z info [unknown -> unknown]: Initializing Schedule Service...
2025-04-08T12:27:06.909Z info [unknown -> unknown]: AI service verified successfully
2025-04-08T12:29:50.806Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:29:53.614Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:29:55.990Z error [C -> Context.<anonymous>]: Setup failed: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
PrismaClientInitializationError: 
Invalid `prisma.user.create()` invocation:


Can't reach database server at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-blue-dew-a5a9ypdi-pooler.us-east-2.aws.neon.tech:5432`.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7835)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:202:24)
2025-04-08T12:30:01.049Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:30:03.285Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:30:08.211Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-08T12:30:09.969Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Number Sense"
            },
            {
              name: "Introduction to Algebra",
              type: "Algebra"
            },
            {
              name: "Geometry Fundamentals",
              type: "Geometry"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Basic Lab Safety and Equipment",
              type: "General Science"
            },
            {
              name: "Measurement and Units (SI Units)",
              type: "Physics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "9:00 PM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Mathematics"
            },
            {
              name: "Number Systems",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "5:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Number Sense"
            },
            {
              name: "Introduction to Algebra",
              type: "Algebra"
            },
            {
              name: "Geometry Fundamentals",
              type: "Geometry"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Basic Lab Safety and Equipment",
              type: "General Science"
            },
            {
              name: "Measurement and Units (SI Units)",
              type: "Physics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "9:00 PM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Mathematics"
            },
            {
              name: "Number Systems",
              type: "Mathematics"
            },
            {
              name: "Introduction to Algebra",
              type: "Mathematics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "5:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:310:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-08T12:30:09.974Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:30:09.980Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:30:11.296Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:30:11.568Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:30:11.570Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:30:12.680Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:30:44.910Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:30:47.648Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:30:53.432Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-08T12:31:00.336Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:31:05.289Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:31:07.932Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:31:13.057Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:244:30)
2025-04-08T12:31:19.494Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:31:21.990Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:31:26.534Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-08T12:31:28.223Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Core Concepts"
            },
            {
              name: "Number Systems",
              type: "Core Concepts"
            },
            {
              name: "Introduction to Algebra",
              type: "Algebra"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Basic Lab Safety and Equipment",
              type: "General Science"
            },
            {
              name: "Measurement and Units (SI System)",
              type: "Physics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "9:00 PM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Fundamental"
            },
            {
              name: "Number Systems",
              type: "Introduction"
            },
            {
              name: "Order of Operations (PEMDAS/BODMAS)",
              type: "Rules"
            },
            {
              name: "Introduction to Algebra",
              type: "Beginner"
            }
          ],
          type: "STUDY",
          duration: "480min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "5:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
PrismaClientValidationError: 
Invalid `prisma.schedule.create()` invocation:

{
  data: {
    type: "DAILY",
    studyPlanId: 1,
    userId: 1,
            ~
    dayNumber: 1,
    focus: "Day 1 Study: Math",
    sessions: {
      set: [
        {
          time: "9:00 AM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Core Concepts"
            },
            {
              name: "Number Systems",
              type: "Core Concepts"
            },
            {
              name: "Introduction to Algebra",
              type: "Algebra"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "3:00 PM",
          subject: "Science",
          topics: [
            {
              name: "Introduction to the Scientific Method",
              type: "General Science"
            },
            {
              name: "Basic Lab Safety and Equipment",
              type: "General Science"
            },
            {
              name: "Measurement and Units (SI System)",
              type: "Physics"
            }
          ],
          type: "STUDY",
          duration: "360min",
          recommendedPace: "Maintain steady pace"
        },
        {
          time: "9:00 PM",
          subject: "Math",
          topics: [
            {
              name: "Basic Arithmetic",
              type: "Fundamental"
            },
            {
              name: "Number Systems",
              type: "Introduction"
            },
            {
              name: "Order of Operations (PEMDAS/BODMAS)",
              type: "Rules"
            },
            {
              name: "Introduction to Algebra",
              type: "Beginner"
            }
          ],
          type: "STUDY",
          duration: "480min",
          recommendedPace: "Maintain steady pace"
        }
      ]
    },
    breaks: [
      {
        time: "11:00 AM",
        duration: "45min",
        type: "LUNCH"
      },
      {
        time: "5:00 PM",
        duration: "15min",
        type: "SHORT"
      }
    ],
    dailyTargets: [
      "Study Math concepts"
    ],
    metadata: {
      currentDay: 1,
      totalDays: 30,
      progress: 3.3333333333333335,
      dailyHours: 6,
      status: "PENDING"
    }
  },
  include: {
    studyPlan: true,
    user: true
  }
}

Argument `userId`: Invalid value provided. Expected String, provided Int.
    at Cn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:29:1363)
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7177)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:310:30)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/schedule_service.test.js:296:30)
2025-04-08T12:31:28.228Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:31:28.234Z info [C -> new]: Initializing Schedule Service...
2025-04-08T12:31:29.647Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:31:30.837Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:31:30.913Z info [C -> ScheduleService.verifyAIServiceOrExit]: AI service verified successfully
2025-04-08T12:31:30.916Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:31:33.247Z info [C -> Context.<anonymous>]: Test user created: 833f4371-386d-42d1-bb53-780d5a36c540
2025-04-08T12:31:33.250Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:31:37.247Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:31:37.248Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 203
2025-04-08T12:31:38.856Z info [C -> Context.<anonymous>]: Study plan created: 203
2025-04-08T12:31:39.556Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:117:28)
2025-04-08T12:31:39.857Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:117:28)
2025-04-08T12:31:40.166Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:117:28)
2025-04-08T12:31:40.462Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:117:28)
2025-04-08T12:31:42.166Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:31:42.654Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 203
2025-04-08T12:31:44.779Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 203
2025-04-08T12:31:45.302Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:31:45.303Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:31:45.561Z info [C -> Context.<anonymous>]: Test user created: e64f6ff6-296b-4542-a962-9551bda16032
2025-04-08T12:31:45.562Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:31:46.891Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:31:46.892Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 204
2025-04-08T12:31:47.683Z info [C -> Context.<anonymous>]: Study plan created: 204
2025-04-08T12:31:47.686Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 204
2025-04-08T12:32:02.525Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:131:28)
2025-04-08T12:32:04.244Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:32:04.491Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 204
2025-04-08T12:32:06.408Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 204
2025-04-08T12:32:06.939Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:32:06.941Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:32:07.206Z info [C -> Context.<anonymous>]: Test user created: 5620049d-d9bb-42bc-84c9-bad2cebf0fef
2025-04-08T12:32:07.207Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:32:08.572Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:32:08.573Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 205
2025-04-08T12:32:09.393Z info [C -> Context.<anonymous>]: Study plan created: 205
2025-04-08T12:32:16.244Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:138:28)
2025-04-08T12:32:17.709Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:32:17.960Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 205
2025-04-08T12:32:19.591Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 205
2025-04-08T12:32:19.911Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:32:19.913Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:32:20.180Z info [C -> Context.<anonymous>]: Test user created: 861611f8-b04a-40ab-bbbe-85e53c5b51b3
2025-04-08T12:32:20.182Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:32:21.826Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:32:21.827Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 206
2025-04-08T12:32:22.646Z info [C -> Context.<anonymous>]: Study plan created: 206
2025-04-08T12:32:28.835Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:146:28)
2025-04-08T12:32:30.542Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:32:30.788Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 206
2025-04-08T12:32:32.421Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 206
2025-04-08T12:32:32.957Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:32:32.960Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:32:33.233Z info [C -> Context.<anonymous>]: Test user created: 336d9720-e45e-45ac-8c45-0f1be6500f9b
2025-04-08T12:32:33.234Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:32:34.599Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:32:34.600Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 207
2025-04-08T12:32:35.422Z info [C -> Context.<anonymous>]: Study plan created: 207
2025-04-08T12:32:40.757Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"18s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"18s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:155:28)
2025-04-08T12:32:42.219Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 207
2025-04-08T12:32:46.256Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"13s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"13s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:164:33)
2025-04-08T12:32:47.409Z error [C -> ScheduleService.generateTopicsForSubject]: Error generating topics: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"12s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"12s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateTopicsForSubject (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:675:30)
    at async ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:204:28)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:30)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:164:33)
2025-04-08T12:32:47.824Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"11s"}]}}
ClientError: got status: 429 Too Many Requests. {"error":{"code":429,"message":"You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.","status":"RESOURCE_EXHAUSTED","details":[{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash"},"quotaValue":"15"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"11s"}]}}
    at throwErrorIfNotOK (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7685:33)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:7502:13
    at async Models.generateContent (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@google\genai\dist\node\index.js:6332:20)
    at async ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:714:30)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:164:33)
2025-04-08T12:32:49.522Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:32:49.769Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 207
2025-04-08T12:32:51.396Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 207
2025-04-08T12:32:51.944Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:32:51.946Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:32:52.219Z info [C -> Context.<anonymous>]: Test user created: 5b77017d-8113-4b4b-9eb6-a0fdd7baf064
2025-04-08T12:32:52.220Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:32:53.709Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:32:53.710Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 208
2025-04-08T12:32:54.537Z info [C -> Context.<anonymous>]: Study plan created: 208
2025-04-08T12:33:01.278Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:170:28)
2025-04-08T12:33:02.869Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 208
2025-04-08T12:33:12.530Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:183:33)
2025-04-08T12:33:14.309Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:33:14.556Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 208
2025-04-08T12:33:16.195Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 208
2025-04-08T12:33:16.741Z info [C -> Context.<anonymous>]: Cleanup complete
2025-04-08T12:33:16.743Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:33:17.007Z info [C -> Context.<anonymous>]: Test user created: 84aa1a9c-4912-4800-ad85-89854ae85df8
2025-04-08T12:33:17.008Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:18.387Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:18.389Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 209
2025-04-08T12:33:19.482Z info [C -> Context.<anonymous>]: Study plan created: 209
2025-04-08T12:33:19.486Z error [C -> ScheduleService.generateDaySessions]: Error generating sessions: Invalid subjects array
Error: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:192:19)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:191:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-08T12:33:19.488Z error [C -> ScheduleService.generateDayContent]: Error generating content: Failed to generate sessions: Invalid subjects array
Error: Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDaySessions (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:235:15)
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:151:41)
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:40)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:191:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate.<anonymous> (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
2025-04-08T12:33:19.490Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
Error: error: Failed to generate content - Failed to generate sessions: Invalid subjects array
    at ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:174:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:191:17)
2025-04-08T12:33:19.494Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:33:19.743Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:95:17)
2025-04-08T12:33:19.745Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:33:20.011Z info [C -> Context.<anonymous>]: Test user created: 5c72dd88-d421-4bbe-a90a-cccf173200bd
2025-04-08T12:33:20.013Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:21.375Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:21.376Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 210
2025-04-08T12:33:22.196Z info [C -> Context.<anonymous>]: Study plan created: 210
2025-04-08T12:33:22.198Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 210
2025-04-08T12:33:22.199Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 210
2025-04-08T12:33:26.552Z info [C -> Context.<anonymous>]: Cleaning up test data...
2025-04-08T12:33:26.797Z error [C -> Context.<anonymous>]: Cleanup failed: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
PrismaClientKnownRequestError: 
Invalid `prisma.schedule.delete()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
    at Wn.handleRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:7534)
    at Wn.handleAndLogRequestError (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6858)
    at Wn.request (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:121:6565)
    at async l (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\@prisma\client\runtime\library.js:130:10067)
    at async ScheduleService.deleteSchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:609:20)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:95:17)
2025-04-08T12:33:26.799Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:33:27.063Z info [C -> Context.<anonymous>]: Test user created: 0c9d539d-72b8-4716-ad15-a9f2d8e2a73e
2025-04-08T12:33:27.064Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:29.046Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:29.049Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 211
2025-04-08T12:33:30.315Z info [C -> Context.<anonymous>]: Study plan created: 211
2025-04-08T12:33:33.470Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:33:35.622Z info [C -> Context.<anonymous>]: Test user created: e7c5748b-a5d0-4754-be79-3c912896a77e
2025-04-08T12:33:35.623Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:36.859Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:36.860Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 212
2025-04-08T12:33:37.594Z info [C -> Context.<anonymous>]: Study plan created: 212
2025-04-08T12:33:37.595Z info [C -> StudyPlanService.updatePlanById]: Updating study plan with id: 212
2025-04-08T12:33:42.673Z info [C -> Context.<anonymous>]: Setting up test data...
2025-04-08T12:33:44.863Z info [C -> Context.<anonymous>]: Test user created: a59b06be-b5c0-4416-864b-8784c108b5b6
2025-04-08T12:33:44.864Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:46.352Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:46.354Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 213
2025-04-08T12:33:47.098Z info [C -> Context.<anonymous>]: Study plan created: 213
2025-04-08T12:33:47.099Z info [C -> StudyPlanService.deletePlanById]: Deleting study plan with id: 213
2025-04-08T12:33:49.078Z info [C -> StudyPlanService.deletePlanById]: Successfully deleted study plan 213
2025-04-08T12:33:49.079Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 213
2025-04-08T12:33:49.329Z error [C -> StudyPlanService.getPlanById]: Error fetching plan with id 213: Study plan with id 213 not found
Error: Study plan with id 213 not found
    at StudyPlanService.getPlanById (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/study_plan_service.js:125:23)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:275:17)
2025-04-08T12:33:54.587Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:33:55.823Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:33:55.824Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 214
2025-04-08T12:34:04.905Z error [C -> ScheduleService.generateDailyTargets]: AI request failed: Empty response from AI
Error: Empty response from AI
    at ScheduleService.generateDailyTargets (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:733:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 1)
    at async ScheduleService.generateDayContent (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:160:44)
    at async ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:302:29)
    at async Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:316:28)
2025-04-08T12:34:06.941Z info [C -> StudyPlanService.createPlan]: Creating new study plan
2025-04-08T12:34:08.421Z info [C -> StudyPlanService.createPlan]: Study Plan Created:
2025-04-08T12:34:08.423Z info [C -> StudyPlanService.getPlanById]: Fetching study plan with id: 215
2025-04-08T12:34:09.174Z error [C -> ScheduleService.generateDaySchedule]: Schedule generation failed: Study plan is required
Error: Study plan is required
    at ScheduleService.generateDaySchedule (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/backend/services/schedule_service.js:298:23)
    at Context.<anonymous> (file:///C:/Users/Gaurav/Desktop/Projects/AI-Study-Planner/test/services.test.js:327:39)
    at callFn (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:364:21)
    at Runnable.run (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runnable.js:352:5)
    at Runner.runTest (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:677:10)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:800:12
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:592:14)
    at C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:602:7
    at next (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:485:14)
    at Immediate._onImmediate (C:\Users\Gaurav\Desktop\Projects\AI-Study-Planner\node_modules\mocha\lib\runner.js:570:5)
    at process.processImmediate (node:internal/timers:511:21)
